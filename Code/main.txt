                      (         main.asm):00001         ;
                      (         main.asm):00002         ;         ::::::::       ::::::::       :::::::       :::::::: 
                      (         main.asm):00003         ;       :+:    :+:     :+:    :+:     :+:   :+:     :+:    :+: 
                      (         main.asm):00004         ;      +:+                   +:+     +:+   +:+     +:+    +:+  
                      (         main.asm):00005         ;     +#++:++#+          +#++:      +#+   +:+      +#++:++#+   
                      (         main.asm):00006         ;    +#+    +#+            +#+     +#+   +#+            +#+    
                      (         main.asm):00007         ;   #+#    #+#     #+#    #+#     #+#   #+#     #+#    #+#     
                      (         main.asm):00008         ;   ########       ########       #######       ########       
                      (         main.asm):00009         ;
                      (         main.asm):00010         ; ****************************************************************************************
                      (         main.asm):00011         ; * 6309 project, code named LogicSpark-09
                      (         main.asm):00012         ; *
                      (         main.asm):00013         ; * http://microhobbyist.com
                      (         main.asm):00014         ; *
                      (         main.asm):00015         ; * Copyright (C) 2024 Frédéric Segard (MicroHobbyist)
                      (         main.asm):00016         ; *
                      (         main.asm):00017         ; * This library is free software; you can redistribute it and/or modify it under the
                      (         main.asm):00018         ; * terms of the GNU Lesser General Public License as published by the Free Software
                      (         main.asm):00019         ; * Foundation. You can use all or part of the code, regardless of the version. But there
                      (         main.asm):00020         ; * is no warrenty of any kind.
                      (         main.asm):00021         ; *
                      (         main.asm):00022         ; * Reference:  ASCII text: https://www.messletters.com/en/big-text/ (alligator, standard)
                      (         main.asm):00023         ; *             Editor tab-stops set to 4
                      (         main.asm):00024         ; *             Assembler: LWASM %1.asm --6309 --raw --output=%1.bin
                      (         main.asm):00025         ; *
                      (         main.asm):00026         ; * Hardware:   CPU: HD63C09E, ROM: SST39010A (128KB Flash), RAM: AS6C4008-55 (512KB SRAM)
                      (         main.asm):00027         ; *             COM1: R65C51 (ACIA->USB-B), Priority Interrupt Encoder
                      (         main.asm):00028         ; *             Memory Management Unit to manage 2MB of SRAM
                      (         main.asm):00029         ; ****************************************************************************************
                      (         main.asm):00030         
                      (         main.asm):00031         ; Revision
                      (         main.asm):00032         ; --------
     0000             (         main.asm):00033         RevMajor    EQU $00             ; Major revision number
     0007             (         main.asm):00034         RevMinor    EQU $07             ; Minor revision number
                      (         main.asm):00035         
                      (         main.asm):00036         ; Keystrokes and delimiters
                      (         main.asm):00037         ; -------------------------
     0000             (         main.asm):00038         NULL        EQU $00             ; End delimiter
     0008             (         main.asm):00039         BS          EQU $08             ; Backspace
     0009             (         main.asm):00040         TAB         EQU $09             ; Horizontal Tab
     000D             (         main.asm):00041         CR          EQU $0D             ; Carriage return
     000A             (         main.asm):00042         LF          EQU $0A             ; Line feed
     001B             (         main.asm):00043         ESC         EQU $1B             ; Escape
     0020             (         main.asm):00044         SPACE       EQU $20             ; Space
     00FF             (         main.asm):00045         EOD         EQU $FF             ; End of data, used by some routines
                      (         main.asm):00046         
                      (         main.asm):00047         ; Misc
                      (         main.asm):00048         ; ----
     A000             (         main.asm):00049         RomStart    EQU $A000           ; Start of ROM
     5F00             (         main.asm):00050         ShadowBlk   EQU $FF00-RomStart  ; Shadow code block size to copy
     0100             (         main.asm):00051         SysSize     EQU 256             ; Size of system stack
     0100             (         main.asm):00052         UsrSize     EQU 256             ; Size of user stack
     0100             (         main.asm):00053         BlkTblSize  EQU 256             ; Size of block table for bank RAM
     FC00             (         main.asm):00054         SysStack    EQU BlockTable      ; Position system stack before block table
     FB00             (         main.asm):00055         UsrStack    EQU SysStack-SysSize ; Position user stack before system stack
     FA00             (         main.asm):00056         StackEnd    EQU UsrStack-UsrSize ; End position of stacks
     0050             (         main.asm):00057         ScrHorzRes  EQU 80              ; Default horizontal screen size
     0018             (         main.asm):00058         ScrVertRes  EQU 24              ; Default vertical screen size
     0009             (         main.asm):00059         PromptSize  EQU 2+1+4+1+1       ; Bank + ':' + Current address + '>' + space
     0046             (         main.asm):00060         MaxCmdSize  EQU ScrHorzRes-PromptSize-1 ; Command prompt max size
     0010             (         main.asm):00061         BytePerLine EQU 16              ; Dump bytes per line. If screen = 80 then 16, else 8
                      (         main.asm):00062         
                      (         main.asm):00063         ; I/O addresses
                      (         main.asm):00064         ; -------------
     FF08             (         main.asm):00065         RomDisable  EQU $FF08           ; ROM disable (poke any value)
     FF09             (         main.asm):00066         IntVector   EQU $FF09           ; Priority Interrupt Controller (reads a vector value)
     FF90             (         main.asm):00067         INIT0       EQU $FF90           ; Init 0 register (bit 6 = MMU Enable)
     FF91             (         main.asm):00068         INIT1       EQU $FF91           ; Init 1 register (bit 0 to 4 = 32 bit tasks) 
     FFA0             (         main.asm):00069         TASK0       EQU $FFA0
     FFA8             (         main.asm):00070         TASK1       EQU $FFA8
                      (         main.asm):00071         
                      (         main.asm):00072         ; ----------------------------------------------------------------------------------------
                      (         main.asm):00073         
                      (         main.asm):00074             PRAGMA cd                   ; Detailed cycle count
                      (         main.asm):00075             PRAGMA ct                   ; Cycle count running subtotal
                      (         main.asm):00076                 
                      (         main.asm):00077                     ORG $0000                   ; Start of code
                      (         main.asm):00078                 
0000                  (         main.asm):00079                 Reset:
                      (         main.asm):00080                 
0000 1A50             (         main.asm):00081 (2)     2           orcc    #$50                ; Disable interrupts, just in case
0002 113D01           (         main.asm):00082 (5)     7           ldmd    #$01                ; Begin processing in 6309 native mode
                      (         main.asm):00083                 
                      (         main.asm):00084                 ; -------------------
                      (         main.asm):00085                 ; *** SHADOW COPY ***
                      (         main.asm):00086                 ; -------------------
                      (         main.asm):00087                 ; Copies everything to RAM, except the I/O region. RAM is writable but not readable,
                      (         main.asm):00088                 ; until RomDisable has been written to, at which point ROM is disabled until reset.
                      (         main.asm):00089                 
0005                  (         main.asm):00090                 ShadowCopy:
                      (         main.asm):00091                     ; Copies everything, except the IO region and vectors ($0000-$FF00)
0005 8E0000           (         main.asm):00092 (3)     10          ldx     #$0000              ; Source address: Read only ROM
0008 108E0000         (         main.asm):00093 (4)     14          ldy     #$0000              ; Destination address: Write only RAM
000C 1086FF00         (         main.asm):00094 (4)     18          ldw     #$FF00              ; Number of bytes to copy
0010 113812           (         main.asm):00095 (6+?)   24          tfm     X+,Y+               ; Transfer data and increment pointers
                      (         main.asm):00096                     ; Skip $FF00 to $FFF0       ; I/O range
                      (         main.asm):00097                     ; Copy the vectors ($FFF0-$FFFF)
0013 8EFFF0           (         main.asm):00098 (3)     27          ldx     #$FFF0              ; Source address: Read only ROM
0016 108EFFF0         (         main.asm):00099 (4)     31          ldy     #$FFF0              ; Destination address: Write only RAM
001A 10860010         (         main.asm):00100 (4)     35          ldw     #$0010              ; Number of bytes to copy (8x 16-bit vectors)
001E 113812           (         main.asm):00101 (6+?)   41          tfm     X+,Y+               ; Transfer data and increment pointers
0021 7EA000           (         main.asm):00102 (3)     44          jmp     Init
                      (         main.asm):00103                 
0024                  (         main.asm):00104                 ShadowEnd:
0024 0000000000000000 (         main.asm):00105                     FILL $00,Init-ShadowEnd     ; Fill RAM with $00 so RUN does not execute garbage
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     00000000
                      (         main.asm):00106                 
                      (         main.asm):00107                 ; ----------------------------------------------------------------------------------------
                      (         main.asm):00108                 
                      (         main.asm):00109                     PRAGMA cc
                      (         main.asm):00110                     
                      (         main.asm):00111                     ORG RomStart
                      (         main.asm):00112                 
A000                  (         main.asm):00113                 Init:
A000 B7FF08           (         main.asm):00114 (4)     4           sta     RomDisable          ; Poke any value to disable the ROM
                      (         main.asm):00115                 
                      (         main.asm):00116                     ; Clear the shadow copy code from lower RAM
A003 8E0100           (         main.asm):00117 (3)     7           ldx     #$0100              ; Source address containing saved value
A006 108E0000         (         main.asm):00118 (4)     11          ldy     #$0000              ; Destination address
A00A 10860100         (         main.asm):00119 (4)     15          ldw     #$0100              ; Number of bytes to copy (Clear page RTS)
A00E 113B12           (         main.asm):00120 (6+?)   21          tfm     X,Y+                ; Transfer data and increment pointers
                      (         main.asm):00121                 
A011                  (         main.asm):00122                 Warm:
                      (         main.asm):00123                     ; Configure the stacks
A011 CEFB00           (         main.asm):00124 (3)     24          ldu     #UsrStack           ; Set the user stack
A014 FFECD3           (         main.asm):00125 (5)     29          stu     RegU                ; Save user stack
A017 10CEFC00         (         main.asm):00126 (4)     33          lds     #SysStack           ; Sets the system stack
A01B 10FFECD5         (         main.asm):00127 (6)     39          sts     RegS                ; Save system stack
                      (         main.asm):00128                     
                      (         main.asm):00129                     ; Initialize peripherals
A01F BDA195           (         main.asm):00130 (7)     46          jsr     Com1Init            ; Initialize ACIA1
A022 BDA9B3           (         main.asm):00131 (7)     53          jsr     MmuReset            ; Initialize MMU
A025 BDAC39           (         main.asm):00132 (7)     60          jsr     PsgInit             ; Initialize PSG
                      (         main.asm):00133                     
                      (         main.asm):00134                     ; Print boot message
A028 BDA15F           (         main.asm):00135 (7)     67          jsr     Cls                 ; Clears the screen
A02B 8EB04D           (         main.asm):00136 (3)     70          ldx     #BootMsg            ; Print title
A02E BDA41F           (         main.asm):00137 (7)     77          jsr     OutStr              ;
A031 8600             (         main.asm):00138 (2)     79          lda     #RevMajor           ; Print major version
A033 BDA3E6           (         main.asm):00139 (7)     86          jsr     OutByteNLZ          ;
A036 862E             (         main.asm):00140 (2)     88          lda     #'.'                ; Print dot
A038 BDA1C2           (         main.asm):00141 (7)     95          jsr     OutChar             ;
A03B CC0007           (         main.asm):00142 (3)     98          ldd     #RevMinor           ; Print minor version
A03E BDA467           (         main.asm):00143 (7)     105         jsr     OutWordNLZ          ;
A041 BDA41F           (         main.asm):00144 (7)     112         jsr     OutStr              ;
A044 CCA000           (         main.asm):00145 (3)     115         ldd     #RomStart           ; Free RAM available
A047 BDA105           (         main.asm):00146 (7)     122         jsr     BinToBcd            ; Convert to BCD
A04A BDA39C           (         main.asm):00147 (7)     129         jsr     OutBcd
A04D BDA41F           (         main.asm):00148 (7)     136         jsr     OutStr
A050 CC0C1A           (         main.asm):00149 (3)     139         ldd     #StackEnd-VarEnd    ; Free shadow RAM left
A053 BDA105           (         main.asm):00150 (7)     146         jsr     BinToBcd            ; Convert to BCD
A056 BDA39C           (         main.asm):00151 (7)     153         jsr     OutBcd
A059 BDA41F           (         main.asm):00152 (7)     160         jsr     OutStr
                      (         main.asm):00153                 
A05C BDAF5D           (         main.asm):00154 (7)     167         jsr     BootTune            ; Play boot tune
                      (         main.asm):00155                     
                      (         main.asm):00156                     ; Clears some variables
A05F 7FECC5           (         main.asm):00157 (6)     173         clr     CurrAddress
A062 7FECC7           (         main.asm):00158 (6)     179         clr     CurrBank
A065 7FECC8           (         main.asm):00159 (6)     185         clr     RunFlag             ; 0 = Run not executed, Non-Zero = Run executed
                      (         main.asm):00160                     
                      (         main.asm):00161                     PRAGMA cc
                      (         main.asm):00162                 
A068                  (         main.asm):00163                 Main:
A068 BDA55B           (         main.asm):00164 (7)     7           jsr     CmdPrompt           ; Print the command prompt BB:AAAA> 
A06B C646             (         main.asm):00165 (2)     9           ldb     #MaxCmdSize         ; Command prompt max string size
A06D 8EEBC4           (         main.asm):00166 (3)     12          ldx     #InStrBuffer        ; Point to a memory address to write string to
A070 BDA30E           (         main.asm):00167 (7)     19          jsr     InStr               ; Read the a string
A073 24F3             (         main.asm):00168 (3)     22          bcc     Main                ; If no data in string then bypass parser
A075 BDA511           (         main.asm):00169 (7)     29          jsr     CmdParse            ; Parse prompt and execute command
                      (         main.asm):00170                     ; Save registers after execution of a run command
A078 3401             (         main.asm):00171 (4+1)   34          pshs    CC                  ; Save the CC as not to alter it to record the run return
A07A 7DECC8           (         main.asm):00172 (5)     39          tst     RunFlag             ; Is it returning from the run command?
A07D 2604             (         main.asm):00173 (3)     42          bne     MainRunExec         ; Yes it's returning from a run
A07F 3501             (         main.asm):00174 (4+1)   47          puls    CC                  ; Restore CC
A081 20E5             (         main.asm):00175 (3)     50          bra     Main                ; Loop back, without recording the resistors
A083                  (         main.asm):00176                 MainRunExec:
A083 3501             (         main.asm):00177 (4+1)   55          puls    CC                  ; Restore CC
A085 BDAB2E           (         main.asm):00178 (7)     62          jsr     PushRegisters       ; Save the state of the registers
A088 7FECC8           (         main.asm):00179 (6)     68          clr     RunFlag             ; Reset run flag
A08B 20DB             (         main.asm):00180 (3)     71          bra     Main                ; Loop back after recording the registers
                      (         main.asm):00181                 
                      (         main.asm):00182                 ;  ___                  _               _              
                      (         main.asm):00183                 ; |_ _|  _ __     ___  | |  _   _    __| |   ___   ___ 
                      (         main.asm):00184                 ;  | |  | '_ \   / __| | | | | | |  / _` |  / _ \ / __|
                      (         main.asm):00185                 ;  | |  | | | | | (__  | | | |_| | | (_| | |  __/ \__ \
                      (         main.asm):00186                 ; |___| |_| |_|  \___| |_|  \__,_|  \__,_|  \___| |___/
                      (         main.asm):00187                 ;
                      (         main.asm):00188                 ; Include files to segment code and data into manageable portions
                      (         main.asm):00189                 ; ---------------------------------------------------------------
                      (         main.asm):00190                 
                      (         main.asm):00191                     INCLUDE "convert.asm"       ; Conversion subroutines
                      (      convert.asm):00001                 ; ****************************************************************************************
                      (      convert.asm):00002                 ; * Subroutines             IN          OUT         Description
                      (      convert.asm):00003                 ; * --------------------------------------------------------------------------------------
                      (      convert.asm):00004                 ; * AscToBin:
                      (      convert.asm):00005                 ; *     AscToBinNibble      A           A           Convert 1 ASCII digit to a nibble
                      (      convert.asm):00006                 ; *     AscToBinByte        D           A           Convert 2 ASCII digits to a byte
                      (      convert.asm):00007                 ; *     AscToBinWord        Q           D           Convert 4 ASCII digits to a word
                      (      convert.asm):00008                 ; * BinToAsc: 
                      (      convert.asm):00009                 ; *     BinToAscNibble      A           A           Convert a nibble to 1 ASCII digit
                      (      convert.asm):00010                 ; *     BinToAscByte        A           D           Convert a byte to 2 ASCII digits
                      (      convert.asm):00011                 ; *     BinToAscWord        D           Q           Convert a word to 4 ASCII digits
                      (      convert.asm):00012                 ; * BinToBcd:               D           Q           Convert a word to BCD
                      (      convert.asm):00013                 ; * UpperCase:              A           A           Convert lower case to upper case
                      (      convert.asm):00014                 ; ****************************************************************************************
                      (      convert.asm):00015                 
                      (      convert.asm):00016                 ;     _                   _____           ____    _         
                      (      convert.asm):00017                 ;    / \     ___    ___  |_   _|   ___   | __ )  (_)  _ __  
                      (      convert.asm):00018                 ;   / _ \   / __|  / __|   | |    / _ \  |  _ \  | | | '_ \ 
                      (      convert.asm):00019                 ;  / ___ \  \__ \ | (__    | |   | (_) | | |_) | | | | | | |
                      (      convert.asm):00020                 ; /_/   \_\ |___/  \___|   |_|    \___/  |____/  |_| |_| |_|
                      (      convert.asm):00021                 ;
                      (      convert.asm):00022                 ; Convert ASCII hexadecimal number to binary nibble
                      (      convert.asm):00023                 ; =================================================
                      (      convert.asm):00024                 ; Input:    A = Single hexadecimal number
                      (      convert.asm):00025                 ; Output:   A = Binary nibble in LSB
                      (      convert.asm):00026                 
                      (      convert.asm):00027                     PRAGMA cc
                      (      convert.asm):00028                 
A08D                  (      convert.asm):00029                 AscToBinNibble:
A08D 3401             (      convert.asm):00030 (4+1)   5           pshs    CC
A08F BDA151           (      convert.asm):00031 (7)     12          jsr     UpperCase           ; Convert Hexadecimal characters to upper case
A092 8139             (      convert.asm):00032 (2)     14          cmpa    #'9'                ; See if it's 0-9 or 'A'-'F'
A094 2E04             (      convert.asm):00033 (3)     17          bgt     AscToBinNibbleAlpha ; If it's greater than, it's A to F
A096 8030             (      convert.asm):00034 (2)     19          suba    #$30                ; 
A098 2002             (      convert.asm):00035 (3)     22          bra     AscToBinNibbleEnd   ; End
A09A                  (      convert.asm):00036                 AscToBinNibbleAlpha:            ; If we fall through, carry is set unlike direct entry at nib2num
A09A 8037             (      convert.asm):00037 (2)     24          suba    #$37                ; 
A09C                  (      convert.asm):00038                 AscToBinNibbleEnd
A09C 840F             (      convert.asm):00039 (2)     26          anda    #$0F                ; Mask off MSB
A09E 3581             (      convert.asm):00040 (4+3)   33          puls    CC,PC
                      (      convert.asm):00041                 
                      (      convert.asm):00042                 ; Convert two ASCII hexadecimal characters
                      (      convert.asm):00043                 ; ========================================
                      (      convert.asm):00044                 ; Input:    D = 2 hex characters to convert
                      (      convert.asm):00045                 ; Output:   A = Binary number
                      (      convert.asm):00046                 ; Clobbers: B
                      (      convert.asm):00047                 
                      (      convert.asm):00048                     PRAGMA cc
                      (      convert.asm):00049                 
A0A0                  (      convert.asm):00050                 AscToBinByte:
A0A0 3401             (      convert.asm):00051 (4+1)   5           pshs    CC
A0A2 BDA08D           (      convert.asm):00052 (7)     12          jsr     AscToBinNibble      ; Convert A to 0..F numeric
A0A5 48               (      convert.asm):00053 (1)     13          asla                        ; Shift value to MSB
A0A6 48               (      convert.asm):00054 (1)     14          asla                        ;
A0A7 48               (      convert.asm):00055 (1)     15          asla                        ;
A0A8 48               (      convert.asm):00056 (1)     16          asla                        ; This is the upper nibble
A0A9 84F0             (      convert.asm):00057 (2)     18          anda    #$F0                ; Clear LSB
A0AB 1E89             (      convert.asm):00058 (5)     23          exg     A,B                 ; 
A0AD BDA08D           (      convert.asm):00059 (7)     30          jsr     AscToBinNibble      ; Convert to 0..F numeric
A0B0 103598           (      convert.asm):00060 (4)     34          orr     B,A                 ; Merge MSB (TEMP) and LSB (A)
A0B3 5F               (      convert.asm):00061 (1)     35          clrb
A0B4 3581             (      convert.asm):00062 (4+3)   42          puls    CC,PC
                      (      convert.asm):00063                 
                      (      convert.asm):00064                 ; Convert four ASCII hexadecimal characters
                      (      convert.asm):00065                 ; ========================================
                      (      convert.asm):00066                 ; Input:    Q = 4 hex characters to convert
                      (      convert.asm):00067                 ; Output:   D = Binary number
                      (      convert.asm):00068                 ; Clobbers: W
                      (      convert.asm):00069                 
                      (      convert.asm):00070                     PRAGMA cc
                      (      convert.asm):00071                 
A0B6                  (      convert.asm):00072                 AscToBinWord:
A0B6 3401             (      convert.asm):00073 (4+1)   5           pshs    CC
A0B8 BDA0A0           (      convert.asm):00074 (7)     12          jsr     AscToBinByte        ; Convert Ascii byte in D to binary in A
A0BB 1E06             (      convert.asm):00075 (5)     17          exg     D,W                 ; Get LSB of quad, while transfering the result from A to E
A0BD BDA0A0           (      convert.asm):00076 (7)     24          jsr     AscToBinByte        ; Convert Ascii byte in D to binary in A
A0C0 1F89             (      convert.asm):00077 (4)     28          tfr     A,B                 ; Place LSB from A to B
A0C2 1FE8             (      convert.asm):00078 (4)     32          tfr     E,A                 ; Place MSB from E to A
A0C4 105F             (      convert.asm):00079 (2)     34          clrw
A0C6 3581             (      convert.asm):00080 (4+3)   41          puls    CC,PC
                      (      convert.asm):00081                 
                      (      convert.asm):00082                 ;  ____    _           _____              _
                      (      convert.asm):00083                 ; | __ )  (_)  _ __   |_   _|   ___      / \     ___    ___
                      (      convert.asm):00084                 ; |  _ \  | | | '_ \    | |    / _ \    / _ \   / __|  / __|
                      (      convert.asm):00085                 ; | |_) | | | | | | |   | |   | (_) |  / ___ \  \__ \ | (__ 
                      (      convert.asm):00086                 ; |____/  |_| |_| |_|   |_|    \___/  /_/   \_\ |___/  \___|
                      (      convert.asm):00087                 ;
                      (      convert.asm):00088                 ; Binary to ASCII conversion (Nibble, Byte, Word, Quad)
                      (      convert.asm):00089                 ; =====================================================
                      (      convert.asm):00090                 
                      (      convert.asm):00091                 ; Convert a 4-bit nibble binary number to a byte of ASCII hexadecimal number
                      (      convert.asm):00092                 ; --------------------------------------------------------------------------
                      (      convert.asm):00093                 ; Input:    A = binary data (LSB of A: $00-$0F), MSB is ignored
                      (      convert.asm):00094                 ; Output:   A = Single alphanumeric character ('0'-'9', 'A'-'F')
                      (      convert.asm):00095                 
                      (      convert.asm):00096                     PRAGMA cc
                      (      convert.asm):00097                 
A0C8                  (      convert.asm):00098                 BinToAscNibble:
A0C8 3401             (      convert.asm):00099 (4+1)   5           pshs    CC
A0CA 840F             (      convert.asm):00100 (2)     7           anda    #$0F                ; Clear the MSB
A0CC 8109             (      convert.asm):00101 (2)     9           cmpa    #9                  ; See if it's numeric (0-9)
A0CE 2E04             (      convert.asm):00102 (3)     12          bgt     BinToAscNibbleAlpha ; No, then it's alpha
A0D0 8B30             (      convert.asm):00103 (2)     14          adda    #'0'                ; Else,convert $0 to $9 to ASCII '0' to '9'
A0D2 2002             (      convert.asm):00104 (3)     17          bra     BinToAscNibbleEnd   ; Exit
A0D4                  (      convert.asm):00105                 BinToAscNibbleAlpha:
A0D4 8B37             (      convert.asm):00106 (2)     19          adda    #'A'-10             ; Convert $A to $F to ASCII 'A' to 'F'
A0D6                  (      convert.asm):00107                 BinToAscNibbleEnd:
A0D6 3581             (      convert.asm):00108 (4+3)   26          puls    CC,PC
                      (      convert.asm):00109                     
                      (      convert.asm):00110                 ; Convert an 8-bit binary number to two bytes of ASCII hexadecimal numbers
                      (      convert.asm):00111                 ; ------------------------------------------------------------------------
                      (      convert.asm):00112                 ; Input:    A = 8-bit binary data (byte)
                      (      convert.asm):00113                 ; Output:   D = Dual ASCII characters (MSB in A, LSB in B)
                      (      convert.asm):00114                 
                      (      convert.asm):00115                     PRAGMA cc
                      (      convert.asm):00116                 
A0D8                  (      convert.asm):00117                 BinToAscByte:
A0D8 3401             (      convert.asm):00118 (4+1)   5           pshs    CC
A0DA 1038             (      convert.asm):00119 (6)     11          pshsw
A0DC 1F8E             (      convert.asm):00120 (4)     15          tfr     A,E                 ; Save A
A0DE 44               (      convert.asm):00121 (1)     16          lsra                        ; Shift the lower nibble
A0DF 44               (      convert.asm):00122 (1)     17          lsra                        ;   to upper nibble,
A0E0 44               (      convert.asm):00123 (1)     18          lsra                        ;   all the while zeroing
A0E1 44               (      convert.asm):00124 (1)     19          lsra                        ;   the upper nibble
A0E2 BDA0C8           (      convert.asm):00125 (7)     26          jsr     BinToAscNibble      ; Convert nibble to alphanumeric: In = A, Out = A
A0E5 3402             (      convert.asm):00126 (4+1)   31          pshs    A                   ; Store 1st hexadecimal ASCII number
A0E7 1FE8             (      convert.asm):00127 (4)     35          tfr     E,A                 ; Restore nibble from E
A0E9 BDA0C8           (      convert.asm):00128 (7)     42          jsr     BinToAscNibble      ; Convert nibble to alphanumeric: In = A, Out = A 
A0EC 1F89             (      convert.asm):00129 (4)     46          tfr     A,B                 ; Transfer to LSB of D
A0EE 3502             (      convert.asm):00130 (4+1)   51          puls    A                   ; Transfer to MSB of D
A0F0 1039             (      convert.asm):00131 (6)     57          pulsw
A0F2 3581             (      convert.asm):00132 (4+3)   64          puls    CC,PC
                      (      convert.asm):00133                 
                      (      convert.asm):00134                 ; Convert a 16-bit binary number to four bytes of ASCII hexadecimal numbers
                      (      convert.asm):00135                 ; -------------------------------------------------------------------------
                      (      convert.asm):00136                 ; Input:    D = 16-bit binary data (word)
                      (      convert.asm):00137                 ; Output:   Q = ASCII characters in A,B,E,F
                      (      convert.asm):00138                 
                      (      convert.asm):00139                     PRAGMA cc
                      (      convert.asm):00140                 
A0F4                  (      convert.asm):00141                 BinToAscWord:
A0F4 3406             (      convert.asm):00142 (4+2)   6           pshs    D
A0F6 BDA0D8           (      convert.asm):00143 (7)     13          jsr     BinToAscByte        ; Convert MSB in A to ASCII in D
A0F9 1F06             (      convert.asm):00144 (4)     17          tfr     D,W                 ; Save MSB result in W
A0FB 3506             (      convert.asm):00145 (4+2)   23          puls    D                   ; Recover original content
A0FD 1F98             (      convert.asm):00146 (4)     27          tfr     B,A                 ; Put B in A
A0FF BDA0D8           (      convert.asm):00147 (7)     34          jsr     BinToAscByte        ; Convert LSB in A (B) to ASCII in D
A102 1E06             (      convert.asm):00148 (5)     39          exg     D,W                 ; Invert D and W
A104 39               (      convert.asm):00149 (4)     43          rts
                      (      convert.asm):00150                 
                      (      convert.asm):00151                 ;  ____    _           _____           ____               _ 
                      (      convert.asm):00152                 ; | __ )  (_)  _ __   |_   _|   ___   | __ )    ___    __| |
                      (      convert.asm):00153                 ; |  _ \  | | | '_ \    | |    / _ \  |  _ \   / __|  / _` |
                      (      convert.asm):00154                 ; | |_) | | | | | | |   | |   | (_) | | |_) | | (__  | (_| |
                      (      convert.asm):00155                 ; |____/  |_| |_| |_|   |_|    \___/  |____/   \___|  \__,_|
                      (      convert.asm):00156                 ;
                      (      convert.asm):00157                 ; Binary to binary coded decimal (BCD)
                      (      convert.asm):00158                 ; ====================================
                      (      convert.asm):00159                 
                      (      convert.asm):00160                 ; Convert a 16-bit word binary number to up to five BCD numbers
                      (      convert.asm):00161                 ; -------------------------------------------------------------
                      (      convert.asm):00162                 ; Input:    D = 16-bit binary data
                      (      convert.asm):00163                 ; Output:   Q = 32-bit BCD data
                      (      convert.asm):00164                 
                      (      convert.asm):00165                     PRAGMA cc
                      (      convert.asm):00166                 
A105                  (      convert.asm):00167                 BinToBcd:
A105 3401             (      convert.asm):00168 (4+1)   5           pshs    CC
A107 7FECDC           (      convert.asm):00169 (6)     11          clr     TempQ1              ; Clear Q's High MSB byte
                      (      convert.asm):00170                     ; Calculate 10,000's digit
A10A 1F06             (      convert.asm):00171 (4)     15          tfr     D,W                 ; Q = DW
A10C 104F             (      convert.asm):00172 (2)     17          clrd                        ; Clear Q's MSB
A10E 118E2710         (      convert.asm):00173 (34)    51          divq    #10000              ; Divide Q by 10,000: Quotient in W, Remainder in D
A112 11F7ECDD         (      convert.asm):00174 (5)     56          stf     TempQ2              ; Save 10,000's digit to variable
                      (      convert.asm):00175                     ; Calculate 1,000's digit
A116 1F06             (      convert.asm):00176 (4)     60          tfr     D,W                 ; Transfer Remainder to LSB
A118 104F             (      convert.asm):00177 (2)     62          clrd                        ; Clear MSB
A11A 118E03E8         (      convert.asm):00178 (34)    96          divq    #1000               ; Divide Q by 1,000: Quotient in W, Remainder in D
A11E 1E06             (      convert.asm):00179 (5)     101         exg     D,W                 ; Exchange registers: Quotien is now in D, and remainder in W
A120 1048             (      convert.asm):00180 (2)     103         lsld                        ; Move 1,000's digit to high nibble
A122 1048             (      convert.asm):00181 (2)     105         lsld                        ;   Had to exchange D <-> W
A124 1048             (      convert.asm):00182 (2)     107         lsld                        ;   in order for lsld to work
A126 1048             (      convert.asm):00183 (2)     109         lsld                        ;
A128 F7ECDE           (      convert.asm):00184 (4)     113         stb     TempQ3              ; Save 1,000's digit for later or'ing with the 100's
                      (      convert.asm):00185                     ; Calculate 100's digit
A12B 1F60             (      convert.asm):00186 (4)     117         tfr     W,D                 ; Transfer remainder to D
A12D 118D64           (      convert.asm):00187 (25)    142         divd    #100                ; Divide D by 100: Quotient in B, Remainder in A
A130 3402             (      convert.asm):00188 (4+1)   147         pshs    A                   ; Save for 10's and 1's 
A132 B6ECDE           (      convert.asm):00189 (4)     151         lda     TempQ3              ; Load quotien from the 1000's
A135 103598           (      convert.asm):00190 (4)     155         orr     B,A                 ; Merge 1000's and 100's digits together
A138 B7ECDE           (      convert.asm):00191 (4)     159         sta     TempQ3              ; Save result to variable
                      (      convert.asm):00192                     ; Calculate the 10's and 1's digit
A13B 3504             (      convert.asm):00193 (4+1)   164         puls    B                   ; Place remainder in LSB of D
A13D 4F               (      convert.asm):00194 (1)     165         clra                        ; Clear MSB of D
A13E 118D0A           (      convert.asm):00195 (25)    190         divd    #10                 ; Divide D by 10: Quotient in B, Remainder in A
A141 58               (      convert.asm):00196 (1)     191         lslb                        ; Move 10's digit to high nibble
A142 58               (      convert.asm):00197 (1)     192         lslb                        ;
A143 58               (      convert.asm):00198 (1)     193         lslb                        ;
A144 58               (      convert.asm):00199 (1)     194         lslb                        ;
A145 103598           (      convert.asm):00200 (4)     198         orr     B,A                 ; Merge 10's and 1's digits together
A148 B7ECDF           (      convert.asm):00201 (4)     202         sta     TempQ4              ; Save result to Variable
A14B 10FCECDC         (      convert.asm):00202 (8)     210         ldq     TempQuad            ; Load Quad result
A14F 3581             (      convert.asm):00203 (4+3)   217         puls    CC,PC
                      (      convert.asm):00204                 
                      (      convert.asm):00205                 ;  _   _                                  ____                      
                      (      convert.asm):00206                 ; | | | |  _ __    _ __     ___   _ __   / ___|   __ _   ___    ___ 
                      (      convert.asm):00207                 ; | | | | | '_ \  | '_ \   / _ \ | '__| | |      / _` | / __|  / _ \
                      (      convert.asm):00208                 ; | |_| | | |_) | | |_) | |  __/ | |    | |___  | (_| | \__ \ |  __/
                      (      convert.asm):00209                 ;  \___/  | .__/  | .__/   \___| |_|     \____|  \__,_| |___/  \___|
                      (      convert.asm):00210                 ;         |_|     |_|                                               
                      (      convert.asm):00211                 ;
                      (      convert.asm):00212                 ; Convert character in A to uppercase
                      (      convert.asm):00213                 ; ===================================
                      (      convert.asm):00214                 ; Input:    A = anycase
                      (      convert.asm):00215                 ; Output:   A = UPPERCASE
                      (      convert.asm):00216                 
                      (      convert.asm):00217                     PRAGMA cc
                      (      convert.asm):00218                 
A151                  (      convert.asm):00219                 UpperCase:
A151 3401             (      convert.asm):00220 (4+1)   5           pshs    CC
A153 8161             (      convert.asm):00221 (2)     7           cmpa    #'a'                ; Is value less the 'a'?
A155 2D06             (      convert.asm):00222 (3)     10          blt     UpperCaseEnd        ; Then end subroutine
A157 817A             (      convert.asm):00223 (2)     12          cmpa    #'z'                ; Is value higher then 'z'?
A159 2E02             (      convert.asm):00224 (3)     15          bgt     UpperCaseEnd        ; Then end subroutine
A15B 8020             (      convert.asm):00225 (2)     17          suba    #$20                ; Substract $20 from the ASCII for upper case
A15D                  (      convert.asm):00226                 UpperCaseEnd:
A15D 3581             (      convert.asm):00227 (4+3)   24          puls    CC,PC
                      (      convert.asm):00228                     
                      (         main.asm):00192                     INCLUDE "io.asm"            ; Input and Output subroutines
                      (           io.asm):00001                 ; ****************************************************************************************
                      (           io.asm):00002                 ; * Subroutines         IN          OUT         Description
                      (           io.asm):00003                 ; * --------------------------------------------------------------------------------------
                      (           io.asm):00004                 ; * Cls                 .           .           Clear the screen
                      (           io.asm):00005                 ; * Com1Init            .           .           Initialize COM1 (USB)
                      (           io.asm):00006                 ; * Com1Rx                                      * (Com1RxWain)
                      (           io.asm):00007                 ; *   Com1RxWait        .           A           Read a character from COM1 (waiting)
                      (           io.asm):00008                 ; *   Com1RxNoWait      .           A,Carry     Read a character from COM1 (non-waiting)
                      (           io.asm):00009                 ; * Com1Tx              A           .           Sends a character to COM1
                      (           io.asm):00010                 ; * DelChar             B           .           Delete an amount of characters
                      (           io.asm):00011                 ; * GetStrByte          X           A,X,Cary    Get a byte from string
                      (           io.asm):00012                 ; * GetStrNibble        X           A,X,Cary    Get a nibble from string
                      (           io.asm):00013                 ; * GetStrWord          X           D,X,Cary    Get a word from string
                      (           io.asm):00014                 ; * InByte              .           A           Converts ASCII hex to a binary byte
                      (           io.asm):00015                 ; * InChar              .           A           * (Com1RxWait)
                      (           io.asm):00016                 ; * InCharNW            .           A,Carry     * (Com1RxNoWait)
                      (           io.asm):00017                 ; * InStr               B,X         B,X,Carry   Input string (size in B, string pointed in X)
                      (           io.asm):00018                 ; * InWord              .           D           Converts ASCII hex to a binary word
                      (           io.asm):00019                 ; * OutChar             A           .           * (Com1Tx)
                      (           io.asm):00020                 ; * OutByte                                     * (OutByteLZ)
                      (           io.asm):00021                 ; *   OutByteLZ         A           .           Print a byte to screen (with leading zero)
                      (           io.asm):00022                 ; *   OutByteNLZ        A           .           Print a byte to screen (no leading zero)
                      (           io.asm):00023                 ; * OutCRLF             .           .           Print a carriage return and a line feed
                      (           io.asm):00024                 ; * OutNibble                                   * (OutNibbleLSB)
                      (           io.asm):00025                 ; *   OutNibbleLSB      A           .           Print a nibble (LSB of A)
                      (           io.asm):00026                 ; *   OutNibbleMSB      A           .           Print a nibble (MSB of A)
                      (           io.asm):00027                 ; * OutStr                                      * (OutStrLZ)
                      (           io.asm):00028                 ; *   OutStrLZ          X           X           Print a string pointed by X (with leadig zeros)
                      (           io.asm):00029                 ; *   OutStrNLZ         X           X           Print a string pointed by X (no leading zeros)
                      (           io.asm):00030                 ; * OutWord                                     * (OutWordLZ)
                      (           io.asm):00031                 ; *   OutWordLZ         D           .           Print a word from binary data (with leading zeros)
                      (           io.asm):00032                 ; *   OutWordNLZ        D           .           Print a word from binary data (no leading zeros)
                      (           io.asm):00033                 
                      (           io.asm):00034                 ; ****************************************************************************************
                      (           io.asm):00035                 
                      (           io.asm):00036                 ; I/O addresses
                      (           io.asm):00037                 ; -------------
     FF68             (           io.asm):00038                 Com1_Data       = $FF68         ; Data register
     FF69             (           io.asm):00039                 Com1_Status     = $FF69         ; Read: Status Register, Write: Programmed Reset
     FF6A             (           io.asm):00040                 Com1_Command    = $FF6A         ; Command Register
     FF6B             (           io.asm):00041                 Com1_Control    = $FF6B         ; Control Register
                      (           io.asm):00042                 
                      (           io.asm):00043                 ;   ____   _       
                      (           io.asm):00044                 ;  / ___| | |  ___ 
                      (           io.asm):00045                 ; | |     | | / __|
                      (           io.asm):00046                 ; | |___  | | \__ \
                      (           io.asm):00047                 ;  \____| |_| |___/
                      (           io.asm):00048                 ;
                      (           io.asm):00049                 ;
                      (           io.asm):00050                 ; Clear terminal screen and set cursor to home position (upper-left)
                      (           io.asm):00051                 ; ==================================================================
                      (           io.asm):00052                 ; Uses VT compatible ANSI codes 
                      (           io.asm):00053                 
                      (           io.asm):00054                     PRAGMA cc
                      (           io.asm):00055                 
A15F                  (           io.asm):00056                 Cls:
                      (           io.asm):00057                     ; Clear Screen using ANSI/VT100 terminal control escape sequences
A15F 3406             (           io.asm):00058 (4+2)   6           pshs    D
A161 861B             (           io.asm):00059 (2)     8           lda     #ESC                ; Control sequence introducer
A163 BDA1C2           (           io.asm):00060 (7)     15          jsr     OutChar             ;
A166 865B             (           io.asm):00061 (2)     17          lda     #'['                ;
A168 BDA1C2           (           io.asm):00062 (7)     24          jsr     OutChar             ;
A16B 8632             (           io.asm):00063 (2)     26          lda     #'2'                ; Entire screen
A16D BDA1C2           (           io.asm):00064 (7)     33          jsr     OutChar             ;
A170 864A             (           io.asm):00065 (2)     35          lda     #'J'                ; Clear screen
A172 BDA1C2           (           io.asm):00066 (7)     42          jsr     OutChar             ;
                      (           io.asm):00067                     ; Home the cursor
A175 861B             (           io.asm):00068 (2)     44          lda     #ESC                ; Control sequence introducer
A177 BDA1C2           (           io.asm):00069 (7)     51          jsr     OutChar
A17A 865B             (           io.asm):00070 (2)     53          lda     #'['
A17C BDA1C2           (           io.asm):00071 (7)     60          jsr     OutChar
A17F 8631             (           io.asm):00072 (2)     62          lda     #'1'
A181 BDA1C2           (           io.asm):00073 (7)     69          jsr     OutChar
A184 863B             (           io.asm):00074 (2)     71          lda     #';'
A186 BDA1C2           (           io.asm):00075 (7)     78          jsr     OutChar
A189 8631             (           io.asm):00076 (2)     80          lda     #'1'
A18B BDA1C2           (           io.asm):00077 (7)     87          jsr     OutChar
A18E 8648             (           io.asm):00078 (2)     89          lda     #'H'
A190 BDA1C2           (           io.asm):00079 (7)     96          jsr     OutChar
A193 3586             (           io.asm):00080 (4+4)   104         puls    D,PC
                      (           io.asm):00081                 
                      (           io.asm):00082                 ;   ____                       _   ___           _   _   
                      (           io.asm):00083                 ;  / ___|   ___    _ __ ___   / | |_ _|  _ __   (_) | |_ 
                      (           io.asm):00084                 ; | |      / _ \  | '_ ` _ \  | |  | |  | '_ \  | | | __|
                      (           io.asm):00085                 ; | |___  | (_) | | | | | | | | |  | |  | | | | | | | |_ 
                      (           io.asm):00086                 ;  \____|  \___/  |_| |_| |_| |_| |___| |_| |_| |_|  \__|
                      (           io.asm):00087                 ;
                      (           io.asm):00088                 ;
                      (           io.asm):00089                 ; Serial port 1 initialization
                      (           io.asm):00090                 ; ============================
                      (           io.asm):00091                 
                      (           io.asm):00092                     PRAGMA cc
                      (           io.asm):00093                 
A195                  (           io.asm):00094                 Com1Init:
A195 3402             (           io.asm):00095 (4+1)   5           pshs    A
A197 8600             (           io.asm):00096 (2)     7           lda     #$00                ; Perform a software reset
A199 B7FF69           (           io.asm):00097 (4)     11          sta     Com1_Status
A19C 8610             (           io.asm):00098 (2)     13          lda     #%00010000          ; 1 stop bit, 8 data bits, 115200 baud
                      (           io.asm):00099                 ;   lda     #%00011111          ; 1 stop bit, 8 data bits, 19200 baud
A19E B7FF6B           (           io.asm):00100 (4)     17          sta     Com1_Control
A1A1 860B             (           io.asm):00101 (2)     19          lda     #%00001011          ; No parity, no echo, RTS low, DTR low
A1A3 B7FF6A           (           io.asm):00102 (4)     23          sta     Com1_Command
A1A6 3582             (           io.asm):00103 (4+3)   30          puls    A,PC
                      (           io.asm):00104                 
                      (           io.asm):00105                 ;   ____                       _   ____
                      (           io.asm):00106                 ;  / ___|   ___    _ __ ___   / | |  _ \  __  __
                      (           io.asm):00107                 ; | |      / _ \  | '_ ` _ \  | | | |_) | \ \/ /
                      (           io.asm):00108                 ; | |___  | (_) | | | | | | | | | |  _ <   >  <
                      (           io.asm):00109                 ;  \____|  \___/  |_| |_| |_| |_| |_| \_\ /_/\_\
                      (           io.asm):00110                 ;
                      (           io.asm):00111                 ;
                      (           io.asm):00112                 ; Serial port 1 receive character (waiting)
                      (           io.asm):00113                 ; =========================================
                      (           io.asm):00114                 ; Status bit 3 goes HIGH when the ACIA transfers data from the Receiver Shift
                      (           io.asm):00115                 ; Register to the Receiver Data Register and goes LOW when the processor reads the
                      (           io.asm):00116                 ; Receiver Data Register.
                      (           io.asm):00117                 ;
                      (           io.asm):00118                 ; Output:   A = Character received
                      (           io.asm):00119                 
                      (           io.asm):00120                     PRAGMA cc
                      (           io.asm):00121                 
A1A8                  (           io.asm):00122                 InChar:
A1A8                  (           io.asm):00123                 Com1RxWait:
A1A8 B6FF69           (           io.asm):00124 (4)     4           lda     Com1_Status         ; Load the ACIA's status in to the accumulator
A1AB 8408             (           io.asm):00125 (2)     6           anda    #%00001000          ; Check if there's data in the buffer
A1AD 27F9             (           io.asm):00126 (3)     9           beq     Com1RxWait          ; Loop untill buffer is empty
A1AF B6FF68           (           io.asm):00127 (4)     13          lda     Com1_Data           ; Load character from the data register
A1B2 39               (           io.asm):00128 (4)     17          rts
                      (           io.asm):00129                 
                      (           io.asm):00130                 ; Serial port 1 receive character (non-waiting)
                      (           io.asm):00131                 ; =============================================
                      (           io.asm):00132                 ; Output:   Carry bit clear = no character received.
                      (           io.asm):00133                 ;           Carry bit set = character received in A.
                      (           io.asm):00134                 
                      (           io.asm):00135                     PRAGMA cc
                      (           io.asm):00136                 
A1B3                  (           io.asm):00137                 InCharNW:
A1B3                  (           io.asm):00138                 Com1RxNoWait:
A1B3 1CFE             (           io.asm):00139 (2)     2           andcc   #$FE                ; Clear Carry to indicate no character is present
A1B5 B6FF69           (           io.asm):00140 (4)     6           lda     Com1_Status         ; Load ACIA1 status register
A1B8 8408             (           io.asm):00141 (2)     8           anda    #%00001000          ; Is there a character in the buffer?
A1BA 2705             (           io.asm):00142 (3)     11          beq     Com1RxNoWaitEnd     ; If not then end subroutine, with cleared carry
A1BC B6FF68           (           io.asm):00143 (4)     15          lda     Com1_Data           ; Read character from ACIA buffer
A1BF 1A01             (           io.asm):00144 (2)     17          orcc    #$01                ; Set carry flag to indicate a character is available
A1C1                  (           io.asm):00145                 Com1RxNoWaitEnd:
A1C1 39               (           io.asm):00146 (4)     21          rts
                      (           io.asm):00147                 
                      (           io.asm):00148                 ;   ____                       _   _____        
                      (           io.asm):00149                 ;  / ___|   ___    _ __ ___   / | |_   _| __  __
                      (           io.asm):00150                 ; | |      / _ \  | '_ ` _ \  | |   | |   \ \/ /
                      (           io.asm):00151                 ; | |___  | (_) | | | | | | | | |   | |    >  < 
                      (           io.asm):00152                 ;  \____|  \___/  |_| |_| |_| |_|   |_|   /_/\_\
                      (           io.asm):00153                 ;
                      (           io.asm):00154                 ;
                      (           io.asm):00155                 ; Serial port 1 transmit character
                      (           io.asm):00156                 ; ================================
                      (           io.asm):00157                 ; Write a character to Rockwell ACIA1. If using a WDC 65C51, use a delay instead of
                      (           io.asm):00158                 ; checking the transmit buffer flag (Known and documented Transmit bug in W65C51N).
                      (           io.asm):00159                 ;
                      (           io.asm):00160                 ; Status bit 4 goes HIGH when the ACIA transfers data from the Transmitter Data
                      (           io.asm):00161                 ; Register to the Transmitter Shift Register, and goes LOW when the processor writes
                      (           io.asm):00162                 ; new data onto the Transmitter Data Register.
                      (           io.asm):00163                 ;
                      (           io.asm):00164                 ; Input:    A = Character to transmit
                      (           io.asm):00165                 
                      (           io.asm):00166                     PRAGMA cc
                      (           io.asm):00167                 
A1C2                  (           io.asm):00168                 OutChar:
A1C2                  (           io.asm):00169                 Com1Tx:
A1C2 3402             (           io.asm):00170 (4+1)   5           pshs    A                   ; Save the character for later use
A1C4                  (           io.asm):00171                 Com1TxNotReady:
A1C4 B6FF69           (           io.asm):00172 (4)     9           lda     Com1_Status         ; Load the status register
A1C7 8410             (           io.asm):00173 (2)     11          anda    #%00010000          ; Is the transmit buffer full?
A1C9 27F9             (           io.asm):00174 (3)     14          beq     Com1TxNotReady      ; Yes, then check until it's empty
A1CB 3502             (           io.asm):00175 (4+1)   19          puls    A                   ; Restore the character
A1CD B7FF68           (           io.asm):00176 (4)     23          sta     Com1_Data           ; Send out the character
A1D0 39               (           io.asm):00177 (4)     27          rts
                      (           io.asm):00178                 
                      (           io.asm):00179                 ;  __  __   _   _   _   _                                           _ 
                      (           io.asm):00180                 ; |  \/  | (_) | | | | (_)  ___    ___    ___    ___    _ __     __| |
                      (           io.asm):00181                 ; | |\/| | | | | | | | | | / __|  / _ \  / __|  / _ \  | '_ \   / _` |
                      (           io.asm):00182                 ; | |  | | | | | | | | | | \__ \ |  __/ | (__  | (_) | | | | | | (_| |
                      (           io.asm):00183                 ; |_|  |_| |_| |_| |_| |_| |___/  \___|  \___|  \___/  |_| |_|  \__,_|
                      (           io.asm):00184                 ;
                      (           io.asm):00185                 ; Millisecond delay Loop
                      (           io.asm):00186                 ; ======================
                      (           io.asm):00187                 ; Input:    B = number of milliseconds to wait
                      (           io.asm):00188                 ; Regs      W = Loop counter (373)
                      (           io.asm):00189                 
                      (           io.asm):00190                 ; At 3 MHz, a cycle is 333.333ns. Each W loop is (2+3+3) x cycle = 2.666µs
                      (           io.asm):00191                 ; Raw loop times for 1ms / 2.667 = 375 W loops theoretically, not considering B loop and overhead
                      (           io.asm):00192                 ; Each B loop is (4+1+3) x cycle = 2.666µs. Subroutine overhead is (6+6+4) x cycle = 5.333µs
                      (           io.asm):00193                 ;
                      (           io.asm):00194                 ; 272: (falls behind)       373: (Constant & Optimal)       374: (Increases over time)
                      (           io.asm):00195                 ;  - 1 = 1.000000ms          - 1 = 1.002667ms                - 1 = 1.005333ms
                      (           io.asm):00196                 ;  - 10 = 9.976000ms         - 10 = 10.002667ms              - 10 = 10.029333ms
                      (           io.asm):00197                 ;  - 100 = 99.736000ms       - 100 = 100.002667ms            - 100 = 100.269333ms
                      (           io.asm):00198                 ;  - 250 = 249.336000ms      - 250 = 250.002667ms            - 250 = 250.669333ms
                      (           io.asm):00199                 
                      (           io.asm):00200                     PRAGMA cc
                      (           io.asm):00201                 
A1D1                  (           io.asm):00202                 Millisecond:
A1D1 1038             (           io.asm):00203 (6)     6           pshsw                       ; 6
A1D3                  (           io.asm):00204                 MillisecondBLoop:
A1D3 10860175         (           io.asm):00205 (4)     10          ldw     #373                ; 4     
A1D7                  (           io.asm):00206                 MillisecondWLoop:
A1D7 105A             (           io.asm):00207 (2)     12          decw                        ; 2
A1D9 2702             (           io.asm):00208 (3)     15          beq     MillisecondB        ; 3
A1DB 20FA             (           io.asm):00209 (3)     18          bra     MillisecondWLoop    ; 3
A1DD                  (           io.asm):00210                 MillisecondB:
A1DD 5A               (           io.asm):00211 (1)     19          decb                        ; 1
A1DE 26F3             (           io.asm):00212 (3)     22          bne     MillisecondBLoop    ; 3
A1E0                  (           io.asm):00213                 MillisecondEnd:
A1E0 1039             (           io.asm):00214 (6)     28          pulsw                       ; 6
A1E2 39               (           io.asm):00215 (4)     32          rts                         ; 4
                      (           io.asm):00216                 
                      (           io.asm):00217                 ;  ____           _    ____   _                    
                      (           io.asm):00218                 ; |  _ \    ___  | |  / ___| | |__     __ _   _ __ 
                      (           io.asm):00219                 ; | | | |  / _ \ | | | |     | '_ \   / _` | | '__|
                      (           io.asm):00220                 ; | |_| | |  __/ | | | |___  | | | | | (_| | | |   
                      (           io.asm):00221                 ; |____/   \___| |_|  \____| |_| |_|  \__,_| |_|   
                      (           io.asm):00222                 ;
                      (           io.asm):00223                 ; Delete a number of characters
                      (           io.asm):00224                 ; =============================
                      (           io.asm):00225                 ; Input:    B = Number of characters to delete
                      (           io.asm):00226                 
                      (           io.asm):00227                     PRAGMA cc
                      (           io.asm):00228                 
A1E3                  (           io.asm):00229                 DelChar:
A1E3 3406             (           io.asm):00230 (4+2)   6           pshs    D
A1E5 8608             (           io.asm):00231 (2)     8           lda     #BS                 ; Load the backspace character
A1E7                  (           io.asm):00232                 DelCharLoop:
A1E7 BDA1C2           (           io.asm):00233 (7)     15          jsr     OutChar             ; Print the backspace character
A1EA 8620             (           io.asm):00234 (2)     17          lda     #' '                ; Load the space character
A1EC BDA1C2           (           io.asm):00235 (7)     24          jsr     OutChar             ; Print it the space character
A1EF 8608             (           io.asm):00236 (2)     26          lda     #BS                 ; Load the backspace character
A1F1 BDA1C2           (           io.asm):00237 (7)     33          jsr     OutChar             ; Print it the backspace character
A1F4 5A               (           io.asm):00238 (1)     34          decb                        ; Decrement the character count
A1F5 26F0             (           io.asm):00239 (3)     37          bne     DelCharLoop         ; If not zero, then loop to delete another character
A1F7 3586             (           io.asm):00240 (4+4)   45          puls    D,PC
                      (           io.asm):00241                 
                      (           io.asm):00242                 ;   ____          _     ____    _            ____            _          
                      (           io.asm):00243                 ;  / ___|   ___  | |_  / ___|  | |_   _ __  | __ )   _   _  | |_    ___ 
                      (           io.asm):00244                 ; | |  _   / _ \ | __| \___ \  | __| | '__| |  _ \  | | | | | __|  / _ \
                      (           io.asm):00245                 ; | |_| | |  __/ | |_   ___) | | |_  | |    | |_) | | |_| | | |_  |  __/
                      (           io.asm):00246                 ;  \____|  \___|  \__| |____/   \__| |_|    |____/   \__, |  \__|  \___|
                      (           io.asm):00247                 ;                                                    |___/
                      (           io.asm):00248                 ;
                      (           io.asm):00249                 ; Read a byte from string in X, and converts to binary
                      (           io.asm):00250                 ; ====================================================
                      (           io.asm):00251                 ; Input:    X = String pointer
                      (           io.asm):00252                 ; Output:   A = Binary byte
                      (           io.asm):00253                 ;           X = Points to next character in string
                      (           io.asm):00254                 ;           Carry Clear = hex digit is not valid
                      (           io.asm):00255                 ;           Carry Set = hex digit is valid in A
                      (           io.asm):00256                 
A1F9                  (           io.asm):00257                 GetStrByte:
A1F9 3404             (           io.asm):00258 (4+1)   50          pshs    B
A1FB 1038             (           io.asm):00259 (6)     56          pshsw
A1FD 3410             (           io.asm):00260 (4+2)   62          pshs    X                   ; Save position
A1FF 5F               (           io.asm):00261 (1)     63          clrb                        ; Clear byte counter
A200 115F             (           io.asm):00262 (2)     65          clrf                        ; Clear byte storage
A202                  (           io.asm):00263                 GetStrByteCount:
A202 A680             (           io.asm):00264 (4+1)   70          lda     ,X+                 ; Load a character
A204 2707             (           io.asm):00265 (3)     73          beq     GetStrByteParse     ; If it's the end of the string, parse byte
A206 8120             (           io.asm):00266 (2)     75          cmpa    #' '                ; Is it a space delimiter
A208 2703             (           io.asm):00267 (3)     78          beq     GetStrByteParse     ; Yes, then parse byte
A20A 5C               (           io.asm):00268 (1)     79          incb                        ; Increment byte counter
A20B 20F5             (           io.asm):00269 (3)     82          bra     GetStrByteCount     ; Loop till delimiter found
A20D                  (           io.asm):00270                 GetStrByteParse:
A20D 3510             (           io.asm):00271 (4+2)   88          puls    X                   ; Restore position
A20F C100             (           io.asm):00272 (2)     90          cmpb    #0                  ; Is the counter = 0
A211 2732             (           io.asm):00273 (3)     93          beq     GetStrByteError     ; Yes, then set error flag
A213 C101             (           io.asm):00274 (2)     95          cmpb    #1                  ; Is it 1 character long
A215 2607             (           io.asm):00275 (3)     98          bne     GetStrByteParse2    ; No, then check if it's 2
A217 BDA268           (           io.asm):00276 (7)     105         jsr     GetStrNibble        ; Get a nibble
A21A 2429             (           io.asm):00277 (3)     108         bcc     GetStrByteError     ; If it's not a valid hex digit, then set error flag
A21C 2023             (           io.asm):00278 (3)     111         bra     GetStrByteGood      ; Exit indicating that it's a valid hex digit
A21E                  (           io.asm):00279                 GetStrByteParse2:
A21E C102             (           io.asm):00280 (2)     113         cmpb    #2                  ; Is it 2 character long
A220 2615             (           io.asm):00281 (3)     116         bne     GetStrByteParseMore ; No, then check if it's 3
A222 BDA268           (           io.asm):00282 (7)     123         jsr     GetStrNibble        ; Get a nibble
A225 241E             (           io.asm):00283 (3)     126         bcc     GetStrByteError     ; If it's not a valid hex digit, then set error flag
A227 48               (           io.asm):00284 (1)     127         asla                        ; Push nibble to MSB
A228 48               (           io.asm):00285 (1)     128         asla                        ;
A229 48               (           io.asm):00286 (1)     129         asla                        ;
A22A 48               (           io.asm):00287 (1)     130         asla                        ;
A22B 1F89             (           io.asm):00288 (4)     134         tfr     A,B                 ; Store byte in LSB of W
A22D BDA268           (           io.asm):00289 (7)     141         jsr     GetStrNibble        ; Get a nibble
A230 2413             (           io.asm):00290 (3)     144         bcc     GetStrByteError     ; If it's not a valid hex digit, then set error flag
A232 103598           (           io.asm):00291 (4)     148         orr     B,A                 ; Merge both nibbles as a byte
A235 200A             (           io.asm):00292 (3)     151         bra     GetStrByteGood      ; Exit indicating that it's a valid hex digit
A237                  (           io.asm):00293                 GetStrByteParseMore:
A237 B6ECC4           (           io.asm):00294 (4)     155         lda     CmdErrorPtr         ; Load error pointer
A23A 8B03             (           io.asm):00295 (2)     157         adda    #3                  ; Add 3 to it
A23C B7ECC4           (           io.asm):00296 (4)     161         sta     CmdErrorPtr         ; Store it back
A23F 2004             (           io.asm):00297 (3)     164         bra     GetStrByteError     ; Set error flag
A241                  (           io.asm):00298                 GetStrByteGood:
A241 1A01             (           io.asm):00299 (2)     166         orcc    #%00000001          ; Set Carry: Indicates the byte is ok
A243 2002             (           io.asm):00300 (3)     169         bra     GetStrByteEnd
A245                  (           io.asm):00301                 GetStrByteError:
A245 1CFE             (           io.asm):00302 (2)     171         andcc   #%11111110          ; Clear Carry: Indicates there an error
A247                  (           io.asm):00303                 GetStrByteEnd:
A247 1039             (           io.asm):00304 (6)     177         pulsw
A249 3584             (           io.asm):00305 (4+3)   184         puls    B,PC
                      (           io.asm):00306                 
A24B                  (           io.asm):00307                 GetStrByteFixed:
A24B 3404             (           io.asm):00308 (4+1)   189         pshs    B
A24D BDA268           (           io.asm):00309 (7)     196         jsr     GetStrNibble        ; Get a nibble
A250 2412             (           io.asm):00310 (3)     199         bcc     GetStrByteFixedErr  ; If it's not a valid hex digit, then set error flag
A252 48               (           io.asm):00311 (1)     200         asla                        ; Push nibble to MSB
A253 48               (           io.asm):00312 (1)     201         asla                        ;
A254 48               (           io.asm):00313 (1)     202         asla                        ;
A255 48               (           io.asm):00314 (1)     203         asla                        ;
A256 1F89             (           io.asm):00315 (4)     207         tfr     A,B                 ; Store byte in B
A258 BDA268           (           io.asm):00316 (7)     214         jsr     GetStrNibble        ; Get a nibble
A25B 2407             (           io.asm):00317 (3)     217         bcc     GetStrByteFixedErr  ; If it's not a valid hex digit, then set error flag
A25D 103598           (           io.asm):00318 (4)     221         orr     B,A                 ; Merge both nibbles as a byte
A260 1A01             (           io.asm):00319 (2)     223         orcc    #%00000001          ; Set Carry: Indicates the nibble is ok
A262 2002             (           io.asm):00320 (3)     226         bra     GetStrByteFixedEnd  ;
A264                  (           io.asm):00321                 GetStrByteFixedErr:
A264 1CFE             (           io.asm):00322 (2)     228         andcc   #%11111110          ; Clear Carry: Indicates there an error
A266                  (           io.asm):00323                 GetStrByteFixedEnd:
A266 3584             (           io.asm):00324 (4+3)   235         puls    B,PC
                      (           io.asm):00325                 
                      (           io.asm):00326                 ;   ____          _     ____    _            _   _   _   _       _       _        
                      (           io.asm):00327                 ;  / ___|   ___  | |_  / ___|  | |_   _ __  | \ | | (_) | |__   | |__   | |   ___ 
                      (           io.asm):00328                 ; | |  _   / _ \ | __| \___ \  | __| | '__| |  \| | | | | '_ \  | '_ \  | |  / _ \
                      (           io.asm):00329                 ; | |_| | |  __/ | |_   ___) | | |_  | |    | |\  | | | | |_) | | |_) | | | |  __/
                      (           io.asm):00330                 ;  \____|  \___|  \__| |____/   \__| |_|    |_| \_| |_| |_.__/  |_.__/  |_|  \___|
                      (           io.asm):00331                 ;
                      (           io.asm):00332                 ;
                      (           io.asm):00333                 ; Read a nibble from string in X, and converts to binary
                      (           io.asm):00334                 ; ======================================================
                      (           io.asm):00335                 ; Input:    X = String pointer
                      (           io.asm):00336                 ; Output:   A = Binary nibble in LSB
                      (           io.asm):00337                 ;           X = Points to next character in string
                      (           io.asm):00338                 ;           Carry Clear = hex digit is not valid
                      (           io.asm):00339                 ;           Carry Set = hex digit is valid in A
                      (           io.asm):00340                 
A268                  (           io.asm):00341                 GetStrNibble:
A268 A684             (           io.asm):00342 (4+0)   239         lda     ,X                  ; Get a character from string
A26A 2713             (           io.asm):00343 (3)     242         beq     GetStrNibbleError   ; Is it the end of the string? Yes, then error
A26C BDA151           (           io.asm):00344 (7)     249         jsr     UpperCase           ; No, then convert to uppercase
                      (           io.asm):00345                     ; Is it a valid hex character?
A26F 8130             (           io.asm):00346 (2)     251         cmpa    #'0'                ; Filter anything bellow the ASCII 0
A271 2D0C             (           io.asm):00347 (3)     254         blt     GetStrNibbleError   ; Is it less than '0'? Yes, then error
A273 8146             (           io.asm):00348 (2)     256         cmpa    #'F'                ; Filter anything above the ASCII F
A275 2E08             (           io.asm):00349 (3)     259         bgt     GetStrNibbleError   ; Is it greater than 'F'? Yes, then error
A277 8139             (           io.asm):00350 (2)     261         cmpa    #'9'                ; Filter anything above ASCII '9'
A279 2F08             (           io.asm):00351 (3)     264         ble     GetStrNibbleGood    ; Is it less or equal to '9'? Yes, then ok
A27B 8141             (           io.asm):00352 (2)     266         cmpa    #'A'                ; Filter anything below ASCII 'A'
A27D 2C04             (           io.asm):00353 (3)     269         bge     GetStrNibbleGood    ; Is it greater then or equal to 'A'? Yes, then ok
A27F                  (           io.asm):00354                 GetStrNibbleError:
A27F 1CFE             (           io.asm):00355 (2)     271         andcc   #$FE                ; Clear carry to indicate error
A281 2005             (           io.asm):00356 (3)     274         bra     GetStrNibbleEnd
A283                  (           io.asm):00357                 GetStrNibbleGood:
A283 BDA08D           (           io.asm):00358 (7)     281         jsr     AscToBinNibble
A286 1A01             (           io.asm):00359 (2)     283         orcc    #$01                ; Set carry to indicate valid number in A
A288                  (           io.asm):00360                 GetStrNibbleEnd:
A288 3001             (           io.asm):00361 (4+1)   288         leax    1,X                 ; Increment string pointer
A28A 7CECC4           (           io.asm):00362 (6)     294         inc     CmdErrorPtr         ; Advance error pointer
A28D 39               (           io.asm):00363 (4)     298         rts
                      (           io.asm):00364                     
                      (           io.asm):00365                 ;   ____          _     ____    _           __        __                     _ 
                      (           io.asm):00366                 ;  / ___|   ___  | |_  / ___|  | |_   _ __  \ \      / /   ___    _ __    __| |
                      (           io.asm):00367                 ; | |  _   / _ \ | __| \___ \  | __| | '__|  \ \ /\ / /   / _ \  | '__|  / _` |
                      (           io.asm):00368                 ; | |_| | |  __/ | |_   ___) | | |_  | |      \ V  V /   | (_) | | |    | (_| |
                      (           io.asm):00369                 ;  \____|  \___|  \__| |____/   \__| |_|       \_/\_/     \___/  |_|     \__,_|
                      (           io.asm):00370                 ;
                      (           io.asm):00371                 ;
                      (           io.asm):00372                 ; Read a word from string in X, and converts to binary
                      (           io.asm):00373                 ; ======================================================
                      (           io.asm):00374                 ; Input:    X = String pointer
                      (           io.asm):00375                 ; Output:   D = Binary word
                      (           io.asm):00376                 ;           X = Points to next character in string
                      (           io.asm):00377                 ;           Carry Clear = hex digit is not valid
                      (           io.asm):00378                 ;           Carry Set = hex digit is valid in D
                      (           io.asm):00379                 
A28E                  (           io.asm):00380                 GetStrWord:
A28E 1038             (           io.asm):00381 (6)     304         pshsw
A290 3410             (           io.asm):00382 (4+2)   310         pshs    X                   ; Save position
A292 5F               (           io.asm):00383 (1)     311         clrb                        ; Clear word counter
A293 105F             (           io.asm):00384 (2)     313         clrw                        ; Clear word storage
A295                  (           io.asm):00385                 GetStrWordCount:
A295 A680             (           io.asm):00386 (4+1)   318         lda     ,X+                 ; Load a character
A297 2707             (           io.asm):00387 (3)     321         beq     GetStrWordParse     ; If it's the end of the string, parse word
A299 8120             (           io.asm):00388 (2)     323         cmpa    #' '                ; Is it a space delimiter
A29B 2703             (           io.asm):00389 (3)     326         beq     GetStrWordParse     ; Yes, then parse word
A29D 5C               (           io.asm):00390 (1)     327         incb                        ; Increment byte counter
A29E 20F5             (           io.asm):00391 (3)     330         bra     GetStrWordCount     ; Loop till delimiter found
A2A0                  (           io.asm):00392                 GetStrWordParse:
A2A0 3510             (           io.asm):00393 (4+2)   336         puls    X                   ; Restore position
A2A2 C100             (           io.asm):00394 (2)     338         cmpb    #0                  ; Is the counter = 0
A2A4 2752             (           io.asm):00395 (3)     341         beq     GetStrWordError     ; Yes, then set error flag
A2A6 C101             (           io.asm):00396 (2)     343         cmpb    #1                  ; Is it 1 character long
A2A8 2609             (           io.asm):00397 (3)     346         bne     GetStrWordParse2    ; No, then check if it's 2
A2AA BDA268           (           io.asm):00398 (7)     353         jsr     GetStrNibble        ; Get a nibble
A2AD 2449             (           io.asm):00399 (3)     356         bcc     GetStrWordError     ; If it's not a valid hex digit, then set error flag
A2AF 1F8F             (           io.asm):00400 (4)     360         tfr     A,F                 ; Store nibble in LSB of W
A2B1 203F             (           io.asm):00401 (3)     363         bra     GetStrWordGood      ; Exit indicating that it's a valid hex digit
A2B3                  (           io.asm):00402                 GetStrWordParse2:
A2B3 C102             (           io.asm):00403 (2)     365         cmpb    #2                  ; Is it 2 character long
A2B5 2609             (           io.asm):00404 (3)     368         bne     GetStrWordParse3    ; No, then check if it's 3
A2B7 BDA24B           (           io.asm):00405 (7)     375         jsr     GetStrByteFixed     ; Get a byte
A2BA 243C             (           io.asm):00406 (3)     378         bcc     GetStrWordError     ; If it's not a valid hex digit, then set error flag
A2BC 1F8F             (           io.asm):00407 (4)     382         tfr     A,F                 ; Store byte in LSB of W
A2BE 2032             (           io.asm):00408 (3)     385         bra     GetStrWordGood      ; Exit indicating that it's a valid hex digit
A2C0                  (           io.asm):00409                 GetStrWordParse3:
A2C0 C103             (           io.asm):00410 (2)     387         cmpb    #3                  ; Is it 3 character long
A2C2 2610             (           io.asm):00411 (3)     390         bne     GetStrWordParse4    ; No, then check if it's 4
A2C4 BDA268           (           io.asm):00412 (7)     397         jsr     GetStrNibble        ; Get a nibble
A2C7 242F             (           io.asm):00413 (3)     400         bcc     GetStrWordError     ; If it's not a valid hex digit, then set error flag
A2C9 1F8E             (           io.asm):00414 (4)     404         tfr     A,E                 ; Store nibble in MSB of W
A2CB BDA24B           (           io.asm):00415 (7)     411         jsr     GetStrByteFixed     ; Get a byte
A2CE 2428             (           io.asm):00416 (3)     414         bcc     GetStrWordError     ; If it's not a valid hex digit, then set error flag
A2D0 1F8F             (           io.asm):00417 (4)     418         tfr     A,F                 ; Store byte in LSB of W
A2D2 201E             (           io.asm):00418 (3)     421         bra     GetStrWordGood      ; Exit indicating that it's a valid hex digit
A2D4                  (           io.asm):00419                 GetStrWordParse4:
A2D4 C104             (           io.asm):00420 (2)     423         cmpb    #4                  ; Is it 4 character long
A2D6 2610             (           io.asm):00421 (3)     426         bne     GetStrWordParseMore ; No, then check if it's longer
A2D8 BDA24B           (           io.asm):00422 (7)     433         jsr     GetStrByteFixed     ; Get a byte
A2DB 241B             (           io.asm):00423 (3)     436         bcc     GetStrWordError     ; If it's not a valid hex digit, then set error flag
A2DD 1F8E             (           io.asm):00424 (4)     440         tfr     A,E                 ; Store byte in MSB of W
A2DF BDA24B           (           io.asm):00425 (7)     447         jsr     GetStrByteFixed     ; Get a byte
A2E2 2414             (           io.asm):00426 (3)     450         bcc     GetStrWordError     ; If it's not a valid hex digit, then set error flag
A2E4 1F8F             (           io.asm):00427 (4)     454         tfr     A,F                 ; Store byte in LSB of W
A2E6 200A             (           io.asm):00428 (3)     457         bra     GetStrWordGood      ; Exit indicating that it's a valid hex digit
A2E8                  (           io.asm):00429                 GetStrWordParseMore:
A2E8 B6ECC4           (           io.asm):00430 (4)     461         lda     CmdErrorPtr         ; Load error pointer
A2EB 8B05             (           io.asm):00431 (2)     463         adda    #5                  ; Add 5 to it
A2ED B7ECC4           (           io.asm):00432 (4)     467         sta     CmdErrorPtr         ; Store it back
A2F0 2006             (           io.asm):00433 (3)     470         bra     GetStrWordError     ; Set error flag
A2F2                  (           io.asm):00434                 GetStrWordGood:
A2F2 1F60             (           io.asm):00435 (4)     474         tfr     W,D
A2F4 1A01             (           io.asm):00436 (2)     476         orcc    #%00000001          ; Set Carry: Indicates the word is ok
A2F6 2002             (           io.asm):00437 (3)     479         bra     GetStrWordEnd
A2F8                  (           io.asm):00438                 GetStrWordError:
A2F8 1CFE             (           io.asm):00439 (2)     481         andcc   #%11111110          ; Clear Carry: Indicates there an error
A2FA                  (           io.asm):00440                 GetStrWordEnd:
A2FA 1039             (           io.asm):00441 (6)     487         pulsw
A2FC 39               (           io.asm):00442 (4)     491         rts
                      (           io.asm):00443                 
                      (           io.asm):00444                 ;  ___           ____            _          
                      (           io.asm):00445                 ; |_ _|  _ __   | __ )   _   _  | |_    ___ 
                      (           io.asm):00446                 ;  | |  | '_ \  |  _ \  | | | | | __|  / _ \
                      (           io.asm):00447                 ;  | |  | | | | | |_) | | |_| | | |_  |  __/
                      (           io.asm):00448                 ; |___| |_| |_| |____/   \__, |  \__|  \___|
                      (           io.asm):00449                 ;                        |___/              
                      (           io.asm):00450                 ;
                      (           io.asm):00451                 ; Read a hexadecimal byte
                      (           io.asm):00452                 ; =======================
                      (           io.asm):00453                 ; Output:   A = Binary number converted from two ASCII characters read from stdin
                      (           io.asm):00454                 
                      (           io.asm):00455                     PRAGMA cc
                      (           io.asm):00456                 
A2FD                  (           io.asm):00457                 InByte:
A2FD 3405             (           io.asm):00458 (4+2)   6           pshs    B,CC
A2FF BDA1A8           (           io.asm):00459 (7)     13          jsr     InChar              ; Read first character in A
A302 1F89             (           io.asm):00460 (4)     17          tfr     A,B                 ; Save is in B temporarily
A304 BDA1A8           (           io.asm):00461 (7)     24          jsr     InChar              ; Read second character in A
A307 1E89             (           io.asm):00462 (5)     29          exg     A,B                 ; Swap both registers to put them in order
A309 BDA0A0           (           io.asm):00463 (7)     36          jsr     AscToBinByte        ; Convert 2 ASCII characters in D to a binary in A
A30C 3585             (           io.asm):00464 (4+4)   44          puls    B,CC,PC
                      (           io.asm):00465                 
                      (           io.asm):00466                 ;  ___           ____    _
                      (           io.asm):00467                 ; |_ _|  _ __   / ___|  | |_   _ __
                      (           io.asm):00468                 ;  | |  | '_ \  \___ \  | __| | '__|
                      (           io.asm):00469                 ;  | |  | | | |  ___) | | |_  | |
                      (           io.asm):00470                 ; |___| |_| |_| |____/   \__| |_|
                      (           io.asm):00471                 ;
                      (           io.asm):00472                 ;
                      (           io.asm):00473                 ; Read string from from stdin
                      (           io.asm):00474                 ; ===========================
                      (           io.asm):00475                 ; Reg used: E = current number of bytes counter
                      (           io.asm):00476                 ;           F = contains the original max number of bytes to read
                      (           io.asm):00477                 ;           Y = contains the original string pointer start
                      (           io.asm):00478                 ; Input:    B = max number of characters to read
                      (           io.asm):00479                 ;           X = Pointer to string (ex: InStrBuffer has a 256 bytes buffer)
                      (           io.asm):00480                 ; Output:   B = Actual number of characters read
                      (           io.asm):00481                 ;           X = Pointer to start of string, null terminated
                      (           io.asm):00482                 ;               Carry bit clear = no string recorded
                      (           io.asm):00483                 ;               Carry bit set = string in InStrBuffer
                      (           io.asm):00484                 
                      (           io.asm):00485                     PRAGMA cc
                      (           io.asm):00486                 
A30E                  (           io.asm):00487                 InStr:
A30E 3432             (           io.asm):00488 (4+5)   9           pshs    A,X,Y
A310 1038             (           io.asm):00489 (6)     15          pshsw
A312 1F12             (           io.asm):00490 (4)     19          tfr     X,Y                 ; Stores the starting address of the string
A314 1F9F             (           io.asm):00491 (4)     23          tfr     B,F                 ; Stores the original size of string to grab
A316 114F             (           io.asm):00492 (2)     25          clre                        ; Clear the current byte count
A318                  (           io.asm):00493                 InStrReadChar:
A318 BDA1A8           (           io.asm):00494 (7)     32          jsr     InChar              ; Wait for a character
                      (           io.asm):00495                     ;jsr        UpperCase   ; *** TEMPORARY
A31B 810D             (           io.asm):00496 (2)     34          cmpa    #CR                 ; Is it the Carriage Return key?
A31D 2748             (           io.asm):00497 (3)     37          beq     InStrPrintCR        ; Yes, then end string read
A31F 8108             (           io.asm):00498 (2)     39          cmpa    #BS                 ; Is it the Backspace key?
A321 270B             (           io.asm):00499 (3)     42          beq     InStrBackspace      ; Yes, then delete previous character
A323 811B             (           io.asm):00500 (2)     44          cmpa    #ESC                ; Has the ESC key been pressed?
A325 271E             (           io.asm):00501 (3)     47          beq     InStrEscape         ; Yes, then quit reading string and empty buffer
A327 2BEF             (           io.asm):00502 (3)     50          bmi     InStrReadChar       ; Don't accept ASCII character above 127?
A329 10379E           (           io.asm):00503 (4)     54          cmpr    B,E                 ; Has it reached the number of characters imposed by input?
A32C 2630             (           io.asm):00504 (3)     57          bne     InStrStoreChar      ; If the max number of characters has not been reached, store it
A32E                  (           io.asm):00505                 InStrBackspace:
A32E 103712           (           io.asm):00506 (4)     61          cmpr    X,Y                 ; Is it the first character in the string?
A331 27E5             (           io.asm):00507 (3)     64          beq     InStrReadChar       ; No characters present, so get a new character
A333 301F             (           io.asm):00508 (4+1)   69          leax    -1,X                ; Decrement string index
A335 114A             (           io.asm):00509 (2)     71          dece                        ; Decrement the current byte counter
A337 7AECC4           (           io.asm):00510 (6)     77          dec     CmdErrorPtr         ; Decrement the error pointer
A33A 3404             (           io.asm):00511 (4+1)   82          pshs    B                   ; Saves B
A33C C601             (           io.asm):00512 (2)     84          ldb     #1                  ; number of characters to delete
A33E BDA1E3           (           io.asm):00513 (7)     91          jsr     DelChar             ; Delete a character
A341 3504             (           io.asm):00514 (4+1)   96          puls    B                   ; Restores B
A343 20D3             (           io.asm):00515 (3)     99          bra     InStrReadChar       ; Go read next character
A345                  (           io.asm):00516                 InStrEscape:
A345 118100           (           io.asm):00517 (3)     102         cmpe    #0                  ; Is there a character in the buffer?
A348 27CE             (           io.asm):00518 (3)     105         beq     InStrReadChar       ; No, then read a character
A34A 3404             (           io.asm):00519 (4+1)   110         pshs    B                   ; Else, erase everyting
A34C 1FE9             (           io.asm):00520 (4)     114         tfr     E,B                 ; Amount of bytes to delete
A34E BDA1E3           (           io.asm):00521 (7)     121         jsr     DelChar             ; Delete the whole line
A351 3504             (           io.asm):00522 (4+1)   126         puls    B
A353 1F21             (           io.asm):00523 (4)     130         tfr     Y,X                 ; Restores string pointer position
A355 114F             (           io.asm):00524 (2)     132         clre                        ; Clear the byte count
A357 9609             (           io.asm):00525 (3)     135         lda     PromptSize
A359 B7ECC4           (           io.asm):00526 (4)     139         sta     CmdErrorPtr         ; Reset the error pointer position
A35C 20BA             (           io.asm):00527 (3)     142         bra     InStrReadChar       ; Restart by reading the first character
A35E                  (           io.asm):00528                 InStrStoreChar:
A35E BDA1C2           (           io.asm):00529 (7)     149         jsr     OutChar             ; Print character on terminal
A361 A780             (           io.asm):00530 (4+1)   154         sta     ,X+                 ; Add to the text buffer
A363 114C             (           io.asm):00531 (2)     156         ince                        ; Increment byte count
A365 20B1             (           io.asm):00532 (3)     159         bra     InStrReadChar       ; No? Read another character
A367                  (           io.asm):00533                 InStrPrintCR:
A367 BDA3F9           (           io.asm):00534 (7)     166         jsr     OutCRLF             ; Print carriage return
A36A 6F84             (           io.asm):00535 (6+0)   172         clr     ,X                  ; Add a null termination to the input buffer string
A36C 1FE9             (           io.asm):00536 (4)     176         tfr     E,B                 ; Saves actual bytes entered
A36E 118100           (           io.asm):00537 (3)     179         cmpe    #0                  ; Are there any characters in the buffer?
A371 2704             (           io.asm):00538 (3)     182         beq     InStrClearCarry     ; No characters, so go clear the carry flag
A373 1A01             (           io.asm):00539 (2)     184         orcc    #%00000001          ; Set Carry: Indicates there is data in buffer
A375 2002             (           io.asm):00540 (3)     187         bra     InStrEnd
A377                  (           io.asm):00541                 InStrClearCarry:
A377 1CFE             (           io.asm):00542 (2)     189         andcc   #%11111110          ; Clear Carry: Indicates there is no data in buffer
A379                  (           io.asm):00543                 InStrEnd:
A379 1039             (           io.asm):00544 (6)     195         pulsw
A37B 35B2             (           io.asm):00545 (4+7)   206         puls    A,X,Y,PC
                      (           io.asm):00546                 
                      (           io.asm):00547                 ;  ___          __        __                     _ 
                      (           io.asm):00548                 ; |_ _|  _ __   \ \      / /  ___    _ __    __| |
                      (           io.asm):00549                 ;  | |  | '_ \   \ \ /\ / /  / _ \  | '__|  / _` |
                      (           io.asm):00550                 ;  | |  | | | |   \ V  V /  | (_) | | |    | (_| |
                      (           io.asm):00551                 ; |___| |_| |_|    \_/\_/    \___/  |_|     \__,_|
                      (           io.asm):00552                 ;
                      (           io.asm):00553                 ;
                      (           io.asm):00554                 ; Read a hexadecimal word
                      (           io.asm):00555                 ; =======================
                      (           io.asm):00556                 ; Output:   D = Binary number converted from four ASCII characters read from stdin
                      (           io.asm):00557                 ; 
                      (           io.asm):00558                     PRAGMA cc
                      (           io.asm):00559                 
A37D                  (           io.asm):00560                 InWord:
A37D 3401             (           io.asm):00561 (4+1)   5           pshs    CC
A37F 1038             (           io.asm):00562 (6)     11          pshsw
A381 BDA1A8           (           io.asm):00563 (7)     18          jsr     InChar
A384 1F8F             (           io.asm):00564 (4)     22          tfr     A,F
A386 BDA1A8           (           io.asm):00565 (7)     29          jsr     InChar
A389 1F89             (           io.asm):00566 (4)     33          tfr     A,B
A38B BDA1A8           (           io.asm):00567 (7)     40          jsr     InChar
A38E 1F8E             (           io.asm):00568 (4)     44          tfr     A,E
A390 BDA1A8           (           io.asm):00569 (7)     51          jsr     InChar
A393 1E8F             (           io.asm):00570 (5)     56          exg     A,F
A395 BDA0B6           (           io.asm):00571 (7)     63          jsr     AscToBinWord
A398 1039             (           io.asm):00572 (6)     69          pulsw
A39A 3581             (           io.asm):00573 (4+3)   76          puls    CC,PC
                      (           io.asm):00574                 
                      (           io.asm):00575                 ;   ___            _     ____               _ 
                      (           io.asm):00576                 ;  / _ \   _   _  | |_  | __ )    ___    __| |
                      (           io.asm):00577                 ; | | | | | | | | | __| |  _ \   / __|  / _` |
                      (           io.asm):00578                 ; | |_| | | |_| | | |_  | |_) | | (__  | (_| |
                      (           io.asm):00579                 ;  \___/   \__,_|  \__| |____/   \___|  \__,_|
                      (           io.asm):00580                 ;
                      (           io.asm):00581                 ;
                      (           io.asm):00582                 ; Output BCD data, removing leading zeros
                      (           io.asm):00583                 ; =======================================
                      (           io.asm):00584                 ; Input:    Q = Data to print (ABEF)
                      (           io.asm):00585                 
A39C                  (           io.asm):00586                 OutBcd:
A39C 3420             (           io.asm):00587 (4+2)   82          pshs    Y
A39E 108E0000         (           io.asm):00588 (4)     86          ldy     #$0000              ; X = 0 indicates to skip leading 0
A3A2 BDA3BA           (           io.asm):00589 (7)     93          jsr     OutBcdSub           ; Process A
A3A5 1F98             (           io.asm):00590 (4)     97          tfr     B,A
A3A7 BDA3BA           (           io.asm):00591 (7)     104         jsr     OutBcdSub           ; Process B
A3AA 1FE8             (           io.asm):00592 (4)     108         tfr     E,A
A3AC BDA3BA           (           io.asm):00593 (7)     115         jsr     OutBcdSub           ; Process E
A3AF 1FF8             (           io.asm):00594 (4)     119         tfr     F,A
A3B1 108E0001         (           io.asm):00595 (4)     123         ldy     #$0001              ; X = 1 indicates to keep the last 0
A3B5 BDA3BA           (           io.asm):00596 (7)     130         jsr     OutBcdSub           ; Process F
A3B8 35A0             (           io.asm):00597 (4+4)   138         puls    Y,PC
                      (           io.asm):00598                 
A3BA                  (           io.asm):00599                 OutBcdSub:
A3BA 3402             (           io.asm):00600 (4+1)   143         pshs    A                   ; Save A for LSB
A3BC 44               (           io.asm):00601 (1)     144         lsra                        ; Shift MSB to LSB
A3BD 44               (           io.asm):00602 (1)     145         lsra                        ;
A3BE 44               (           io.asm):00603 (1)     146         lsra                        ;
A3BF 44               (           io.asm):00604 (1)     147         lsra                        ;
A3C0 4D               (           io.asm):00605 (1)     148         tsta                        ; Check A
A3C1 2703             (           io.asm):00606 (3)     151         beq     OutBcdSubLSB        ; If it's 0, skip printing, and check LSB
A3C3 BDA407           (           io.asm):00607 (7)     158         jsr     OutNibble
A3C6                  (           io.asm):00608                 OutBcdSubLSB:
A3C6 3502             (           io.asm):00609 (4+1)   163         puls    A
A3C8 840F             (           io.asm):00610 (2)     165         anda    #$0F
A3CA 108C0000         (           io.asm):00611 (4)     169         cmpy    #$0000              ; Check if 0 is to be printed
A3CE 2603             (           io.asm):00612 (3)     172         bne     OutBcdSubLSB2
A3D0 4D               (           io.asm):00613 (1)     173         tsta
A3D1 2703             (           io.asm):00614 (3)     176         beq     OutBcdSubEnd
A3D3                  (           io.asm):00615                 OutBcdSubLSB2:
A3D3 BDA407           (           io.asm):00616 (7)     183         jsr     OutNibble
A3D6                  (           io.asm):00617                 OutBcdSubEnd:
A3D6 39               (           io.asm):00618 (4)     187         rts
                      (           io.asm):00619                 
                      (           io.asm):00620                 ;   ___            _     ____            _          
                      (           io.asm):00621                 ;  / _ \   _   _  | |_  | __ )   _   _  | |_    ___ 
                      (           io.asm):00622                 ; | | | | | | | | | __| |  _ \  | | | | | __|  / _ \
                      (           io.asm):00623                 ; | |_| | | |_| | | |_  | |_) | | |_| | | |_  |  __/
                      (           io.asm):00624                 ;  \___/   \__,_|  \__| |____/   \__, |  \__|  \___|
                      (           io.asm):00625                 ;                                |___/
                      (           io.asm):00626                 ;
                      (           io.asm):00627                 ; Print a byte as 2 ASCII characters
                      (           io.asm):00628                 ; ==================================
                      (           io.asm):00629                 ; Input:    A = Byte to output
                      (           io.asm):00630                 
                      (           io.asm):00631                     PRAGMA cc
                      (           io.asm):00632                 
A3D7                  (           io.asm):00633                 OutByte:
A3D7                  (           io.asm):00634                 OutByteLZ:
A3D7 3407             (           io.asm):00635 (4+3)   7           pshs    A,B,CC
A3D9 BDA0D8           (           io.asm):00636 (7)     14          jsr     BinToAscByte        ; In A = binary byte, Out D = ASCII characters
A3DC BDA1C2           (           io.asm):00637 (7)     21          jsr     OutChar             ; Print MSB in A
A3DF 1F98             (           io.asm):00638 (4)     25          tfr     B,A                 ; Transfer LSB in A
A3E1 BDA1C2           (           io.asm):00639 (7)     32          jsr     OutChar             ; Print LSB that is now in A
A3E4 3587             (           io.asm):00640 (4+5)   41          puls    A,B,CC,PC
                      (           io.asm):00641                 
                      (           io.asm):00642                 ; Print a byte as 2 ASCII characters, without a leading zero
                      (           io.asm):00643                 ; ==========================================================
                      (           io.asm):00644                 ; Input:    A = Byte to output
                      (           io.asm):00645                 
                      (           io.asm):00646                     PRAGMA cc
                      (           io.asm):00647                 
A3E6                  (           io.asm):00648                 OutByteNLZ:
A3E6 3407             (           io.asm):00649 (4+3)   7           pshs    A,B,CC
A3E8 BDA0D8           (           io.asm):00650 (7)     14          jsr     BinToAscByte        ; In A = binary byte, Out D = ASCII characters
A3EB 8130             (           io.asm):00651 (2)     16          cmpa    #'0'                ; Is the MSB a ASCII '0'?
A3ED 2703             (           io.asm):00652 (3)     19          beq     OutByteDigit1NLZ    ; If it is, then skip printing the first digit
A3EF BDA1C2           (           io.asm):00653 (7)     26          jsr     OutChar             ; Print MSB in A
A3F2                  (           io.asm):00654                 OutByteDigit1NLZ:   
A3F2 1F98             (           io.asm):00655 (4)     30          tfr     B,A                 ; Transfer LSB in A
A3F4 BDA1C2           (           io.asm):00656 (7)     37          jsr     OutChar             ; Print LSB that is now in A
A3F7 3587             (           io.asm):00657 (4+5)   46          puls    A,B,CC,PC
                      (           io.asm):00658                 
                      (           io.asm):00659                 ;   ___            _      ____   ____    _       _____ 
                      (           io.asm):00660                 ;  / _ \   _   _  | |_   / ___| |  _ \  | |     |  ___|
                      (           io.asm):00661                 ; | | | | | | | | | __| | |     | |_) | | |     | |_   
                      (           io.asm):00662                 ; | |_| | | |_| | | |_  | |___  |  _ <  | |___  |  _|  
                      (           io.asm):00663                 ;  \___/   \__,_|  \__|  \____| |_| \_\ |_____| |_|    
                      (           io.asm):00664                 ;
                      (           io.asm):00665                 ; Print a carriage return and linefeed
                      (           io.asm):00666                 ; ====================================
                      (           io.asm):00667                 
                      (           io.asm):00668                     PRAGMA cc
                      (           io.asm):00669                 
A3F9                  (           io.asm):00670                 OutCRLF:
A3F9 3403             (           io.asm):00671 (4+2)   6           pshs    A,CC
A3FB 860D             (           io.asm):00672 (2)     8           lda     #CR
A3FD BDA1C2           (           io.asm):00673 (7)     15          jsr     OutChar
A400 860A             (           io.asm):00674 (2)     17          lda     #LF
A402 BDA1C2           (           io.asm):00675 (7)     24          jsr     OutChar
A405 3583             (           io.asm):00676 (4+4)   32          puls    A,CC,PC
                      (           io.asm):00677                 
                      (           io.asm):00678                 ;   ___            _     _   _   _   _       _       _        
                      (           io.asm):00679                 ;  / _ \   _   _  | |_  | \ | | (_) | |__   | |__   | |   ___ 
                      (           io.asm):00680                 ; | | | | | | | | | __| |  \| | | | | '_ \  | '_ \  | |  / _ \
                      (           io.asm):00681                 ; | |_| | | |_| | | |_  | |\  | | | | |_) | | |_) | | | |  __/
                      (           io.asm):00682                 ;  \___/   \__,_|  \__| |_| \_| |_| |_.__/  |_.__/  |_|  \___|
                      (           io.asm):00683                 ;
                      (           io.asm):00684                 ; Print LSB nibble as an ASCII character
                      (           io.asm):00685                 ; ====================================
                      (           io.asm):00686                 ; Input:    A = Nibble to output
                      (           io.asm):00687                 
                      (           io.asm):00688                     PRAGMA cc
                      (           io.asm):00689                 
A407                  (           io.asm):00690                 OutNibble:
A407                  (           io.asm):00691                 OutNibbleLSB:
A407 3403             (           io.asm):00692 (4+2)   6           pshs    A,CC
A409 BDA0C8           (           io.asm):00693 (7)     13          jsr     BinToAscNibble      ; Print LSB nibble
A40C BDA1C2           (           io.asm):00694 (7)     20          jsr     OutChar
A40F 3583             (           io.asm):00695 (4+4)   28          puls    A,CC,PC
                      (           io.asm):00696                 
                      (           io.asm):00697                 ; Print LSB nibble as an ASCII character
                      (           io.asm):00698                 ; ====================================
                      (           io.asm):00699                 ; Input:    A = Nibble to output
                      (           io.asm):00700                 
                      (           io.asm):00701                     PRAGMA cc
                      (           io.asm):00702                 
A411                  (           io.asm):00703                 OutNibbleMSB:
A411 3403             (           io.asm):00704 (4+2)   6           pshs    A,CC
A413 44               (           io.asm):00705 (1)     7           lsra                        ; Shift the upper nibble to the lower nibble,
A414 44               (           io.asm):00706 (1)     8           lsra                        ;   all the while clearing the upper nibble with 0
A415 44               (           io.asm):00707 (1)     9           lsra                        ;
A416 44               (           io.asm):00708 (1)     10          lsra                        ;
A417 BDA0C8           (           io.asm):00709 (7)     17          jsr     BinToAscNibble      ; Print MSB nibble
A41A BDA1C2           (           io.asm):00710 (7)     24          jsr     OutChar
A41D 3583             (           io.asm):00711 (4+4)   32          puls    A,CC,PC
                      (           io.asm):00712                 
                      (           io.asm):00713                 ;   ___            _     ____    _
                      (           io.asm):00714                 ;  / _ \   _   _  | |_  / ___|  | |_   _ __
                      (           io.asm):00715                 ; | | | | | | | | | __| \___ \  | __| | '__|
                      (           io.asm):00716                 ; | |_| | | |_| | | |_   ___) | | |_  | |
                      (           io.asm):00717                 ;  \___/   \__,_|  \__| |____/   \__| |_|
                      (           io.asm):00718                 ;
                      (           io.asm):00719                 ; Print a string to the screen
                      (           io.asm):00720                 ; ============================
                      (           io.asm):00721                 ; Input:    X = Address of string to print
                      (           io.asm):00722                 ; Output:   X = Address of next string (if any)
                      (           io.asm):00723                 
                      (           io.asm):00724                     PRAGMA cc
                      (           io.asm):00725                 
A41F                  (           io.asm):00726                 OutStr:
A41F                  (           io.asm):00727                 OutStrLZ:
A41F 3403             (           io.asm):00728 (4+2)   6           pshs    A,CC
A421                  (           io.asm):00729                 OutStrLoop:
A421 A680             (           io.asm):00730 (4+1)   11          lda     ,X+                 ; Read character pointed by X, then increments X
A423 2709             (           io.asm):00731 (3)     14          beq     OutStrEnd           ; End routine if end of string (null) has been reached
A425 81FF             (           io.asm):00732 (2)     16          cmpa    #EOD                ; Is second terminator detected?
A427 2705             (           io.asm):00733 (3)     19          beq     OutStrEnd           ; End routine if end of string (EOD) has been reached
A429 17FD96           (           io.asm):00734 (7)     26          lbsr    OutChar             ; Print character
A42C 20F3             (           io.asm):00735 (3)     29          bra     OutStrLoop          ; Loop to get the next character
A42E                  (           io.asm):00736                 OutStrEnd:
A42E 3583             (           io.asm):00737 (4+4)   37          puls    A,CC,PC
                      (           io.asm):00738                 
                      (           io.asm):00739                 ; Print a string to the screen without leading zeros
                      (           io.asm):00740                 ; ==================================================
                      (           io.asm):00741                 ; Input:    X = Address of string to print
                      (           io.asm):00742                 ; Output:   X = Address of next string (if any)
                      (           io.asm):00743                 
                      (           io.asm):00744                     PRAGMA cc
                      (           io.asm):00745                 
A430                  (           io.asm):00746                 OutStrNLZ:
A430 3407             (           io.asm):00747 (4+3)   7           pshs    A,B,CC
A432 5F               (           io.asm):00748 (1)     8           clrb                        ; Clear B register as a leading zero flag 
A433                  (           io.asm):00749                 OutStrNLZLoop:
A433 A680             (           io.asm):00750 (4+1)   13          lda     ,X+                 ; Read character pointed by X, then increments X
A435 81FF             (           io.asm):00751 (2)     15          cmpa    #EOD                ; Is second (End of Data) terminator detected?
A437 270F             (           io.asm):00752 (3)     18          beq     OutStrNLZEnd        ; End routine if end of string (EOD) has been reached
A439 8130             (           io.asm):00753 (2)     20          cmpa    #'0'                ; Is it a zero?
A43B 2604             (           io.asm):00754 (3)     23          bne     OutStrNLZPrintChar  ; No then go print the character
A43D 8100             (           io.asm):00755 (2)     25          cmpa    #0                  ; Yes, but is it a leading zero (as opposed to embedded zeros)
A43F 27F2             (           io.asm):00756 (3)     28          beq     OutStrNLZLoop       ; Yes, it's a leading zero, not an embedded one
A441                  (           io.asm):00757                 OutStrNLZPrintChar:
A441 1F89             (           io.asm):00758 (4)     32          tfr     A,B                 ; Store non-zero as flag to no longer look for leading zeros
A443 BDA1C2           (           io.asm):00759 (7)     39          jsr     OutChar             ; Print character
A446 20EB             (           io.asm):00760 (3)     42          bra     OutStrNLZLoop       ; Loop to get the next character
A448                  (           io.asm):00761                 OutStrNLZEnd:
A448 3587             (           io.asm):00762 (4+5)   51          puls    A,B,CC,PC
                      (           io.asm):00763                 
                      (           io.asm):00764                 ;   ___            _    __        __                     _ 
                      (           io.asm):00765                 ;  / _ \   _   _  | |_  \ \      / /   ___    _ __    __| |
                      (           io.asm):00766                 ; | | | | | | | | | __|  \ \ /\ / /   / _ \  | '__|  / _` |
                      (           io.asm):00767                 ; | |_| | | |_| | | |_    \ V  V /   | (_) | | |    | (_| |
                      (           io.asm):00768                 ;  \___/   \__,_|  \__|    \_/\_/     \___/  |_|     \__,_|
                      (           io.asm):00769                 ;
                      (           io.asm):00770                 ; Print a word as 4 ASCII characters
                      (           io.asm):00771                 ; ==================================
                      (           io.asm):00772                 ; Input:    D = Word to output
                      (           io.asm):00773                 
                      (           io.asm):00774                     PRAGMA cc
                      (           io.asm):00775                 
A44A                  (           io.asm):00776                 OutWord:
A44A 3407             (           io.asm):00777 (4+3)   7           pshs    A,B,CC
A44C 1038             (           io.asm):00778 (6)     13          pshsw
A44E BDA0F4           (           io.asm):00779 (7)     20          jsr     BinToAscWord        ; In D = binary word, Out Q = ASCII characters
A451 BDA1C2           (           io.asm):00780 (7)     27          jsr     OutChar             ; Print 4th digit
A454 1F98             (           io.asm):00781 (4)     31          tfr     B,A                 ; Transfer 3rd digit in A
A456 BDA1C2           (           io.asm):00782 (7)     38          jsr     OutChar             ; Print 3rd digit
A459 1FE8             (           io.asm):00783 (4)     42          tfr     E,A                 ; Transfer 2nd digit in A
A45B BDA1C2           (           io.asm):00784 (7)     49          jsr     OutChar             ; Print 2nd digit
A45E 1FF8             (           io.asm):00785 (4)     53          tfr     F,A                 ; Transfer 1st digit in A
A460 BDA1C2           (           io.asm):00786 (7)     60          jsr     OutChar             ; Print 1st digit
A463 1039             (           io.asm):00787 (6)     66          pulsw
A465 3587             (           io.asm):00788 (4+5)   75          puls    A,B,CC,PC
                      (           io.asm):00789                 
                      (           io.asm):00790                 ; Print a word as 4 ASCII characters, without leading zeros
                      (           io.asm):00791                 ; =========================================================
                      (           io.asm):00792                 ; Input:    D = Byte to output
                      (           io.asm):00793                 
                      (           io.asm):00794                     PRAGMA cc
                      (           io.asm):00795                 
A467                  (           io.asm):00796                 OutWordNLZ:
A467 3416             (           io.asm):00797 (4+4)   8           pshs    A,B,X
A469 1038             (           io.asm):00798 (6)     14          pshsw
A46B 8E0000           (           io.asm):00799 (3)     17          ldx     #0                  ; Clear leading zero flag
A46E BDA0F4           (           io.asm):00800 (7)     24          jsr     BinToAscWord        ; In D = binary word, Out Q = ASCII characters
A471 8130             (           io.asm):00801 (2)     26          cmpa    #'0'                ; Is it ASCII zero?
A473 2705             (           io.asm):00802 (3)     29          beq     OutWordNLZ2         ; If not zero, then print 1st character
A475 3001             (           io.asm):00803 (4+1)   34          leax    1,X                 ; Place non zero value to indicate no more leading zeros
A477 BDA1C2           (           io.asm):00804 (7)     41          jsr     OutChar             ; Print 1th digit
A47A                  (           io.asm):00805                 OutWordNLZ2:
A47A 1F98             (           io.asm):00806 (4)     45          tfr     B,A                 ; Transfer 3rd digit in A
A47C 8130             (           io.asm):00807 (2)     47          cmpa    #'0'                ; Is it ASCII zero
A47E 2605             (           io.asm):00808 (3)     50          bne     OutWordNLZp2        ; It's not zero
A480 8C0000           (           io.asm):00809 (3)     53          cmpx    #0                  ; Check leading zero flag
A483 2705             (           io.asm):00810 (3)     56          beq     OutWordNLZ3         ; Still a leading zero, skip to next character
A485                  (           io.asm):00811                 OutWordNLZp2:
A485 3001             (           io.asm):00812 (4+1)   61          leax    1,X                 ; Place non zero value to indicate no more leading zeros
A487 BDA1C2           (           io.asm):00813 (7)     68          jsr     OutChar             ; Print 2rd digit
A48A                  (           io.asm):00814                 OutWordNLZ3:
A48A 1FE8             (           io.asm):00815 (4)     72          tfr     E,A                 ; Transfer 2nd digit in A
A48C 8130             (           io.asm):00816 (2)     74          cmpa    #'0'                ; Is it ASCII zero
A48E 2605             (           io.asm):00817 (3)     77          bne     OutWordNLZp3        ; It's not zero
A490 8C0000           (           io.asm):00818 (3)     80          cmpx    #0                  ; Check leading zero flag
A493 2705             (           io.asm):00819 (3)     83          beq     OutWordNLZ4         ; Still a leading zero, skip to next character
A495                  (           io.asm):00820                 OutWordNLZp3:
A495 3001             (           io.asm):00821 (4+1)   88          leax    1,X                 ; Place non zero value to indicate no more leading zeros
A497 BDA1C2           (           io.asm):00822 (7)     95          jsr     OutChar             ; Print 3nd digit
A49A                  (           io.asm):00823                 OutWordNLZ4:
A49A 1FF8             (           io.asm):00824 (4)     99          tfr     F,A                 ; Transfer 1st digit in A
A49C BDA1C2           (           io.asm):00825 (7)     106         jsr     OutChar             ; Print 4st digit
A49F 1039             (           io.asm):00826 (6)     112         pulsw
A4A1 3596             (           io.asm):00827 (4+6)   122         puls    A,B,X,PC
                      (         main.asm):00193                     INCLUDE "monitor.asm"       ; Monitor commands subroutines
                      (      monitor.asm):00001                 ; ****************************************************************************************
                      (      monitor.asm):00002                 ; * Subroutines         IN          OUT         Description
                      (      monitor.asm):00003                 ; * --------------------------------------------------------------------------------------
                      (      monitor.asm):00004                 ; * CmdErrors           .           .           
                      (      monitor.asm):00005                 ; *   ErrPointer                                Print the error location
                      (      monitor.asm):00006                 ; *   ErrInvalidAddress
                      (      monitor.asm):00007                 ; *   ErrInvalidByte
                      (      monitor.asm):00008                 ; *   ErrInvalidCommand
                      (      monitor.asm):00009                 ; *   ErrInvalidParameter
                      (      monitor.asm):00010                 ; *   ErrNoParameter
                      (      monitor.asm):00011                 ; *   ErrSyntaxError
                      (      monitor.asm):00012                 ; * CmdHelp             .           .           List of monitor commands
                      (      monitor.asm):00013                 ; * CmdParse            X           .           Parse the command string
                      (      monitor.asm):00014                 ; * CmdPrompt           .           X           Print the command prompt
                      (      monitor.asm):00015                 ; * Dump                X           .           Dumps the contents of memory
                      (      monitor.asm):00016                 ; * LoadIntelHex        .           .           Intel Hex loader
                      (      monitor.asm):00017                 ; * MemoryMap           .           .           Print memory and I/O map
                      (      monitor.asm):00018                 ; * MemSize             .           .           Print the available memory of system
                      (      monitor.asm):00019                 ; * Peek                X           .           Read a byte from a memory location
                      (      monitor.asm):00020                 ; * Poke                X           .           Write a byte at a memory location
                      (      monitor.asm):00021                 ; * PrintRegisters      .           .           Print the contents of the registers
                      (      monitor.asm):00022                 ; * PushRegisters       .           .           Push the contents of the registers to RAM
                      (      monitor.asm):00023                 ; * PullRegisters       .           .           Pull the contents of the registers from RAM
                      (      monitor.asm):00024                 ; * Run                 X           .           Execute code at specified or CurrAddr
                      (      monitor.asm):00025                 ; * SetAddress          X           .           Sets the current address for commands
                      (      monitor.asm):00026                 ; * SetBank             X           .           Sets the current bank
                      (      monitor.asm):00027                 ; * SkipSpaces          X           X           Skip spaces in the command line
                      (      monitor.asm):00028                 ; ****************************************************************************************
                      (      monitor.asm):00029                 
                      (      monitor.asm):00030                 ;   ____                   _   _____                                    
                      (      monitor.asm):00031                 ;  / ___|  _ __ ___     __| | | ____|  _ __   _ __    ___    _ __   ___ 
                      (      monitor.asm):00032                 ; | |     | '_ ` _ \   / _` | |  _|   | '__| | '__|  / _ \  | '__| / __|
                      (      monitor.asm):00033                 ; | |___  | | | | | | | (_| | | |___  | |    | |    | (_) | | |    \__ \
                      (      monitor.asm):00034                 ;  \____| |_| |_| |_|  \__,_| |_____| |_|    |_|     \___/  |_|    |___/
                      (      monitor.asm):00035                 ;
                      (      monitor.asm):00036                 ; Various error messages pertaining to command line
                      (      monitor.asm):00037                 ; =================================================
                      (      monitor.asm):00038                 
                      (      monitor.asm):00039                 ; Error pointer of where the error occured on the command line
                      (      monitor.asm):00040                 ; ------------------------------------------------------------
A4A3                  (      monitor.asm):00041                 ErrPointer:
A4A3 3407             (      monitor.asm):00042 (4+3)   129         pshs    A,B,CC
A4A5 F6ECC4           (      monitor.asm):00043 (4)     133         ldb     CmdErrorPtr         ; Get relative error pointer position
A4A8 CB09             (      monitor.asm):00044 (2)     135         addb    #PromptSize         ; Add command prompt lenght offset
A4AA                  (      monitor.asm):00045                 ErrorPointerLoop:
A4AA 8620             (      monitor.asm):00046 (2)     137         lda     #' '                ; Move cursor one space
A4AC BDA1C2           (      monitor.asm):00047 (7)     144         jsr     OutChar             ;
A4AF 5A               (      monitor.asm):00048 (1)     145         decb                        ; Decrement position counter
A4B0 26F8             (      monitor.asm):00049 (3)     148         bne     ErrorPointerLoop    ; Has it reached the error position
A4B2 865E             (      monitor.asm):00050 (2)     150         lda     #'^'                ; Print the position pointer
A4B4 BDA1C2           (      monitor.asm):00051 (7)     157         jsr     OutChar             ;
A4B7 BDA3F9           (      monitor.asm):00052 (7)     164         jsr     OutCRLF             ;
A4BA 3587             (      monitor.asm):00053 (4+5)   173         puls    A,B,CC,PC
                      (      monitor.asm):00054                 
                      (      monitor.asm):00055                 ; Invalid address error message
                      (      monitor.asm):00056                 ; -----------------------------
A4BC                  (      monitor.asm):00057                 ErrInvalidAddress:
A4BC 3411             (      monitor.asm):00058 (4+3)   180         pshs    X,CC
A4BE BDA4A3           (      monitor.asm):00059 (7)     187         jsr     ErrPointer          ; Print ^ error pointer
A4C1 8EB488           (      monitor.asm):00060 (3)     190         ldx     #ErrInvalidAddrMsg  ; Print error message
A4C4 BDA41F           (      monitor.asm):00061 (7)     197         jsr     OutStr              ;
A4C7 3591             (      monitor.asm):00062 (4+5)   206         puls    X,CC,PC
                      (      monitor.asm):00063                 
                      (      monitor.asm):00064                 ; Invalid byte error message
                      (      monitor.asm):00065                 ; --------------------------
A4C9                  (      monitor.asm):00066                 ErrInvalidByte:
A4C9 3411             (      monitor.asm):00067 (4+3)   213         pshs    X,CC
A4CB BDA4A3           (      monitor.asm):00068 (7)     220         jsr     ErrPointer          ; Print ^ error pointer
A4CE 8EB49B           (      monitor.asm):00069 (3)     223         ldx     #ErrInvalidByteMsg  ; Print error message
A4D1 BDA41F           (      monitor.asm):00070 (7)     230         jsr     OutStr              ;
A4D4 3591             (      monitor.asm):00071 (4+5)   239         puls    X,CC,PC
                      (      monitor.asm):00072                 
                      (      monitor.asm):00073                 ; Invalid command error message
                      (      monitor.asm):00074                 ; -----------------------------
A4D6                  (      monitor.asm):00075                 ErrInvalidCommand:
A4D6 3411             (      monitor.asm):00076 (4+3)   246         pshs    X,CC
A4D8 BDA4A3           (      monitor.asm):00077 (7)     253         jsr     ErrPointer          ; Print ^ error pointer
A4DB 8EB4DE           (      monitor.asm):00078 (3)     256         ldx     #ErrInvalidCmdMsg   ; Print error message
A4DE BDA41F           (      monitor.asm):00079 (7)     263         jsr     OutStr              ;
A4E1 3591             (      monitor.asm):00080 (4+5)   272         puls    X,CC,PC
                      (      monitor.asm):00081                 
                      (      monitor.asm):00082                 ; Invalid parameter error message
                      (      monitor.asm):00083                 ; -------------------------------
A4E3                  (      monitor.asm):00084                 ErrInvalidParameter:
A4E3 3411             (      monitor.asm):00085 (4+3)   279         pshs    X,CC
A4E5 BDA4A3           (      monitor.asm):00086 (7)     286         jsr     ErrPointer          ; Print ^ error pointer
A4E8 8EB4AB           (      monitor.asm):00087 (3)     289         ldx     #ErrInvalidParamMsg ; Print error message
A4EB BDA41F           (      monitor.asm):00088 (7)     296         jsr     OutStr              ;
A4EE 3591             (      monitor.asm):00089 (4+5)   305         puls    X,CC,PC
                      (      monitor.asm):00090                 
                      (      monitor.asm):00091                 ; No parameter error message
                      (      monitor.asm):00092                 ; --------------------------
A4F0                  (      monitor.asm):00093                 ErrNoParameter:
A4F0 3411             (      monitor.asm):00094 (4+3)   312         pshs    X,CC
A4F2 BDA4A3           (      monitor.asm):00095 (7)     319         jsr     ErrPointer          ; Print ^ error pointer
A4F5 8EB4C0           (      monitor.asm):00096 (3)     322         ldx     #ErrNoParameterMsg  ; Print error message
A4F8 BDA41F           (      monitor.asm):00097 (7)     329         jsr     OutStr              ;
A4FB 3591             (      monitor.asm):00098 (4+5)   338         puls    X,CC,PC
                      (      monitor.asm):00099                     
                      (      monitor.asm):00100                 ; Syntax error message
                      (      monitor.asm):00101                 ; --------------------
A4FD                  (      monitor.asm):00102                 ErrSyntaxError:
A4FD 3411             (      monitor.asm):00103 (4+3)   345         pshs    X,CC
A4FF BDA4A3           (      monitor.asm):00104 (7)     352         jsr     ErrPointer          ; Print ^ error pointer
A502 8EB4F1           (      monitor.asm):00105 (3)     355         ldx     #ErrSyntaxErrorMsg  ; Print error message
A505 BDA41F           (      monitor.asm):00106 (7)     362         jsr     OutStr              ;
A508 3591             (      monitor.asm):00107 (4+5)   371         puls    X,CC,PC
                      (      monitor.asm):00108                 
                      (      monitor.asm):00109                 ;   ____                   _   _   _          _         
                      (      monitor.asm):00110                 ;  / ___|  _ __ ___     __| | | | | |   ___  | |  _ __  
                      (      monitor.asm):00111                 ; | |     | '_ ` _ \   / _` | | |_| |  / _ \ | | | '_ \ 
                      (      monitor.asm):00112                 ; | |___  | | | | | | | (_| | |  _  | |  __/ | | | |_) |
                      (      monitor.asm):00113                 ;  \____| |_| |_| |_|  \__,_| |_| |_|  \___| |_| | .__/ 
                      (      monitor.asm):00114                 ;                                                |_|
                      (      monitor.asm):00115                 ; Monitor help screen
                      (      monitor.asm):00116                 ; ===================
                      (      monitor.asm):00117                 
A50A                  (      monitor.asm):00118                 CmdHelp:
A50A 8EB1C3           (      monitor.asm):00119 (3)     374         ldx     #CmdHelpMsg
A50D BDA41F           (      monitor.asm):00120 (7)     381         jsr     OutStr
A510 39               (      monitor.asm):00121 (4)     385         rts
                      (      monitor.asm):00122                     
                      (      monitor.asm):00123                 ;   ____                   _   ____                              
                      (      monitor.asm):00124                 ;  / ___|  _ __ ___     __| | |  _ \    __ _   _ __   ___    ___ 
                      (      monitor.asm):00125                 ; | |     | '_ ` _ \   / _` | | |_) |  / _` | | '__| / __|  / _ \
                      (      monitor.asm):00126                 ; | |___  | | | | | | | (_| | |  __/  | (_| | | |    \__ \ |  __/
                      (      monitor.asm):00127                 ;  \____| |_| |_| |_|  \__,_| |_|      \__,_| |_|    |___/  \___|
                      (      monitor.asm):00128                 ;
                      (      monitor.asm):00129                 ; Command parser for the monitor
                      (      monitor.asm):00130                 ; ==============================
                      (      monitor.asm):00131                 ; Input:    X = Command Prompt String
                      (      monitor.asm):00132                 ; Clobbers: D,Y
                      (      monitor.asm):00133                 
                      (      monitor.asm):00134                     PRAGMA cc
                      (      monitor.asm):00135                 
A511                  (      monitor.asm):00136                 CmdParse:
A511 BDABBD           (      monitor.asm):00137 (7)     7           jsr     SkipSpaces          ; Skip leading spaces
A514 BFECDA           (      monitor.asm):00138 (5)     12          stx     TempWord            ; Store string pointer for command list cycling
A517 A684             (      monitor.asm):00139 (4+0)   16          lda     ,X                  ; Load first character from command string to see if it's empty
A519 273F             (      monitor.asm):00140 (3)     19          beq     CmdParseEnd         ; Is it the end of the string? Yes, then end
A51B 108EB14B         (      monitor.asm):00141 (4)     23          ldy     #CmdList            ; Load command list table location in Y
A51F                  (      monitor.asm):00142                 CmdParseChar:
A51F A680             (      monitor.asm):00143 (4+1)   28          lda     ,X+                 ; Load first character from command prompt string
A521 BDA151           (      monitor.asm):00144 (7)     35          jsr     UpperCase           ; Convert character to upper case (command list is in upper case)
A524 E6A0             (      monitor.asm):00145 (4+1)   40          ldb     ,Y+                 ; Load a character from the command list
A526 2B1C             (      monitor.asm):00146 (3)     43          bmi     CmdParseValid       ; Command code end delimiter? Execute command
A528 103789           (      monitor.asm):00147 (4)     47          cmpr    A,B                 ; Compare command string to command list character
A52B 2605             (      monitor.asm):00148 (3)     50          bne     CmdParseSkip        ; Skip command list entry and point to next command
A52D 7CECC4           (      monitor.asm):00149 (6)     56          inc     CmdErrorPtr         ; Increment command line error pointer
A530 20ED             (      monitor.asm):00150 (3)     59          bra     CmdParseChar        ; Go and compare the next character
A532                  (      monitor.asm):00151                 CmdParseSkip:
A532 BEECDA           (      monitor.asm):00152 (5)     64          ldx     TempWord            ; Restore command prompt pointer to starting position
A535 7FECC4           (      monitor.asm):00153 (6)     70          clr     CmdErrorPtr         ; Restore command prompt error pointer
A538                  (      monitor.asm):00154                 CmdParseSkipLoop:
A538 E6A0             (      monitor.asm):00155 (4+1)   75          ldb     ,Y+                 ; Read next character
A53A 2AFC             (      monitor.asm):00156 (3)     78          bpl     CmdParseSkipLoop    ; Loop until command list end delimiter is found
A53C 3122             (      monitor.asm):00157 (4+1)   83          leay    2,Y                 ; Jump over command address
A53E E6A4             (      monitor.asm):00158 (4+0)   87          ldb     ,Y                  ; Is it the end of the command list
A540 2715             (      monitor.asm):00159 (3)     90          beq     CmdParseNone        ; Yes it is, print error and exit
A542 20DB             (      monitor.asm):00160 (3)     93          bra     CmdParseChar        ; Repeat process until command found
A544                  (      monitor.asm):00161                 CmdParseValid:
                      (      monitor.asm):00162                     ; Check for characters after valid command
A544 8120             (      monitor.asm):00163 (2)     95          cmpa    #' '                ; Check for a parameter separator (space)
A546 2704             (      monitor.asm):00164 (3)     98          beq     CmdParseExecute     ; Yes, then execute command
A548 8100             (      monitor.asm):00165 (2)     100         cmpa    #$00                ; Check for an end of line in string (null)
A54A 260B             (      monitor.asm):00166 (3)     103         bne     CmdParseNone        ; If it's something else, the command invalid, else execute
A54C                  (      monitor.asm):00167                 CmdParseExecute:
A54C 7AECC4           (      monitor.asm):00168 (6)     109         dec     CmdErrorPtr         ; Shift pointer -1 for arguments
A54F ECA4             (      monitor.asm):00169 (5+0)   114         ldd     ,Y                  ; Load address of command from table
A551 EDC3             (      monitor.asm):00170 (5+2)   121         std     ,--U                ; Save address to user stack
A553 301F             (      monitor.asm):00171 (4+1)   126         leax    -1,X                ; Backup pointer 1 position, because of the auto advance above
A555 6ED1             (      monitor.asm):00172 (3+6)   135         jmp     [,U++]              ; Execute command
A557                  (      monitor.asm):00173                 CmdParseNone:
A557 BDA4D6           (      monitor.asm):00174 (7)     142         jsr     ErrInvalidCommand   ;
A55A                  (      monitor.asm):00175                 CmdParseEnd:
A55A 39               (      monitor.asm):00176 (4)     146         rts
                      (      monitor.asm):00177                 
                      (      monitor.asm):00178                 ;   ____                   _   ____                                       _   
                      (      monitor.asm):00179                 ;  / ___|  _ __ ___     __| | |  _ \   _ __    ___    _ __ ___    _ __   | |_ 
                      (      monitor.asm):00180                 ; | |     | '_ ` _ \   / _` | | |_) | | '__|  / _ \  | '_ ` _ \  | '_ \  | __|
                      (      monitor.asm):00181                 ; | |___  | | | | | | | (_| | |  __/  | |    | (_) | | | | | | | | |_) | | |_ 
                      (      monitor.asm):00182                 ;  \____| |_| |_| |_|  \__,_| |_|     |_|     \___/  |_| |_| |_| | .__/   \__|
                      (      monitor.asm):00183                 ;                                                                |_|
                      (      monitor.asm):00184                 ; Prints the command prompt: BB:AAAA> where BB is bank number and AAAA is address
                      (      monitor.asm):00185                 ; -------------------------------------------------------------------------------
                      (      monitor.asm):00186                 
                      (      monitor.asm):00187                     PRAGMA cc
                      (      monitor.asm):00188                 
A55B                  (      monitor.asm):00189                 CmdPrompt:
A55B 3406             (      monitor.asm):00190 (4+2)   6           pshs    D
A55D B6ECC7           (      monitor.asm):00191 (4)     10          lda     CurrBank            ;
A560 BDA3D7           (      monitor.asm):00192 (7)     17          jsr     OutByte             ; Print current bank (not yet implemented)
A563 863A             (      monitor.asm):00193 (2)     19          lda     #':'                ;
A565 BDA1C2           (      monitor.asm):00194 (7)     26          jsr     OutChar             ; Print separator
A568 FCECC5           (      monitor.asm):00195 (5)     31          ldd     CurrAddress         ;
A56B BDA44A           (      monitor.asm):00196 (7)     38          jsr     OutWord             ; Print current address
A56E 863E             (      monitor.asm):00197 (2)     40          lda     #'>'                ;
A570 BDA1C2           (      monitor.asm):00198 (7)     47          jsr     OutChar             ; Print prompt greater than symbol
A573 8620             (      monitor.asm):00199 (2)     49          lda     #' '                ;
A575 BDA1C2           (      monitor.asm):00200 (7)     56          jsr     OutChar             ; Print space
A578 7FECC4           (      monitor.asm):00201 (6)     62          clr     CmdErrorPtr         ; Reset command error pointer
A57B 3586             (      monitor.asm):00202 (4+4)   70          puls    D,PC
                      (      monitor.asm):00203                 
                      (      monitor.asm):00204                 
                      (      monitor.asm):00205                 ;  ____    _                                         _     _              
                      (      monitor.asm):00206                 ; |  _ \  (_)   __ _    __ _   _ __     ___    ___  | |_  (_)   ___   ___ 
                      (      monitor.asm):00207                 ; | | | | | |  / _` |  / _` | | '_ \   / _ \  / __| | __| | |  / __| / __|
                      (      monitor.asm):00208                 ; | |_| | | | | (_| | | (_| | | | | | | (_) | \__ \ | |_  | | | (__  \__ \
                      (      monitor.asm):00209                 ; |____/  |_|  \__,_|  \__, | |_| |_|  \___/  |___/  \__| |_|  \___| |___/
                      (      monitor.asm):00210                 ;                      |___/                                              
                      (      monitor.asm):00211                 ;
                      (      monitor.asm):00212                 ; Diagnose RAM and some peripherals
                      (      monitor.asm):00213                 ; =================================
                      (      monitor.asm):00214                 ; Regs: A,B,E,F,X,Y
                      (      monitor.asm):00215                 
                      (      monitor.asm):00216                     PRAGMA cc
                      (      monitor.asm):00217                     
A57D                  (      monitor.asm):00218                 Diagnostics:
A57D 8EB44F           (      monitor.asm):00219 (3)     3           ldx     #DiagMessage        ; Diagnostics message pointer
A580 BDA41F           (      monitor.asm):00220 (7)     10          jsr     OutStr              ; Print message
A583 B6FFA0           (      monitor.asm):00221 (4)     14          lda     $FFA0               ; Load current block value from bank 0
A586 3402             (      monitor.asm):00222 (4+1)   19          pshs    A                   ; Save value
A588 B6FF90           (      monitor.asm):00223 (4)     23          lda     $FF90               ; Load INIT0 (MMU enable state)
A58B 3402             (      monitor.asm):00224 (4+1)   28          pshs    A                   ; Save value
A58D B6FF91           (      monitor.asm):00225 (4)     32          lda     $FF91               ; Load INIT1 (Task number)
A590 3402             (      monitor.asm):00226 (4+1)   37          pshs    A                   ; Save value
A592 BDA97A           (      monitor.asm):00227 (7)     44          jsr     MmuOn               ; Enable MMU
A595 BDA99D           (      monitor.asm):00228 (7)     51          jsr     MmuTaskSet0         ; Switch to Task 0
A598 108E1FFF         (      monitor.asm):00229 (4)     55          ldy     #$1FFF              ; Block size (8K)
                      (      monitor.asm):00230                     ; Test first 512KB chip
A59C 8600             (      monitor.asm):00231 (2)     57          lda     #$00                ; Block start
A59E 3602             (      monitor.asm):00232 (4+1)   62          pshu    A
A5A0 118640           (      monitor.asm):00233 (3)     65          lde     #$40                ; Block End
A5A3 8631             (      monitor.asm):00234 (2)     67          lda     #'1'                ; Chip number
A5A5 BDA5DC           (      monitor.asm):00235 (7)     74          jsr     Diag512
                      (      monitor.asm):00236                     ; Test second 512KB chip
A5A8 8640             (      monitor.asm):00237 (2)     76          lda     #$40                ; Block start
A5AA 3602             (      monitor.asm):00238 (4+1)   81          pshu    A
A5AC 118680           (      monitor.asm):00239 (3)     84          lde     #$80                ; Block End
A5AF 8632             (      monitor.asm):00240 (2)     86          lda     #'2'                ; Chip number
A5B1 BDA5DC           (      monitor.asm):00241 (7)     93          jsr     Diag512
                      (      monitor.asm):00242                     ; Test third 512KB chip
A5B4 8680             (      monitor.asm):00243 (2)     95          lda     #$80                ; Block start
A5B6 3602             (      monitor.asm):00244 (4+1)   100         pshu    A
A5B8 1186C0           (      monitor.asm):00245 (3)     103         lde     #$C0                ; Block End
A5BB 8633             (      monitor.asm):00246 (2)     105         lda     #'3'                ; Chip number
A5BD BDA5DC           (      monitor.asm):00247 (7)     112         jsr     Diag512
                      (      monitor.asm):00248                     ; Test fourth 512KB chip
A5C0 86C0             (      monitor.asm):00249 (2)     114         lda     #$C0                ; Block start
A5C2 3602             (      monitor.asm):00250 (4+1)   119         pshu    A
A5C4 118600           (      monitor.asm):00251 (3)     122         lde     #$00                ; Block End
A5C7 8634             (      monitor.asm):00252 (2)     124         lda     #'4'                ; Chip number
A5C9 BDA5DC           (      monitor.asm):00253 (7)     131         jsr     Diag512
A5CC                  (      monitor.asm):00254                 DiagEnd:
A5CC 3502             (      monitor.asm):00255 (4+1)   136         puls    A
A5CE B7FF91           (      monitor.asm):00256 (4)     140         sta     $FF91               ; Restore task number to inital value
A5D1 3502             (      monitor.asm):00257 (4+1)   145         puls    A
A5D3 B7FF90           (      monitor.asm):00258 (4)     149         sta     $FF90               ; Restore MMU state to initial value
A5D6 3502             (      monitor.asm):00259 (4+1)   154         puls    A
A5D8 B7FFA0           (      monitor.asm):00260 (4)     158         sta     $FFA0               ; Restore bank0 block number to inital value
A5DB 39               (      monitor.asm):00261 (4)     162         rts
                      (      monitor.asm):00262                 
                      (      monitor.asm):00263                 ; Diagnostic subroutines
                      (      monitor.asm):00264                 ; ----------------------
                      (      monitor.asm):00265                 
                      (      monitor.asm):00266                 ; Test a complete 512KB chip
A5DC                  (      monitor.asm):00267                 Diag512:
A5DC 115F             (      monitor.asm):00268 (2)     164         clrf                        ; Clear error flag
A5DE 8EB45D           (      monitor.asm):00269 (3)     167         ldx     #DiagTestingMsg     ; Testing chip message pointer
A5E1 BDA41F           (      monitor.asm):00270 (7)     174         jsr     OutStr              ; Print message
A5E4 BDA1C2           (      monitor.asm):00271 (7)     181         jsr     OutChar
A5E7 863A             (      monitor.asm):00272 (2)     183         lda     #':'
A5E9 BDA1C2           (      monitor.asm):00273 (7)     190         jsr     OutChar
A5EC 8620             (      monitor.asm):00274 (2)     192         lda     #' '
A5EE BDA1C2           (      monitor.asm):00275 (7)     199         jsr     OutChar
A5F1 3702             (      monitor.asm):00276 (4+1)   204         pulu    A                   ; Load start block number
A5F3                  (      monitor.asm):00277                 Diag512Loop:
A5F3 B7FFA0           (      monitor.asm):00278 (4)     208         sta     $FFA0               ; Store it to bank 0 of task 0
A5F6 BDA88D           (      monitor.asm):00279 (7)     215         jsr     MemSizeValidate     ; Check if there is valid memory at that location
A5F9 2428             (      monitor.asm):00280 (3)     218         bcc     DiagSkip            ; Skip test if no memory is present
A5FB BDA3D7           (      monitor.asm):00281 (7)     225         jsr     OutByte             ; Display block number
A5FE BDA62A           (      monitor.asm):00282 (7)     232         jsr     DiagBlock           ; Test the block
A601 4C               (      monitor.asm):00283 (1)     233         inca                        ; Next block
A602 8107             (      monitor.asm):00284 (2)     235         cmpa    #$07                ; Skip ROM area
A604 2601             (      monitor.asm):00285 (3)     238         bne     Diag512Continue     ; It not ROM, then continue
A606 4C               (      monitor.asm):00286 (1)     239         inca                        ; Proceed to next block
A607                  (      monitor.asm):00287                 Diag512Continue:
A607 C602             (      monitor.asm):00288 (2)     241         ldb     #2                  ; Number of bytes to erase on screen
A609 BDA1E3           (      monitor.asm):00289 (7)     248         jsr     DelChar             ; Delete block number
A60C 10378E           (      monitor.asm):00290 (4)     252         cmpr    A,E                 ; Has all the blocks been tested?
A60F 26E2             (      monitor.asm):00291 (3)     255         bne     Diag512Loop         ; Loop until finished
A611                  (      monitor.asm):00292                 DiagPassFail:
A611 115D             (      monitor.asm):00293 (2)     257         tstf                        ; Check error flag
A613 2707             (      monitor.asm):00294 (3)     260         beq     DiagPass            ; If no errors found then print "Pass"
A615                  (      monitor.asm):00295                 DiagFail:
A615 8EB47A           (      monitor.asm):00296 (3)     263         ldx     #DiagFailMsg        ; Fail message pointer
A618 BDA41F           (      monitor.asm):00297 (7)     270         jsr     OutStr              ; Print fail message
A61B 39               (      monitor.asm):00298 (4)     274         rts
A61C                  (      monitor.asm):00299                 DiagPass:
A61C 8EB473           (      monitor.asm):00300 (3)     277         ldx     #DiagPassMsg        ; Pass message pointer
A61F BDA41F           (      monitor.asm):00301 (7)     284         jsr     OutStr              ; Print Pass message
A622 39               (      monitor.asm):00302 (4)     288         rts
A623                  (      monitor.asm):00303                 DiagSkip:
A623 8EB481           (      monitor.asm):00304 (3)     291         ldx     #DiagSkipMsg        ; Pass message pointer
A626 BDA41F           (      monitor.asm):00305 (7)     298         jsr     OutStr              ; Print Pass message
A629 39               (      monitor.asm):00306 (4)     302         rts
                      (      monitor.asm):00307                 
                      (      monitor.asm):00308                 
                      (      monitor.asm):00309                 ; Test bank 0
A62A                  (      monitor.asm):00310                 DiagBlock:
A62A 8E0000           (      monitor.asm):00311 (3)     305         ldx     #$0000              ; Start address pointer
A62D                  (      monitor.asm):00312                 DiagBlockLoop:
A62D BDA638           (      monitor.asm):00313 (7)     312         jsr     DiagTest            ; Test RAM cell with different patterns
A630 3001             (      monitor.asm):00314 (4+1)   317         leax    1,X                 ; Increment address pointer
A632 103712           (      monitor.asm):00315 (4)     321         cmpr    X,Y                 ; Has the end of the block been reached?
A635 26F6             (      monitor.asm):00316 (3)     324         bne     DiagBlockLoop       ; No, then loop
A637 39               (      monitor.asm):00317 (4)     328         rts
                      (      monitor.asm):00318                 
                      (      monitor.asm):00319                 ; Test a cell with 2 distinct patterns
A638                  (      monitor.asm):00320                 DiagTest:
                      (      monitor.asm):00321                     ; Read a byte and save it for later
A638 3402             (      monitor.asm):00322 (4+1)   333         pshs    A
A63A A684             (      monitor.asm):00323 (4+0)   337         lda     ,X
A63C 3402             (      monitor.asm):00324 (4+1)   342         pshs    A
                      (      monitor.asm):00325                     ; Test pattern $55
A63E C655             (      monitor.asm):00326 (2)     344         ldb     #$55
A640 BDA64E           (      monitor.asm):00327 (7)     351         jsr     DiagCellPattern
                      (      monitor.asm):00328                     ; Test pattern $AA
A643 C6AA             (      monitor.asm):00329 (2)     353         ldb     #$AA
A645 BDA64E           (      monitor.asm):00330 (7)     360         jsr     DiagCellPattern
                      (      monitor.asm):00331                     ; Restore original data in cell
A648 3502             (      monitor.asm):00332 (4+1)   365         puls    A
A64A A784             (      monitor.asm):00333 (4+0)   369         sta     ,X
A64C 3582             (      monitor.asm):00334 (4+3)   376         puls    A,PC
                      (      monitor.asm):00335                 
                      (      monitor.asm):00336                 ; Test and compare a cell, and flag error if any
A64E                  (      monitor.asm):00337                 DiagCellPattern:
                      (      monitor.asm):00338                     ; B = Test pattern
                      (      monitor.asm):00339                     ; X = Current cell pointer
A64E E784             (      monitor.asm):00340 (4+0)   380         stb     ,X                  ; Store test pattern in memory
A650 A684             (      monitor.asm):00341 (4+0)   384         lda     ,X                  ; Read back memory
A652 103789           (      monitor.asm):00342 (4)     388         cmpr    A,B                 ; Does the memory cell match the pattern after read back
A655 2703             (      monitor.asm):00343 (3)     391         beq     DiagCellEnd         ; If it's the same, test with next pattern
A657 11C601           (      monitor.asm):00344 (3)     394         ldf     #$01                ; Makes sure F is non-zero
                      (      monitor.asm):00345                     ; *** Print cell error
A65A                  (      monitor.asm):00346                 DiagCellEnd:
A65A 39               (      monitor.asm):00347 (4)     398         rts
                      (      monitor.asm):00348                     
                      (      monitor.asm):00349                 ;  ____                              
                      (      monitor.asm):00350                 ; |  _ \   _   _   _ __ ___    _ __  
                      (      monitor.asm):00351                 ; | | | | | | | | | '_ ` _ \  | '_ \ 
                      (      monitor.asm):00352                 ; | |_| | | |_| | | | | | | | | |_) |
                      (      monitor.asm):00353                 ; |____/   \__,_| |_| |_| |_| | .__/ 
                      (      monitor.asm):00354                 ;                             |_|    
                      (      monitor.asm):00355                 ;
                      (      monitor.asm):00356                 ; Memory dump
                      (      monitor.asm):00357                 ; ===========
                      (      monitor.asm):00358                 
                      (      monitor.asm):00359                     PRAGMA cc
                      (      monitor.asm):00360                     
A65B                  (      monitor.asm):00361                 Dump:
A65B BDABBD           (      monitor.asm):00362 (7)     7           jsr     SkipSpaces          ; Remove leading white spaces
A65E A684             (      monitor.asm):00363 (4+0)   11          lda     ,X                  ; Read a character from string
A660 2708             (      monitor.asm):00364 (3)     14          beq     DumpDisplay         ; If empty, assume Current Address, and display
A662 BDA28E           (      monitor.asm):00365 (7)     21          jsr     GetStrWord          ; Read address from string
A665 2454             (      monitor.asm):00366 (3)     24          bcc     DumpInvalidAddress  ; Invalid Address if Carry is clear
A667 FDECC5           (      monitor.asm):00367 (5)     29          std     CurrAddress         ; Save inputed address in Current Address
A66A                  (      monitor.asm):00368                 DumpDisplay:
A66A BEECC5           (      monitor.asm):00369 (5)     34          ldx     CurrAddress         ; Retrieve Current Address
A66D 1F12             (      monitor.asm):00370 (4)     38          tfr     X,Y
A66F 118610           (      monitor.asm):00371 (3)     41          lde     #16                 ; Number of lines to print
A672                  (      monitor.asm):00372                 DumpAddr:
A672 1F10             (      monitor.asm):00373 (4)     45          tfr     X,D                 ; Put Current address in D
A674 BDA44A           (      monitor.asm):00374 (7)     52          jsr     OutWord             ;
A677 863A             (      monitor.asm):00375 (2)     54          lda     #':'                ; Print address separator
A679 BDA1C2           (      monitor.asm):00376 (7)     61          jsr     OutChar             ;
A67C 8620             (      monitor.asm):00377 (2)     63          lda     #' '                ; Print space separator
A67E BDA1C2           (      monitor.asm):00378 (7)     70          jsr     OutChar             ;
A681 C610             (      monitor.asm):00379 (2)     72          ldb     #BytePerLine        ; Get the number of bytes to print per line
A683                  (      monitor.asm):00380                 DumpByte:
A683 A680             (      monitor.asm):00381 (4+1)   77          lda     ,X+                 ; Print byte from Current Address
A685 BDA3D7           (      monitor.asm):00382 (7)     84          jsr     OutByte             ;
A688 8620             (      monitor.asm):00383 (2)     86          lda     #' '                ; Print space separator
A68A BDA1C2           (      monitor.asm):00384 (7)     93          jsr     OutChar             ;
A68D 5A               (      monitor.asm):00385 (1)     94          decb                        ; Decrement byte counter
A68E 26F3             (      monitor.asm):00386 (3)     97          bne     DumpByte            ; If not finished, loop and output next byte
A690 867C             (      monitor.asm):00387 (2)     99          lda     #'|'                ; Print space separator
A692 BDA1C2           (      monitor.asm):00388 (7)     106         jsr     OutChar             ;
A695 8620             (      monitor.asm):00389 (2)     108         lda     #' '                ; Print space separator
A697 BDA1C2           (      monitor.asm):00390 (7)     115         jsr     OutChar             ;
A69A C610             (      monitor.asm):00391 (2)     117         ldb     #BytePerLine        ; Get the number of bytes to print per line
A69C                  (      monitor.asm):00392                 DumpChar:
A69C A6A0             (      monitor.asm):00393 (4+1)   122         lda     ,Y+                 ; Print character from Current Address
A69E 8120             (      monitor.asm):00394 (2)     124         cmpa    #' '                ; Compare character to space character
A6A0 2D05             (      monitor.asm):00395 (3)     127         blt     DumpCharDot         ; If lower, then print dot
A6A2 4D               (      monitor.asm):00396 (1)     128         tsta                        ; Is the characther in the extended ASCII range
A6A3 2B02             (      monitor.asm):00397 (3)     131         bmi     DumpCharDot         ; If it is, the print dot
A6A5 2002             (      monitor.asm):00398 (3)     134         bra     DumpCharPrint       ; Else, print character
A6A7                  (      monitor.asm):00399                 DumpCharDot:
A6A7 862E             (      monitor.asm):00400 (2)     136         lda     #'.'                ; Replace character to dot
A6A9                  (      monitor.asm):00401                 DumpCharPrint:
A6A9 BDA1C2           (      monitor.asm):00402 (7)     143         jsr     OutChar             ; Output actual or replaced character
A6AC 5A               (      monitor.asm):00403 (1)     144         decb                        ; Decrement byte counter
A6AD 26ED             (      monitor.asm):00404 (3)     147         bne     DumpChar            ; If not finished, loop and output next character
A6AF BDA3F9           (      monitor.asm):00405 (7)     154         jsr     OutCRLF             ; Change line
A6B2 114A             (      monitor.asm):00406 (2)     156         dece                        ; Decrement the lines to print
A6B4 26BC             (      monitor.asm):00407 (3)     159         bne     DumpAddr
A6B6 BFECC5           (      monitor.asm):00408 (5)     164         stx     CurrAddress         ; Store new Current Address in memory
A6B9 2003             (      monitor.asm):00409 (3)     167         bra     DumpEnd
A6BB                  (      monitor.asm):00410                 DumpInvalidAddress:
A6BB BDA4BC           (      monitor.asm):00411 (7)     174         jsr     ErrInvalidAddress   ; Display address error
A6BE                  (      monitor.asm):00412                 DumpEnd:
A6BE 39               (      monitor.asm):00413 (4)     178         rts
                      (      monitor.asm):00414                 
                      (      monitor.asm):00415                 ;  ___           _     _____                _   
                      (      monitor.asm):00416                 ; |_ _|  _ __   | |_  |_   _|   ___   ___  | |_ 
                      (      monitor.asm):00417                 ;  | |  | '_ \  | __|   | |    / _ \ / __| | __|
                      (      monitor.asm):00418                 ;  | |  | | | | | |_    | |   |  __/ \__ \ | |_ 
                      (      monitor.asm):00419                 ; |___| |_| |_|  \__|   |_|    \___| |___/  \__|
                      (      monitor.asm):00420                 ;
                      (      monitor.asm):00421                 ; Testing Priority Interrupt Encoder
                      (      monitor.asm):00422                 ; ==================================
                      (      monitor.asm):00423                 
                      (      monitor.asm):00424                     PRAGMA cc
                      (      monitor.asm):00425                 
A6BF                  (      monitor.asm):00426                 IntTest:
A6BF C602             (      monitor.asm):00427 (2)     2           ldb     #$2                 ; Number of bytes to erase
A6C1                  (      monitor.asm):00428                 IntTestLoop:
A6C1 BDA1B3           (      monitor.asm):00429 (7)     9           jsr     InCharNW            ; Read characther (non-waiting)
A6C4 811B             (      monitor.asm):00430 (2)     11          cmpa    #ESC                ; Is it the ESCape key?
A6C6 2711             (      monitor.asm):00431 (3)     14          beq     IntTestEnd          ; Yes, then end the routine
A6C8 B6FF09           (      monitor.asm):00432 (4)     18          lda     IntVector           ; Read the interrupt vector
A6CB 44               (      monitor.asm):00433 (1)     19          lsra                        ; Shift it right
A6CC BDA3D7           (      monitor.asm):00434 (7)     26          jsr     OutByte             ; Print value of interrupt
A6CF C60A             (      monitor.asm):00435 (2)     28          ldb     #10                 ; Wait for 10ms
A6D1 BDA1D1           (      monitor.asm):00436 (7)     35          jsr     Millisecond         ; Let it stay still for a while
A6D4 BDA1E3           (      monitor.asm):00437 (7)     42          jsr     DelChar             ; Delete the byte on screen
A6D7 20E8             (      monitor.asm):00438 (3)     45          bra     IntTestLoop         ; Loop until ESC
A6D9                  (      monitor.asm):00439                 IntTestEnd:
A6D9 39               (      monitor.asm):00440 (4)     49          rts
                      (      monitor.asm):00441                     
                      (      monitor.asm):00442                 ;  _                           _   ___           _            _   _   _               
                      (      monitor.asm):00443                 ; | |       ___     __ _    __| | |_ _|  _ __   | |_    ___  | | | | | |   ___  __  __
                      (      monitor.asm):00444                 ; | |      / _ \   / _` |  / _` |  | |  | '_ \  | __|  / _ \ | | | |_| |  / _ \ \ \/ /
                      (      monitor.asm):00445                 ; | |___  | (_) | | (_| | | (_| |  | |  | | | | | |_  |  __/ | | |  _  | |  __/  >  < 
                      (      monitor.asm):00446                 ; |_____|  \___/   \__,_|  \__,_| |___| |_| |_|  \__|  \___| |_| |_| |_|  \___| /_/\_\
                      (      monitor.asm):00447                 ;
                      (      monitor.asm):00448                 ; Load Intel Hex file to memory
                      (      monitor.asm):00449                 ; =============================
                      (      monitor.asm):00450                 ; Regs:     D = Various data manipulation
                      (      monitor.asm):00451                 ;           E = Checksum accumulator
                      (      monitor.asm):00452                 ;           F = Flags: Bit 0 = Origin start address flag, Bit 7 = Download fail flag
                      (      monitor.asm):00453                 ;           X = Destination address to copy the record bytes to
                      (      monitor.asm):00454                 ;           Y = Byte count in current record
                      (      monitor.asm):00455                 ; Vars:     TempWord
                      (      monitor.asm):00456                 
                      (      monitor.asm):00457                     PRAGMA cc
                      (      monitor.asm):00458                     
A6DA                  (      monitor.asm):00459                 LoadIntelHex:
A6DA 105F             (      monitor.asm):00460 (2)     2           clrw                        ; Clear the flags and checksum accumulator
A6DC 8EB501           (      monitor.asm):00461 (3)     5           ldx     #LoadStartMsg       ; Print message that loading will commence
A6DF BDA41F           (      monitor.asm):00462 (7)     12          jsr     OutStr              ; 
A6E2                  (      monitor.asm):00463                 LoadRecord:
A6E2 BDA1A8           (      monitor.asm):00464 (7)     19          jsr     InChar              ; Read a character
A6E5 811B             (      monitor.asm):00465 (2)     21          cmpa    #ESC                ; Is it the ESC key?
A6E7 2609             (      monitor.asm):00466 (3)     24          bne     LoadStart           ; No, check for record marker
A6E9 8EB53C           (      monitor.asm):00467 (3)     27          ldx     #LoadUserAbortErr   ; Print message that transfer is aborted
A6EC BDA41F           (      monitor.asm):00468 (7)     34          jsr     OutStr              ; 
A6EF 1600B5           (      monitor.asm):00469 (4)     38          lbra    LoadEnd             ; Exit
A6F2                  (      monitor.asm):00470                 LoadStart:
A6F2 813A             (      monitor.asm):00471 (2)     40          cmpa    #':'                ; Start of record marker
A6F4 26EC             (      monitor.asm):00472 (3)     43          bne     LoadRecord          ; Not found (also bypasses any CR and LF)
A6F6 114F             (      monitor.asm):00473 (2)     45          clre                        ; Clear checksum accumulator
                      (      monitor.asm):00474                     ; Read the record length
A6F8 BDA2FD           (      monitor.asm):00475 (7)     52          jsr     InByte              ; Get record length
A6FB 1F89             (      monitor.asm):00476 (4)     56          tfr     A,B                 ; Transfer value to LSB of D
A6FD 4F               (      monitor.asm):00477 (1)     57          clra                        ; Clear MSB of D
A6FE 1F02             (      monitor.asm):00478 (4)     61          tfr     D,Y                 ; Transfer byte count D to Y
A700 1F9E             (      monitor.asm):00479 (4)     65          tfr     B,E                 ; Copy first value to checksum accumulator
                      (      monitor.asm):00480                     ; Read the destination address
A702 BDA37D           (      monitor.asm):00481 (7)     72          jsr     InWord              ; Read the address
A705 BFECDA           (      monitor.asm):00482 (5)     77          stx     TempWord            ; Save last address pointed by X, as last record is $0000
A708 1F01             (      monitor.asm):00483 (4)     81          tfr     D,X                 ; Save the address to the X register
                      (      monitor.asm):00484                     ; Add checksum of both bytes
A70A 10308E           (      monitor.asm):00485 (4)     85          addr    A,E                 ; Add MSB of address to checksum accumulator
A70D 10309E           (      monitor.asm):00486 (4)     89          addr    B,E                 ; Add LSB of address to checksum accumulator
                      (      monitor.asm):00487                     ;Set origin address flag and store address in CurrAddress
A710 115D             (      monitor.asm):00488 (2)     91          tstf                        ; Test the flags register
A712 2B09             (      monitor.asm):00489 (3)     94          bmi     LoadRecordType      ; If it's not the first line of code read record type
A714 BFECC5           (      monitor.asm):00490 (5)     99          stx     CurrAddress         ; Save start address
A717 BFECD7           (      monitor.asm):00491 (5)     104         stx     RegPC               ; Save the user PC 
A71A 11C680           (      monitor.asm):00492 (3)     107         ldf     #$80                ; Sets the origin flag
A71D                  (      monitor.asm):00493                 LoadRecordType:
A71D BDA2FD           (      monitor.asm):00494 (7)     114         jsr     InByte              ; Get the record type
                      (      monitor.asm):00495                     ; Add checksum
A720 10308E           (      monitor.asm):00496 (4)     118         addr    A,E                 ; Add record type to the checksum accumulator
                      (      monitor.asm):00497                     ; Which record type is it?
A723 8100             (      monitor.asm):00498 (2)     120         cmpa    #0                  ; Is it the Data record type?
A725 2713             (      monitor.asm):00499 (3)     123         beq     LoadData            ; Get Data
A727 8101             (      monitor.asm):00500 (2)     125         cmpa    #1                  ; Is it the End of File record type?
A729 273E             (      monitor.asm):00501 (3)     128         beq     LoadEOF             ; Load last line
A72B 8EB557           (      monitor.asm):00502 (3)     131         ldx     #LoadRecordErr      ; 
A72E BDA41F           (      monitor.asm):00503 (7)     138         jsr     OutStr              ; Print Unknown Record Type message
A731 BDA3D7           (      monitor.asm):00504 (7)     145         jsr     OutByte             ; Print the actual record number
A734 BDA3F9           (      monitor.asm):00505 (7)     152         jsr     OutCRLF             ; Change line
A737 16006D           (      monitor.asm):00506 (4)     156         lbra    LoadEnd
A73A                  (      monitor.asm):00507                 LoadData:
                      (      monitor.asm):00508                     ; Get record type 00 (Data)
A73A BDA2FD           (      monitor.asm):00509 (7)     163         jsr     InByte              ; Read data
A73D A780             (      monitor.asm):00510 (4+1)   168         sta     ,X+                 ; Save data to RAM
                      (      monitor.asm):00511                     ; Add checksum
A73F 10308E           (      monitor.asm):00512 (4)     172         addr    A,E                 ; Add byte data to checksum accumulator
A742 313F             (      monitor.asm):00513 (4+1)   177         leay    -1,Y                ; Decrement byte counter
A744 108C0000         (      monitor.asm):00514 (4)     181         cmpy    #0
A748 26F0             (      monitor.asm):00515 (3)     184         bne     LoadData
A74A                  (      monitor.asm):00516                 LoadChecksum:
                      (      monitor.asm):00517                     ; Process accumulated checksum
A74A 1143             (      monitor.asm):00518 (2)     186         come                        ; Complement F
A74C 114C             (      monitor.asm):00519 (2)     188         ince                        ; adding one to get a 2's complement
                      (      monitor.asm):00520                     ; Get record checksum
A74E BDA2FD           (      monitor.asm):00521 (7)     195         jsr     InByte              ; Read checksum
A751 10378E           (      monitor.asm):00522 (4)     199         cmpr    A,E                 ; Do the checksums match
A754 2608             (      monitor.asm):00523 (3)     202         bne     LoadFailure         ; If inconsistent, display message
A756 862E             (      monitor.asm):00524 (2)     204         lda     #'.'                ; Character indicating line is ok
A758 BDA1C2           (      monitor.asm):00525 (7)     211         jsr     OutChar             ; Print the period character
A75B 16FF84           (      monitor.asm):00526 (4)     215         lbra    LoadRecord          ; Fetch next record
A75E                  (      monitor.asm):00527                 LoadFailure:
                      (      monitor.asm):00528                     ; Indicate record failed checksum
A75E 11C681           (      monitor.asm):00529 (3)     218         ldf     #$81                ; Sets the checksum failure flag
A761 8678             (      monitor.asm):00530 (2)     220         lda     #'x'                ; Load the failed checksum character
A763 BDA1C2           (      monitor.asm):00531 (7)     227         jsr     OutChar             ; Print it
A766 16FF79           (      monitor.asm):00532 (4)     231         lbra    LoadRecord          ; Get next record
A769                  (      monitor.asm):00533                 LoadEOF:
                      (      monitor.asm):00534                     ; Process accumulated checksum
A769 1143             (      monitor.asm):00535 (2)     233         come                        ; Complement E
A76B 114C             (      monitor.asm):00536 (2)     235         ince                        ; adding one to get a 2's complement
                      (      monitor.asm):00537                     ; Get end record (01) checksum
A76D BDA2FD           (      monitor.asm):00538 (7)     242         jsr     InByte              ; Get the checksum byte
A770 10378E           (      monitor.asm):00539 (4)     246         cmpr    A,E                 ; Do the checksums match
A773 2708             (      monitor.asm):00540 (3)     249         beq     LoadCheckFlag       ; If it's the same then verify download fail flag
A775 11C681           (      monitor.asm):00541 (3)     252         ldf     #$81                ; Sets the checksum failure flag
A778 8658             (      monitor.asm):00542 (2)     254         lda     #'X'                ; Load the failed checksum character
A77A BDA1C2           (      monitor.asm):00543 (7)     261         jsr     OutChar             ; Print it Exit routine
A77D                  (      monitor.asm):00544                 LoadCheckFlag:
A77D 11C180           (      monitor.asm):00545 (3)     264         cmpf    #$80                ; Was there any checksum errors?
A780 270B             (      monitor.asm):00546 (3)     267         beq     LoadSuccess         ; If no errors, then print success
A782 BDA3F9           (      monitor.asm):00547 (7)     274         jsr     OutCRLF             ; Change line
A785 8EB56D           (      monitor.asm):00548 (3)     277         ldx     #LoadFailedErr      ; Print download failed
A788 BDA41F           (      monitor.asm):00549 (7)     284         jsr     OutStr              ;
A78B 201A             (      monitor.asm):00550 (3)     287         bra     LoadEnd             ;
A78D                  (      monitor.asm):00551                 LoadSuccess:
A78D BEECDA           (      monitor.asm):00552 (5)     292         ldx     TempWord            ; Restore last position of X
A790 CC36FF           (      monitor.asm):00553 (3)     295         ldd     #$36FF              ; Save opcode "pshu CC,A,B,DP,X,Y,S,PC"
A793 ED81             (      monitor.asm):00554 (5+2)   302         std     ,X++                ; Store it at the end of code
A795 CC103A           (      monitor.asm):00555 (3)     305         ldd     #$103A              ; Save opcode "pshuw"
A798 ED81             (      monitor.asm):00556 (5+2)   312         std     ,X++                ; Store it at the end of code
A79A 8639             (      monitor.asm):00557 (2)     314         lda     #$39                ; Save opcode "rts"
A79C A784             (      monitor.asm):00558 (4+0)   318         sta     ,X                  ; Store it at the end of code to return to prompt
A79E BDA3F9           (      monitor.asm):00559 (7)     325         jsr     OutCRLF             ; Change line
A7A1 8EB595           (      monitor.asm):00560 (3)     328         ldx     #LoadSuccessMsg     ; Print success message
A7A4 BDA41F           (      monitor.asm):00561 (7)     335         jsr     OutStr
A7A7                  (      monitor.asm):00562                 LoadEnd:
A7A7 39               (      monitor.asm):00563 (4)     339         rts
                      (      monitor.asm):00564                 
                      (      monitor.asm):00565                 ;  __  __                                             __  __                 
                      (      monitor.asm):00566                 ; |  \/  |   ___   _ __ ___     ___    _ __   _   _  |  \/  |   __ _   _ __  
                      (      monitor.asm):00567                 ; | |\/| |  / _ \ | '_ ` _ \   / _ \  | '__| | | | | | |\/| |  / _` | | '_ \ 
                      (      monitor.asm):00568                 ; | |  | | |  __/ | | | | | | | (_) | | |    | |_| | | |  | | | (_| | | |_) |
                      (      monitor.asm):00569                 ; |_|  |_|  \___| |_| |_| |_|  \___/  |_|     \__, | |_|  |_|  \__,_| | .__/ 
                      (      monitor.asm):00570                 ;                                             |___/                   |_|
                      (      monitor.asm):00571                 ;
                      (      monitor.asm):00572                 ; Prints the memory and I/O map of the system
                      (      monitor.asm):00573                 ; ===========================================
                      (      monitor.asm):00574                 
                      (      monitor.asm):00575                     PRAGMA cc
                      (      monitor.asm):00576                     
A7A8                  (      monitor.asm):00577                 MemoryMap:
A7A8 8EB5AB           (      monitor.asm):00578 (3)     3           ldx     #MemoryMapMsg
A7AB BDA41F           (      monitor.asm):00579 (7)     10          jsr     OutStr              ; Print up to end of RAM
A7AE CC9FFF           (      monitor.asm):00580 (3)     13          ldd     #RomStart-1
A7B1 BDA44A           (      monitor.asm):00581 (7)     20          jsr     OutWord             ; Print up to ROM start -1
A7B4 BDA41F           (      monitor.asm):00582 (7)     27          jsr     OutStr              ; Print up to begining of ROM
A7B7 104C             (      monitor.asm):00583 (2)     29          incd
A7B9 BDA44A           (      monitor.asm):00584 (7)     36          jsr     OutWord             ; Print ROM start
A7BC 862D             (      monitor.asm):00585 (2)     38          lda     #'-'
A7BE BDA1C2           (      monitor.asm):00586 (7)     45          jsr     OutChar
A7C1 8624             (      monitor.asm):00587 (2)     47          lda     #'$'
A7C3 BDA1C2           (      monitor.asm):00588 (7)     54          jsr     OutChar
A7C6 CCEBC4           (      monitor.asm):00589 (3)     57          ldd     #VarStart
A7C9 BDA44A           (      monitor.asm):00590 (7)     64          jsr     OutWord
A7CC BDA41F           (      monitor.asm):00591 (7)     71          jsr     OutStr              ; Print till end:
A7CF 39               (      monitor.asm):00592 (4)     75          rts
                      (      monitor.asm):00593                 
                      (      monitor.asm):00594                 ;  __  __                      _____                 
                      (      monitor.asm):00595                 ; |  \/  |   ___   _ __ ___   |_   _|   __ _    __ _ 
                      (      monitor.asm):00596                 ; | |\/| |  / _ \ | '_ ` _ \    | |    / _` |  / _` |
                      (      monitor.asm):00597                 ; | |  | | |  __/ | | | | | |   | |   | (_| | | (_| |
                      (      monitor.asm):00598                 ; |_|  |_|  \___| |_| |_| |_|   |_|    \__,_|  \__, |
                      (      monitor.asm):00599                 ;                                              |___/ 
                      (      monitor.asm):00600                 ;
                      (      monitor.asm):00601                 ; Tags memory by writing block number into 8K banks
                      (      monitor.asm):00602                 ; =================================================
                      (      monitor.asm):00603                 ; Regs: A,B,W,X,Y
                      (      monitor.asm):00604                 ; Note: Future version will detect RAM amount
                      (      monitor.asm):00605                 
A7D0                  (      monitor.asm):00606                 MemTag:
A7D0 BDA97A           (      monitor.asm):00607 (7)     82          jsr     MmuOn
A7D3 863F             (      monitor.asm):00608 (2)     84          lda     #$3F                ; Start at upper memory
A7D5 C602             (      monitor.asm):00609 (2)     86          ldb     #$02                ; Number of characters to erase
A7D7                  (      monitor.asm):00610                 MemTagLoop:
A7D7 B7FFA0           (      monitor.asm):00611 (4)     90          sta     $FFA0               ; Store block number in bank 0
A7DA BDA3D7           (      monitor.asm):00612 (7)     97          jsr     OutByte             ; Output current block
A7DD 8EFFA0           (      monitor.asm):00613 (3)     100         ldx     #$FFA0              ; Source address containing value
A7E0 108E0000         (      monitor.asm):00614 (4)     104         ldy     #$0000              ; Destination address
A7E4 10862000         (      monitor.asm):00615 (4)     108         ldw     #$2000              ; Number of bytes to copy
A7E8 113B12           (      monitor.asm):00616 (6+?)   114         tfm     X,Y+                ; Transfer data and increment destination pointer
A7EB BDA1E3           (      monitor.asm):00617 (7)     121         jsr     DelChar             ; Delete the previously writen byte
A7EE 8100             (      monitor.asm):00618 (2)     123         cmpa    #$00                ; Has it reached 0?
A7F0 2708             (      monitor.asm):00619 (3)     126         beq     MemTagEnd           ; Yes, then end
A7F2 4A               (      monitor.asm):00620 (1)     127         deca                        ; Decrement A
A7F3 8107             (      monitor.asm):00621 (2)     129         cmpa    #$07                ; Is it block 07, where ROM data is?
A7F5 26E0             (      monitor.asm):00622 (3)     132         bne     MemTagLoop          ; No, then copy next block
A7F7 4A               (      monitor.asm):00623 (1)     133         deca                        ; Decrement A to skip block 07
A7F8 20DD             (      monitor.asm):00624 (3)     136         bra     MemTagLoop          ; Loop to copy next block
A7FA                  (      monitor.asm):00625                 MemTagEnd:
A7FA 39               (      monitor.asm):00626 (4)     140         rts
                      (      monitor.asm):00627                 
                      (      monitor.asm):00628                 ;  __  __                      ____    _              
                      (      monitor.asm):00629                 ; |  \/  |   ___   _ __ ___   / ___|  (_)  ____   ___ 
                      (      monitor.asm):00630                 ; | |\/| |  / _ \ | '_ ` _ \  \___ \  | | |_  /  / _ \
                      (      monitor.asm):00631                 ; | |  | | |  __/ | | | | | |  ___) | | |  / /  |  __/
                      (      monitor.asm):00632                 ; |_|  |_|  \___| |_| |_| |_| |____/  |_| /___|  \___|
                      (      monitor.asm):00633                 ;
                      (      monitor.asm):00634                 ; Memory Size
                      (      monitor.asm):00635                 ; ===========
                      (      monitor.asm):00636                 ; Regs:     D = Various data manipulation (Mostly A)
                      (      monitor.asm):00637                 ;           W = Extended RAM accumulator
                      (      monitor.asm):00638                 
                      (      monitor.asm):00639                     PRAGMA cc
                      (      monitor.asm):00640                     
A7FB                  (      monitor.asm):00641                 MemSize:
                      (      monitor.asm):00642                     ; Enable MMU if not active, if not already active
A7FB B6FF90           (      monitor.asm):00643 (4)     4           lda     $FF90               ; Read the current content of the INIT0 register
A7FE 3402             (      monitor.asm):00644 (4+1)   9           pshs    A                   ; Save the INIT0 register
A800 8A40             (      monitor.asm):00645 (2)     11          ora     #%01000000          ; Turn on bit-6: MMU enable
A802 B7FF90           (      monitor.asm):00646 (4)     15          sta     $FF90               ; Activate MMU if not already done
                      (      monitor.asm):00647                     ; Switch to task 0 if not already there
A805 B6FF91           (      monitor.asm):00648 (4)     19          lda     $FF91               ; Read the current content of the INIT1 register
A808 3402             (      monitor.asm):00649 (4+1)   24          pshs    A                   ; Save the INIT1 register
A80A 84FE             (      monitor.asm):00650 (2)     26          anda    #%11111110          ; Turn off bit-0: Task 0/1
A80C B7FF91           (      monitor.asm):00651 (4)     30          sta     $FF91               ; Switch to task 0
                      (      monitor.asm):00652                     ; Save state of first MMU bank
A80F B6FFA0           (      monitor.asm):00653 (4)     34          lda     $FFA0               ; Read block number of first bank
A812 3402             (      monitor.asm):00654 (4+1)   39          pshs    A                   ; Save the block number
                      (      monitor.asm):00655                     ; Assume first 512K chip is already installed, substracting the base 64K
A814 108601C0         (      monitor.asm):00656 (4)     43          ldw     #512-64             ; 448KB extended by default
                      (      monitor.asm):00657                     ; Verify if the 2nd 512K chip installed
A818 8640             (      monitor.asm):00658 (2)     45          lda     #$40                ; Block number $40 is the start of 2nd 512K chip
A81A B7FFA0           (      monitor.asm):00659 (4)     49          sta     $FFA0               ; Save it in bank 0 of task 0
A81D BDA88D           (      monitor.asm):00660 (7)     56          jsr     MemSizeValidate     ; Test cell at $0000
A820 2420             (      monitor.asm):00661 (3)     59          bcc     MemSizeDisplay      ; If no valid cell is detected, display tally
A822 108B0200         (      monitor.asm):00662 (4)     63          addw    #512                ; Add 512KB to total
                      (      monitor.asm):00663                     ; Verify if the 3rd 512K chip installed
A826 8680             (      monitor.asm):00664 (2)     65          lda     #$80                ; Block number $80 is the start of 3rd 512K chip
A828 B7FFA0           (      monitor.asm):00665 (4)     69          sta     $FFA0               ; Save it in bank 0 of task 0
A82B BDA88D           (      monitor.asm):00666 (7)     76          jsr     MemSizeValidate     ; Test cell at $0000
A82E 2412             (      monitor.asm):00667 (3)     79          bcc     MemSizeDisplay      ; If no valid cell is detected, display tally
A830 108B0200         (      monitor.asm):00668 (4)     83          addw    #512                ; Add 512KB to total
                      (      monitor.asm):00669                     ; Verify if the 4th 512K chip installed
A834 86C0             (      monitor.asm):00670 (2)     85          lda     #$C0                ; Block number $C0 is the start of 4th 512K chip
A836 B7FFA0           (      monitor.asm):00671 (4)     89          sta     $FFA0               ; Save it in bank 0 of task 0
A839 BDA88D           (      monitor.asm):00672 (7)     96          jsr     MemSizeValidate     ; Test cell at $0000
A83C 2404             (      monitor.asm):00673 (3)     99          bcc     MemSizeDisplay      ; If no valid cell is detected, display tally
A83E 108B0200         (      monitor.asm):00674 (4)     103         addw    #512                ; Add 512KB to total
A842                  (      monitor.asm):00675                 MemSizeDisplay:
A842 1038             (      monitor.asm):00676 (6)     109         pshsw                       ; Save W to calculate total RAM
A844 1038             (      monitor.asm):00677 (6)     115         pshsw                       ; Save W, because it gets clobberd by BinToBcd
                      (      monitor.asm):00678                     ; Start printing mem stats
A846 8EB693           (      monitor.asm):00679 (3)     118         ldx     #MemorySizeMsg      ; Point to Memory Size message
A849 BDA41F           (      monitor.asm):00680 (7)     125         jsr     OutStr              ; Output up till "bytes free"
                      (      monitor.asm):00681                 
A84C CCA000           (      monitor.asm):00682 (3)     128         ldd     #RomStart           ; Total free RAM available **** (Update to read non empty RAM)
                      (      monitor.asm):00683                 
A84F BDA105           (      monitor.asm):00684 (7)     135         jsr     BinToBcd            ; Convert to BCD
A852 BDA39C           (      monitor.asm):00685 (7)     142         jsr     OutBcd              ; Print free base RAM
A855 BDA41F           (      monitor.asm):00686 (7)     149         jsr     OutStr              ; Print till "Extended RAM:"
A858 3506             (      monitor.asm):00687 (4+2)   155         puls    D                   ; Restore what was W in stack to D
A85A BDA105           (      monitor.asm):00688 (7)     162         jsr     BinToBcd            ; Convert total extended RAM to BCD => Q
A85D BDA39C           (      monitor.asm):00689 (7)     169         jsr     OutBcd              ; Output BCD number (in Q)
A860 BDA41F           (      monitor.asm):00690 (7)     176         jsr     OutStr              ; Output string till "blocks free"
                      (      monitor.asm):00691                     
A863 4F               (      monitor.asm):00692 (1)     177         clra
A864 C638             (      monitor.asm):00693 (2)     179         ldb     #$40-8              ; **** (Update to count number of blocks used)
A866 BDA105           (      monitor.asm):00694 (7)     186         jsr     BinToBcd            ; Convert total extended RAM to BCD => Q
A869 BDA39C           (      monitor.asm):00695 (7)     193         jsr     OutBcd              ; Output BCD number (in Q)
                      (      monitor.asm):00696                 
A86C BDA41F           (      monitor.asm):00697 (7)     200         jsr     OutStr              ; Output string will "Total RAM"
A86F 3506             (      monitor.asm):00698 (4+2)   206         puls    D                   ; Restore Extended RAM tally to D
A871 C30040           (      monitor.asm):00699 (3)     209         addd    #64                 ; Add 64 to tally
A874 BDA105           (      monitor.asm):00700 (7)     216         jsr     BinToBcd            ; Convert total RAM to BCD
A877 BDA39C           (      monitor.asm):00701 (7)     223         jsr     OutBcd              ; Output BCD number
A87A BDA41F           (      monitor.asm):00702 (7)     230         jsr     OutStr              ; Output string to the end
A87D                  (      monitor.asm):00703                 MemSizeEnd:
                      (      monitor.asm):00704                     ; Restore the state of the first MMU bank
A87D 3502             (      monitor.asm):00705 (4+1)   235         puls    A                   ; Get the saved bank block to accumulator
A87F B7FFA0           (      monitor.asm):00706 (4)     239         sta     $FFA0               ; Restore the block number to it's previous state
                      (      monitor.asm):00707                     ; Restore the state of the task number
A882 3502             (      monitor.asm):00708 (4+1)   244         puls    A                   ; Get the saved active task to accumulator
A884 B7FF91           (      monitor.asm):00709 (4)     248         sta     $FF91               ; Restore active task to it's previous state
                      (      monitor.asm):00710                     ; Restore MMU state
A887 3502             (      monitor.asm):00711 (4+1)   253         puls    A                   ; Get the INIT1 status register to accumulator
A889 B7FF90           (      monitor.asm):00712 (4)     257         sta     $FF90               ; Restore the INIT1 register to it's previous state
A88C 39               (      monitor.asm):00713 (4)     261         rts
                      (      monitor.asm):00714                 
                      (      monitor.asm):00715                 ; MemSize subroutine
                      (      monitor.asm):00716                 ; ------------------
                      (      monitor.asm):00717                 
A88D                  (      monitor.asm):00718                 MemSizeValidate:
A88D 3406             (      monitor.asm):00719 (4+2)   267         pshs    D
A88F 9600             (      monitor.asm):00720 (3)     270         lda     $0000               ; Read first byte of bank 0
A891 1F89             (      monitor.asm):00721 (4)     274         tfr     A,B                 ; Save existing data to B
A893 8655             (      monitor.asm):00722 (2)     276         lda     #$55                ; Load a test pattern in A
A895 9700             (      monitor.asm):00723 (3)     279         sta     $0000               ; Save test pattern in memory
A897 9600             (      monitor.asm):00724 (3)     282         lda     $0000               ; Reload from memory
A899 8155             (      monitor.asm):00725 (2)     284         cmpa    #$55                ; Compare values to see if they match
A89B 260E             (      monitor.asm):00726 (3)     287         bne     MemSizeEmpty        ; If not equal, exit with Carry clear
A89D 86AA             (      monitor.asm):00727 (2)     289         lda     #$AA                ; Load a second test pattern in A, to test for a fluke
A89F 9700             (      monitor.asm):00728 (3)     292         sta     $0000               ; Save test pattern in memory
A8A1 9600             (      monitor.asm):00729 (3)     295         lda     $0000               ; Reload from memory
A8A3 81AA             (      monitor.asm):00730 (2)     297         cmpa    #$AA                ; Compare values to see if they match
A8A5 2604             (      monitor.asm):00731 (3)     300         bne     MemSizeEmpty        ; If not equal, exit with Carry clear
A8A7 1A01             (      monitor.asm):00732 (2)     302         orcc    #$01                ; Set carry flag to indicate there is an active memory cell
A8A9 2002             (      monitor.asm):00733 (3)     305         bra     MemSizeValEnd       ; End subroutine
A8AB                  (      monitor.asm):00734                 MemSizeEmpty:
A8AB 1CFE             (      monitor.asm):00735 (2)     307         andcc   #$FE                ; Clear Carry to indicate the memory cell is empty
A8AD                  (      monitor.asm):00736                 MemSizeValEnd:
A8AD D700             (      monitor.asm):00737 (3)     310         stb     $0000               ; Save back orginal data that was saved in B
A8AF 3586             (      monitor.asm):00738 (4+4)   318         puls    D,PC
                      (      monitor.asm):00739                 
                      (      monitor.asm):00740                 ;  __  __   __  __   _   _ 
                      (      monitor.asm):00741                 ; |  \/  | |  \/  | | | | |
                      (      monitor.asm):00742                 ; | |\/| | | |\/| | | | | |
                      (      monitor.asm):00743                 ; | |  | | | |  | | | |_| |
                      (      monitor.asm):00744                 ; |_|  |_| |_|  |_|  \___/ 
                      (      monitor.asm):00745                 ;
                      (      monitor.asm):00746                 ; MMU commands
                      (      monitor.asm):00747                 ; ============
                      (      monitor.asm):00748                 
                      (      monitor.asm):00749                     PRAGMA cc
                      (      monitor.asm):00750                 
A8B1                  (      monitor.asm):00751                 Mmu:
A8B1 BDABBD           (      monitor.asm):00752 (7)     7           jsr     SkipSpaces          ; Skip leading spaces
A8B4 BFECDA           (      monitor.asm):00753 (5)     12          stx     TempWord            ; Store string pointer for parameter list cycling
A8B7 A684             (      monitor.asm):00754 (4+0)   16          lda     ,X                  ; Load first character from parameter string to see if it's empty
A8B9 2745             (      monitor.asm):00755 (3)     19          beq     MmuStatus           ; If no parameter has been entered, then print MMU status
A8BB 7CECC4           (      monitor.asm):00756 (6)     25          inc     CmdErrorPtr         ; Increment Error pointer 1 space to account for parameter delimiter
A8BE 11B6ECC4         (      monitor.asm):00757 (5)     30          lde     CmdErrorPtr         ; Load command error pointer to E for later use
A8C2 108EB762         (      monitor.asm):00758 (4)     34          ldy     #MmuList            ; Load parameter list table location in Y
A8C6                  (      monitor.asm):00759                 MmuParseChar:
A8C6 A680             (      monitor.asm):00760 (4+1)   39          lda     ,X+                 ; Load first character from parameter prompt string
A8C8 BDA151           (      monitor.asm):00761 (7)     46          jsr     UpperCase           ; Convert character to upper case (parameter list is in upper case)
A8CB E6A0             (      monitor.asm):00762 (4+1)   51          ldb     ,Y+                 ; Load a character from the parameter list
A8CD 2B1D             (      monitor.asm):00763 (3)     54          bmi     MmuParseValid       ; Parameter code end delimiter? Execute parameter
A8CF 103789           (      monitor.asm):00764 (4)     58          cmpr    A,B                 ; Compare parameter string to parameter list character
A8D2 2605             (      monitor.asm):00765 (3)     61          bne     MmuParseSkip        ; Skip parameter list entry and point to next parameter
A8D4 7CECC4           (      monitor.asm):00766 (6)     67          inc     CmdErrorPtr         ; Increment command line error pointer
A8D7 20ED             (      monitor.asm):00767 (3)     70          bra     MmuParseChar        ; Go and compare the next character
A8D9                  (      monitor.asm):00768                 MmuParseSkip:
A8D9 BEECDA           (      monitor.asm):00769 (5)     75          ldx     TempWord            ; Restore parameter prompt pointer to starting position
A8DC 11B7ECC4         (      monitor.asm):00770 (5)     80          ste     CmdErrorPtr         ; Restore command prompt error pointer
A8E0                  (      monitor.asm):00771                 MmuParseSkipLoop:
A8E0 E6A0             (      monitor.asm):00772 (4+1)   85          ldb     ,Y+                 ; Read next character
A8E2 2AFC             (      monitor.asm):00773 (3)     88          bpl     MmuParseSkipLoop    ; Loop until parameter list end delimiter is found
A8E4 3122             (      monitor.asm):00774 (4+1)   93          leay    2,Y                 ; Jump over parameter address
A8E6 E6A4             (      monitor.asm):00775 (4+0)   97          ldb     ,Y                  ; Is it the end of the parameter list
A8E8 2712             (      monitor.asm):00776 (3)     100         beq     MmuParseNone        ; Yes it is, print error and exit
A8EA 20DA             (      monitor.asm):00777 (3)     103         bra     MmuParseChar        ; Repeat process until parameter found
A8EC                  (      monitor.asm):00778                 MmuParseValid:
                      (      monitor.asm):00779                     ; Check for characters after valid parameter
A8EC 8120             (      monitor.asm):00780 (2)     105         cmpa    #' '                ; Check for a parameter separator (space)
A8EE 2704             (      monitor.asm):00781 (3)     108         beq     MmuParseExecute     ; Yes, then execute parameter
A8F0 8100             (      monitor.asm):00782 (2)     110         cmpa    #$00                ; Check for an end of line in string (null)
A8F2 2608             (      monitor.asm):00783 (3)     113         bne     MmuParseNone        ; If it's something else, the parameter invalid, else execute
A8F4                  (      monitor.asm):00784                 MmuParseExecute:
                      (      monitor.asm):00785                 ;   inc     CmdErrorPtr         ; Shift pointer by 1 for arguments in command line
A8F4 ECA4             (      monitor.asm):00786 (5+0)   118         ldd     ,Y                  ; Load address of parameter from table
A8F6 EDC3             (      monitor.asm):00787 (5+2)   125         std     ,--U                ; Save address to user stack
A8F8 301F             (      monitor.asm):00788 (4+1)   130         leax    -1,X                ; Backup pointer 1 position, because of the auto advance above
A8FA 6ED1             (      monitor.asm):00789 (3+6)   139         jmp     [,U++]              ; Execute parameter
A8FC                  (      monitor.asm):00790                 MmuParseNone:
A8FC BDA4E3           (      monitor.asm):00791 (7)     146         jsr     ErrInvalidParameter ;
A8FF 39               (      monitor.asm):00792 (4)     150         rts
                      (      monitor.asm):00793                 
                      (      monitor.asm):00794                 ; MMU subroutines
                      (      monitor.asm):00795                 ; ---------------
                      (      monitor.asm):00796                 
                      (      monitor.asm):00797                 ; Prints the status of the MMU (Enabled or not, Task 0 or 1, and all bank registers)
A900                  (      monitor.asm):00798                 MmuStatus:
A900 8EB704           (      monitor.asm):00799 (3)     153         ldx     #MmuMsg
A903 BDA41F           (      monitor.asm):00800 (7)     160         jsr     OutStr              ; Print up to Enabled status
                      (      monitor.asm):00801                     ; Is the MMU enabled or disabled
A906 B6FF90           (      monitor.asm):00802 (4)     164         lda     $FF90               ; Load status of INIT0 register
A909 8440             (      monitor.asm):00803 (2)     166         anda    #%01000000          ; Check the status of bit 6
A90B 2611             (      monitor.asm):00804 (3)     169         bne     MmuEnabled          ; If it's enabled, go print ON
A90D 864F             (      monitor.asm):00805 (2)     171         lda     #'O'                ; Else print OFF
A90F BDA1C2           (      monitor.asm):00806 (7)     178         jsr     OutChar
A912 8646             (      monitor.asm):00807 (2)     180         lda     #'F'
A914 BDA1C2           (      monitor.asm):00808 (7)     187         jsr     OutChar
A917 8646             (      monitor.asm):00809 (2)     189         lda     #'F'
A919 BDA1C2           (      monitor.asm):00810 (7)     196         jsr     OutChar
A91C 200A             (      monitor.asm):00811 (3)     199         bra     MmuTaskNum          ; Check task number
A91E                  (      monitor.asm):00812                 MmuEnabled:
A91E 864F             (      monitor.asm):00813 (2)     201         lda     #'O'
A920 BDA1C2           (      monitor.asm):00814 (7)     208         jsr     OutChar
A923 864E             (      monitor.asm):00815 (2)     210         lda     #'N'
A925 BDA1C2           (      monitor.asm):00816 (7)     217         jsr     OutChar
A928                  (      monitor.asm):00817                 MmuTaskNum:
                      (      monitor.asm):00818                     ; What is the task number?
A928 BDA41F           (      monitor.asm):00819 (7)     224         jsr     OutStr              ; Print up to Task 0/1
A92B B6FF91           (      monitor.asm):00820 (4)     228         lda     $FF91               ; Load the status of INIT1 register
A92E 8401             (      monitor.asm):00821 (2)     230         anda    #%00000001          ; Check the status of bit 1
A930 2607             (      monitor.asm):00822 (3)     233         bne     MmuTaskNum1         ; If it's 1, go print 1
A932 8630             (      monitor.asm):00823 (2)     235         lda     #'0'                ; Else print 0
A934 BDA1C2           (      monitor.asm):00824 (7)     242         jsr     OutChar
A937 2005             (      monitor.asm):00825 (3)     245         bra     MmuTaskRegs
A939                  (      monitor.asm):00826                 MmuTaskNum1:
A939 8631             (      monitor.asm):00827 (2)     247         lda     #'1'
A93B BDA1C2           (      monitor.asm):00828 (7)     254         jsr     OutChar
A93E                  (      monitor.asm):00829                 MmuTaskRegs:
                      (      monitor.asm):00830                     ; Print the status of the bank registers $FFA0 to $FFAF
A93E BDA41F           (      monitor.asm):00831 (7)     261         jsr     OutStr              ; Print up to Task 1
A941 108EFFA0         (      monitor.asm):00832 (4)     265         ldy     #TASK0              ; Load base task 0 address ($FFA0)
A945 C608             (      monitor.asm):00833 (2)     267         ldb     #8                  ; 8 block counter
A947                  (      monitor.asm):00834                 MmuTask0Loop:
A947 A6A4             (      monitor.asm):00835 (4+0)   271         lda     ,Y                  ; Load content pointed by Y and increment to next address
A949 BDA3D7           (      monitor.asm):00836 (7)     278         jsr     OutByte             ; Print content
A94C 862D             (      monitor.asm):00837 (2)     280         lda     #'-'                ; Print separator
A94E BDA1C2           (      monitor.asm):00838 (7)     287         jsr     OutChar
A951 3121             (      monitor.asm):00839 (4+1)   292         leay    1,Y
A953 5A               (      monitor.asm):00840 (1)     293         decb                        ; Decrease pointer
A954 26F1             (      monitor.asm):00841 (3)     296         bne     MmuTask0Loop        ; Loop until all 8 blocks are printed
A956 5C               (      monitor.asm):00842 (1)     297         incb                        ; 0+1 is the number of characters to delete
A957 BDA1E3           (      monitor.asm):00843 (7)     304         jsr     DelChar             ; Delete last dash
A95A BDA41F           (      monitor.asm):00844 (7)     311         jsr     OutStr              ; Print till Task 1:
A95D 108EFFA8         (      monitor.asm):00845 (4)     315         ldy     #TASK1              ; Load base task 1 address ($FFA8)
A961 C608             (      monitor.asm):00846 (2)     317         ldb     #8                  ; 8 block counter
A963                  (      monitor.asm):00847                 MmuTask1Loop:
A963 A6A4             (      monitor.asm):00848 (4+0)   321         lda     ,Y                  ; Load the content pointed by Y and increment to next address
A965 BDA3D7           (      monitor.asm):00849 (7)     328         jsr     OutByte             ; Print content
A968 862D             (      monitor.asm):00850 (2)     330         lda     #'-'                ; Print separator
A96A BDA1C2           (      monitor.asm):00851 (7)     337         jsr     OutChar
A96D 3121             (      monitor.asm):00852 (4+1)   342         leay    1,Y
A96F 5A               (      monitor.asm):00853 (1)     343         decb                        ; Decrement pointer
A970 26F1             (      monitor.asm):00854 (3)     346         bne     MmuTask1Loop        ; Loop until all 8 blocks are printed
A972 5C               (      monitor.asm):00855 (1)     347         incb                        ; 0+1 is the number of characters to delete
A973 BDA1E3           (      monitor.asm):00856 (7)     354         jsr     DelChar             ; Delete last dash
A976 BDA3F9           (      monitor.asm):00857 (7)     361         jsr     OutCRLF             ; Change line
A979                  (      monitor.asm):00858                 MmuStatusEnd:
A979 39               (      monitor.asm):00859 (4)     365         rts
                      (      monitor.asm):00860                 
                      (      monitor.asm):00861                 ; Turns on the MMU
A97A                  (      monitor.asm):00862                 MmuOn:
A97A B6FF90           (      monitor.asm):00863 (4)     369         lda     $FF90               ; Load INIT0
A97D 8A40             (      monitor.asm):00864 (2)     371         ora     #%01000000          ; Activate bit 6
A97F B7FF90           (      monitor.asm):00865 (4)     375         sta     $FF90               ; Store INIT0 to activate MMU
A982 39               (      monitor.asm):00866 (4)     379         rts
                      (      monitor.asm):00867                 
                      (      monitor.asm):00868                 ; Turns off the MMU
A983                  (      monitor.asm):00869                 MmuOff:
A983 B6FF90           (      monitor.asm):00870 (4)     383         lda     $FF90               ; Load INIT0
A986 84BF             (      monitor.asm):00871 (2)     385         anda    #%10111111          ; Deactivate bit 6
A988 B7FF90           (      monitor.asm):00872 (4)     389         sta     $FF90               ; Store INIT0 to activate MMU
A98B 39               (      monitor.asm):00873 (4)     393         rts
                      (      monitor.asm):00874                     
                      (      monitor.asm):00875                 ; Select the Task number
A98C                  (      monitor.asm):00876                 MmuTask:
A98C BDABBD           (      monitor.asm):00877 (7)     400         jsr     SkipSpaces          ; Remove leading spaces
A98F A684             (      monitor.asm):00878 (4+0)   404         lda     ,X                  ; Load first character
A991 271C             (      monitor.asm):00879 (3)     407         beq     MmuTaskErr          ; Is it the end of the string?
A993 8130             (      monitor.asm):00880 (2)     409         cmpa    #'0'                ; Is it task 0?
A995 2706             (      monitor.asm):00881 (3)     412         beq     MmuTaskSet0         ; Yes, then set to task 0
A997 8131             (      monitor.asm):00882 (2)     414         cmpa    #'1'                ; Is it task 1?
A999 270B             (      monitor.asm):00883 (3)     417         beq     MmuTaskSet1         ; Yes, then set to task 1
A99B 2012             (      monitor.asm):00884 (3)     420         bra     MmuTaskErr
A99D                  (      monitor.asm):00885                 MmuTaskSet0:
A99D B6FF91           (      monitor.asm):00886 (4)     424         lda     $FF91               ; Load INIT1
A9A0 84FE             (      monitor.asm):00887 (2)     426         anda    #%11111110          ; Deactivate bit 0
A9A2 B7FF91           (      monitor.asm):00888 (4)     430         sta     $FF91               ; Store INIT1 to switch to task 0
A9A5 39               (      monitor.asm):00889 (4)     434         rts
A9A6                  (      monitor.asm):00890                 MmuTaskSet1:
A9A6 B6FF91           (      monitor.asm):00891 (4)     438         lda     $FF91               ; Load INIT1
A9A9 8A01             (      monitor.asm):00892 (2)     440         ora     #%00000001          ; Activate bit 0
A9AB B7FF91           (      monitor.asm):00893 (4)     444         sta     $FF91               ; Store INIT1 to switch to task 1
A9AE 39               (      monitor.asm):00894 (4)     448         rts
A9AF                  (      monitor.asm):00895                 MmuTaskErr:
A9AF BDA4E3           (      monitor.asm):00896 (7)     455         jsr     ErrInvalidParameter ; Print invalid parameter message
A9B2 39               (      monitor.asm):00897 (4)     459         rts
                      (      monitor.asm):00898                     
                      (      monitor.asm):00899                 ; Reset the MMU to it's defaults
A9B3                  (      monitor.asm):00900                 MmuReset:
A9B3 BDA983           (      monitor.asm):00901 (7)     466         jsr     MmuOff              ; Disable MMU
A9B6 BDA99D           (      monitor.asm):00902 (7)     473         jsr     MmuTaskSet0         ; Switch to Task 0
                      (      monitor.asm):00903                     ; Reset Banks to default
A9B9 8EFC00           (      monitor.asm):00904 (3)     476         ldx     #BlockTable         ; Block table base address
A9BC 108EFFA0         (      monitor.asm):00905 (4)     480         ldy     #TASK0              ; Bank registers base address
A9C0 4F               (      monitor.asm):00906 (1)     481         clra                        ; Set A to 0
A9C1                  (      monitor.asm):00907                 MmuResetLoop:
A9C1 A780             (      monitor.asm):00908 (4+1)   486         sta     ,X+                 ; Store value in block table
A9C3 A7A0             (      monitor.asm):00909 (4+1)   491         sta     ,Y+                 ; Store value in bank register
A9C5 4C               (      monitor.asm):00910 (1)     492         inca                        ; Increment A
A9C6 810F             (      monitor.asm):00911 (2)     494         cmpa    #$0F                ; Are we at the last address?
A9C8 26F7             (      monitor.asm):00912 (3)     497         bne     MmuResetLoop        ; No, continue reseting the bank registers
A9CA 8607             (      monitor.asm):00913 (2)     499         lda     #$07                ; Set the 8th bank of task 1 to match that of task 0
A9CC A784             (      monitor.asm):00914 (4+0)   503         sta     ,X                  ; Store it
A9CE A7A4             (      monitor.asm):00915 (4+0)   507         sta     ,Y                  ; Store it
A9D0 39               (      monitor.asm):00916 (4)     511         rts
                      (      monitor.asm):00917                 
                      (      monitor.asm):00918                 ;  ____                  _    
                      (      monitor.asm):00919                 ; |  _ \    ___    ___  | | __
                      (      monitor.asm):00920                 ; | |_) |  / _ \  / _ \ | |/ /
                      (      monitor.asm):00921                 ; |  __/  |  __/ |  __/ |   < 
                      (      monitor.asm):00922                 ; |_|      \___|  \___| |_|\_\
                      (      monitor.asm):00923                 ;
                      (      monitor.asm):00924                 ; Read a byte from a specific or current address
                      (      monitor.asm):00925                 ; ==============================================
                      (      monitor.asm):00926                 
                      (      monitor.asm):00927                     PRAGMA cc
                      (      monitor.asm):00928                     
A9D1                  (      monitor.asm):00929                 Peek:
A9D1 BDABBD           (      monitor.asm):00930 (7)     7           jsr     SkipSpaces
A9D4 A684             (      monitor.asm):00931 (4+0)   11          lda     ,X
A9D6 2708             (      monitor.asm):00932 (3)     14          beq     PeekDisplay
A9D8 BDA28E           (      monitor.asm):00933 (7)     21          jsr     GetStrWord
A9DB 241A             (      monitor.asm):00934 (3)     24          bcc     PeekInvalidAddr
A9DD FDECC5           (      monitor.asm):00935 (5)     29          std     CurrAddress
A9E0                  (      monitor.asm):00936                 PeekDisplay:
A9E0 FCECC5           (      monitor.asm):00937 (5)     34          ldd     CurrAddress
A9E3 BDA44A           (      monitor.asm):00938 (7)     41          jsr     OutWord
A9E6 863D             (      monitor.asm):00939 (2)     43          lda     #'='
A9E8 BDA1C2           (      monitor.asm):00940 (7)     50          jsr     OutChar
A9EB A69FECC5         (      monitor.asm):00941 (4+5)   59          lda     [CurrAddress]
A9EF BDA3D7           (      monitor.asm):00942 (7)     66          jsr     OutByte
A9F2 BDA3F9           (      monitor.asm):00943 (7)     73          jsr     OutCRLF
A9F5 2003             (      monitor.asm):00944 (3)     76          bra     PeekEnd
A9F7                  (      monitor.asm):00945                 PeekInvalidAddr:
A9F7 BDA4BC           (      monitor.asm):00946 (7)     83          jsr     ErrInvalidAddress
A9FA                  (      monitor.asm):00947                 PeekEnd:
A9FA 39               (      monitor.asm):00948 (4)     87          rts
                      (      monitor.asm):00949                 
                      (      monitor.asm):00950                 ;  ____            _           
                      (      monitor.asm):00951                 ; |  _ \    ___   | | __   ___ 
                      (      monitor.asm):00952                 ; | |_) |  / _ \  | |/ /  / _ \
                      (      monitor.asm):00953                 ; |  __/  | (_) | |   <  |  __/
                      (      monitor.asm):00954                 ; |_|      \___/  |_|\_\  \___|
                      (      monitor.asm):00955                 ;
                      (      monitor.asm):00956                 ;
                      (      monitor.asm):00957                 ; Writes a byte at a specific address
                      (      monitor.asm):00958                 ; ===================================
                      (      monitor.asm):00959                 
                      (      monitor.asm):00960                     PRAGMA cc
                      (      monitor.asm):00961                     
A9FB                  (      monitor.asm):00962                 Poke:
A9FB BDABBD           (      monitor.asm):00963 (7)     7           jsr     SkipSpaces          ; Remove excessive leading spaces
A9FE A684             (      monitor.asm):00964 (4+0)   11          lda     ,X                  ; Load character
AA00 2735             (      monitor.asm):00965 (3)     14          beq     PokeNoParameters    ; If no parameters, print no parameter error
AA02 BDA28E           (      monitor.asm):00966 (7)     21          jsr     GetStrWord          ; Get an address
AA05 242B             (      monitor.asm):00967 (3)     24          bcc     PokeInvalidAddress  ; If error in address, print invalid address error
AA07 FDECC5           (      monitor.asm):00968 (5)     29          std     CurrAddress         ; Save address
AA0A BDABBD           (      monitor.asm):00969 (7)     36          jsr     SkipSpaces          ; Remove unecessary spaces
AA0D BDA1F9           (      monitor.asm):00970 (7)     43          jsr     GetStrByte          ; Get byte
AA10 241B             (      monitor.asm):00971 (3)     46          bcc     PokeInvalidByte     ; If error in byte, print invalid byte error
AA12 A79FECC5         (      monitor.asm):00972 (4+5)   55          sta     [CurrAddress]       ; Poke value at address
AA16 FCECC5           (      monitor.asm):00973 (5)     60          ldd     CurrAddress         ; Print address
AA19 BDA44A           (      monitor.asm):00974 (7)     67          jsr     OutWord             ;
AA1C 863D             (      monitor.asm):00975 (2)     69          lda     #'='                ; Print a colon
AA1E BDA1C2           (      monitor.asm):00976 (7)     76          jsr     OutChar             ;
AA21 A69FECC5         (      monitor.asm):00977 (4+5)   85          lda     [CurrAddress]       ; Load A from Current Address
AA25 BDA3D7           (      monitor.asm):00978 (7)     92          jsr     OutByte             ; Print byte value
AA28 BDA3F9           (      monitor.asm):00979 (7)     99          jsr     OutCRLF             ; New line
AA2B 200D             (      monitor.asm):00980 (3)     102         bra     PokeEnd
AA2D                  (      monitor.asm):00981                 PokeInvalidByte:
AA2D BDA4C9           (      monitor.asm):00982 (7)     109         jsr     ErrInvalidByte      ; Print invalid byte
AA30 2008             (      monitor.asm):00983 (3)     112         bra     PokeEnd
AA32                  (      monitor.asm):00984                 PokeInvalidAddress:
AA32 BDA4BC           (      monitor.asm):00985 (7)     119         jsr     ErrInvalidAddress   ; Print invalid address error
AA35 2003             (      monitor.asm):00986 (3)     122         bra     PokeEnd
AA37                  (      monitor.asm):00987                 PokeNoParameters:
AA37 BDA4F0           (      monitor.asm):00988 (7)     129         jsr     ErrNoParameter      ; Print no parameter error
AA3A                  (      monitor.asm):00989                 PokeEnd:
AA3A 39               (      monitor.asm):00990 (4)     133         rts
                      (      monitor.asm):00991                 
                      (      monitor.asm):00992                 ;  ____           _           _     ____                   _         _                       
                      (      monitor.asm):00993                 ; |  _ \   _ __  (_)  _ __   | |_  |  _ \    ___    __ _  (_)  ___  | |_    ___   _ __   ___ 
                      (      monitor.asm):00994                 ; | |_) | | '__| | | | '_ \  | __| | |_) |  / _ \  / _` | | | / __| | __|  / _ \ | '__| / __|
                      (      monitor.asm):00995                 ; |  __/  | |    | | | | | | | |_  |  _ <  |  __/ | (_| | | | \__ \ | |_  |  __/ | |    \__ \
                      (      monitor.asm):00996                 ; |_|     |_|    |_| |_| |_|  \__| |_| \_\  \___|  \__, | |_| |___/  \__|  \___| |_|    |___/
                      (      monitor.asm):00997                 ;                                                  |___/                                     
                      (      monitor.asm):00998                 ;
                      (      monitor.asm):00999                 ; Print Registers
                      (      monitor.asm):01000                 ; ===============
                      (      monitor.asm):01001                 
                      (      monitor.asm):01002                     PRAGMA cc
                      (      monitor.asm):01003                     
AA3B                  (      monitor.asm):01004                 PrintRegisters:
                      (      monitor.asm):01005                     ; Print Register A
AA3B 8641             (      monitor.asm):01006 (2)     2           lda     #'A'
AA3D BDA1C2           (      monitor.asm):01007 (7)     9           jsr     OutChar
AA40 863A             (      monitor.asm):01008 (2)     11          lda     #':'
AA42 BDA1C2           (      monitor.asm):01009 (7)     18          jsr     OutChar
AA45 B6ECCB           (      monitor.asm):01010 (4)     22          lda     RegA
AA48 BDA3D7           (      monitor.asm):01011 (7)     29          jsr     OutByte
AA4B 8620             (      monitor.asm):01012 (2)     31          lda     #' '
AA4D BDA1C2           (      monitor.asm):01013 (7)     38          jsr     OutChar
                      (      monitor.asm):01014                     ; Print Register B
AA50 8642             (      monitor.asm):01015 (2)     40          lda     #'B'
AA52 BDA1C2           (      monitor.asm):01016 (7)     47          jsr     OutChar
AA55 863A             (      monitor.asm):01017 (2)     49          lda     #':'
AA57 BDA1C2           (      monitor.asm):01018 (7)     56          jsr     OutChar
AA5A B6ECCC           (      monitor.asm):01019 (4)     60          lda     RegB
AA5D BDA3D7           (      monitor.asm):01020 (7)     67          jsr     OutByte
AA60 8620             (      monitor.asm):01021 (2)     69          lda     #' '
AA62 BDA1C2           (      monitor.asm):01022 (7)     76          jsr     OutChar
                      (      monitor.asm):01023                     ; Print Register E
AA65 8645             (      monitor.asm):01024 (2)     78          lda     #'E'
AA67 BDA1C2           (      monitor.asm):01025 (7)     85          jsr     OutChar
AA6A 863A             (      monitor.asm):01026 (2)     87          lda     #':'
AA6C BDA1C2           (      monitor.asm):01027 (7)     94          jsr     OutChar
AA6F B6ECCD           (      monitor.asm):01028 (4)     98          lda     RegE
AA72 BDA3D7           (      monitor.asm):01029 (7)     105         jsr     OutByte
AA75 8620             (      monitor.asm):01030 (2)     107         lda     #' '
AA77 BDA1C2           (      monitor.asm):01031 (7)     114         jsr     OutChar
                      (      monitor.asm):01032                     ; Print Register F
AA7A 8646             (      monitor.asm):01033 (2)     116         lda     #'F'
AA7C BDA1C2           (      monitor.asm):01034 (7)     123         jsr     OutChar
AA7F 863A             (      monitor.asm):01035 (2)     125         lda     #':'
AA81 BDA1C2           (      monitor.asm):01036 (7)     132         jsr     OutChar
AA84 B6ECCE           (      monitor.asm):01037 (4)     136         lda     RegF
AA87 BDA3D7           (      monitor.asm):01038 (7)     143         jsr     OutByte
AA8A 8620             (      monitor.asm):01039 (2)     145         lda     #' '
AA8C BDA1C2           (      monitor.asm):01040 (7)     152         jsr     OutChar
                      (      monitor.asm):01041                     ; Print Register X
AA8F 8658             (      monitor.asm):01042 (2)     154         lda     #'X'
AA91 BDA1C2           (      monitor.asm):01043 (7)     161         jsr     OutChar
AA94 863A             (      monitor.asm):01044 (2)     163         lda     #':'
AA96 BDA1C2           (      monitor.asm):01045 (7)     170         jsr     OutChar
AA99 FCECCF           (      monitor.asm):01046 (5)     175         ldd     RegX
AA9C BDA44A           (      monitor.asm):01047 (7)     182         jsr     OutWord
AA9F 8620             (      monitor.asm):01048 (2)     184         lda     #' '
AAA1 BDA1C2           (      monitor.asm):01049 (7)     191         jsr     OutChar
                      (      monitor.asm):01050                     ; Print Register Y
AAA4 8659             (      monitor.asm):01051 (2)     193         lda     #'Y'
AAA6 BDA1C2           (      monitor.asm):01052 (7)     200         jsr     OutChar
AAA9 863A             (      monitor.asm):01053 (2)     202         lda     #':'
AAAB BDA1C2           (      monitor.asm):01054 (7)     209         jsr     OutChar
AAAE FCECD1           (      monitor.asm):01055 (5)     214         ldd     RegY
AAB1 BDA44A           (      monitor.asm):01056 (7)     221         jsr     OutWord
AAB4 8620             (      monitor.asm):01057 (2)     223         lda     #' '
AAB6 BDA1C2           (      monitor.asm):01058 (7)     230         jsr     OutChar
                      (      monitor.asm):01059                     ; Print Register U
AAB9 8655             (      monitor.asm):01060 (2)     232         lda     #'U'
AABB BDA1C2           (      monitor.asm):01061 (7)     239         jsr     OutChar
AABE 863A             (      monitor.asm):01062 (2)     241         lda     #':'
AAC0 BDA1C2           (      monitor.asm):01063 (7)     248         jsr     OutChar
AAC3 FCECD3           (      monitor.asm):01064 (5)     253         ldd     RegU
AAC6 BDA44A           (      monitor.asm):01065 (7)     260         jsr     OutWord
AAC9 8620             (      monitor.asm):01066 (2)     262         lda     #' '
AACB BDA1C2           (      monitor.asm):01067 (7)     269         jsr     OutChar
                      (      monitor.asm):01068                     ; Print Register S
AACE 8653             (      monitor.asm):01069 (2)     271         lda     #'S'
AAD0 BDA1C2           (      monitor.asm):01070 (7)     278         jsr     OutChar
AAD3 863A             (      monitor.asm):01071 (2)     280         lda     #':'
AAD5 BDA1C2           (      monitor.asm):01072 (7)     287         jsr     OutChar
AAD8 FCECD5           (      monitor.asm):01073 (5)     292         ldd     RegS
AADB BDA44A           (      monitor.asm):01074 (7)     299         jsr     OutWord
AADE 8620             (      monitor.asm):01075 (2)     301         lda     #' '
AAE0 BDA1C2           (      monitor.asm):01076 (7)     308         jsr     OutChar
                      (      monitor.asm):01077                     ; Print Register CC
AAE3 8643             (      monitor.asm):01078 (2)     310         lda     #'C'
AAE5 BDA1C2           (      monitor.asm):01079 (7)     317         jsr     OutChar
AAE8 BDA1C2           (      monitor.asm):01080 (7)     324         jsr     OutChar
AAEB 863A             (      monitor.asm):01081 (2)     326         lda     #':'
AAED BDA1C2           (      monitor.asm):01082 (7)     333         jsr     OutChar
AAF0 B6ECC9           (      monitor.asm):01083 (4)     337         lda     RegCC
AAF3 BDA3D7           (      monitor.asm):01084 (7)     344         jsr     OutByte
AAF6 8620             (      monitor.asm):01085 (2)     346         lda     #' '
AAF8 BDA1C2           (      monitor.asm):01086 (7)     353         jsr     OutChar
                      (      monitor.asm):01087                     ; Print Register DP
AAFB 8644             (      monitor.asm):01088 (2)     355         lda     #'D'
AAFD BDA1C2           (      monitor.asm):01089 (7)     362         jsr     OutChar
AB00 8650             (      monitor.asm):01090 (2)     364         lda     #'P'
AB02 BDA1C2           (      monitor.asm):01091 (7)     371         jsr     OutChar
AB05 863A             (      monitor.asm):01092 (2)     373         lda     #':'
AB07 BDA1C2           (      monitor.asm):01093 (7)     380         jsr     OutChar
AB0A B6ECCA           (      monitor.asm):01094 (4)     384         lda     RegDP
AB0D BDA3D7           (      monitor.asm):01095 (7)     391         jsr     OutByte
AB10 8620             (      monitor.asm):01096 (2)     393         lda     #' '
AB12 BDA1C2           (      monitor.asm):01097 (7)     400         jsr     OutChar
                      (      monitor.asm):01098                     ; Print Program Counter
AB15 8650             (      monitor.asm):01099 (2)     402         lda     #'P'
AB17 BDA1C2           (      monitor.asm):01100 (7)     409         jsr     OutChar
AB1A 8643             (      monitor.asm):01101 (2)     411         lda     #'C'
AB1C BDA1C2           (      monitor.asm):01102 (7)     418         jsr     OutChar
AB1F 863A             (      monitor.asm):01103 (2)     420         lda     #':'
AB21 BDA1C2           (      monitor.asm):01104 (7)     427         jsr     OutChar
AB24 FCECD7           (      monitor.asm):01105 (5)     432         ldd     RegPC
AB27 BDA44A           (      monitor.asm):01106 (7)     439         jsr     OutWord
AB2A BDA3F9           (      monitor.asm):01107 (7)     446         jsr     OutCRLF
AB2D 39               (      monitor.asm):01108 (4)     450         rts
                      (      monitor.asm):01109                 
                      (      monitor.asm):01110                 ;  ____                  _       ____                   _         _                       
                      (      monitor.asm):01111                 ; |  _ \   _   _   ___  | |__   |  _ \    ___    __ _  (_)  ___  | |_    ___   _ __   ___ 
                      (      monitor.asm):01112                 ; | |_) | | | | | / __| | '_ \  | |_) |  / _ \  / _` | | | / __| | __|  / _ \ | '__| / __|
                      (      monitor.asm):01113                 ; |  __/  | |_| | \__ \ | | | | |  _ <  |  __/ | (_| | | | \__ \ | |_  |  __/ | |    \__ \
                      (      monitor.asm):01114                 ; |_|      \__,_| |___/ |_| |_| |_| \_\  \___|  \__, | |_| |___/  \__|  \___| |_|    |___/
                      (      monitor.asm):01115                 ;                                               |___/                                     
                      (      monitor.asm):01116                 ;
                      (      monitor.asm):01117                 ; Push Registers
                      (      monitor.asm):01118                 ; ==============
                      (      monitor.asm):01119                 ; Input:    User Stack contains register content after a return from run
                      (      monitor.asm):01120                 
                      (      monitor.asm):01121                     PRAGMA cc
                      (      monitor.asm):01122                     
AB2E                  (      monitor.asm):01123                 PushRegisters:  
                      (      monitor.asm):01124                     ; Recover register values from last run command
AB2E 103B             (      monitor.asm):01125 (6)     6           puluw
AB30 377F             (      monitor.asm):01126 (4+10)  20          pulu    CC,A,B,DP,X,Y,S     ; Restore all, except PC
                      (      monitor.asm):01127                     ; Save registers in variables
AB32 3401             (      monitor.asm):01128 (4+1)   25          pshs    CC                  ; Store CC so it's not altered
AB34 B7ECCB           (      monitor.asm):01129 (4)     29          sta     RegA                ; Save the A register
AB37 3502             (      monitor.asm):01130 (4+1)   34          puls    A                   ; Restore CC so it can be saved
AB39 B7ECC9           (      monitor.asm):01131 (4)     38          sta     RegCC               ; Save the condition code register
AB3C F7ECCC           (      monitor.asm):01132 (4)     42          stb     RegB                ; Save the B register
AB3F 11B7ECCD         (      monitor.asm):01133 (5)     47          ste     RegE                ; Save the E register
AB43 11F7ECCE         (      monitor.asm):01134 (5)     52          stf     RegF                ; Save the F register
AB47 BFECCF           (      monitor.asm):01135 (5)     57          stx     RegX                ; Save the X register
AB4A 10BFECD1         (      monitor.asm):01136 (6)     63          sty     RegY                ; Save the Y register
AB4E 10FFECD5         (      monitor.asm):01137 (6)     69          sts     RegS                ; Save the systemp stack
AB52 3706             (      monitor.asm):01138 (4+2)   75          pulu    D                   ; Restore PC in D
AB54 830002           (      monitor.asm):01139 (3)     78          subd    #$0002              ; Substract 2 from program counter to account for the pshu instruction
AB57 FDECD7           (      monitor.asm):01140 (5)     83          std     RegPC               ; Save the program counter that was in D
AB5A FFECD3           (      monitor.asm):01141 (5)     88          stu     RegU                ; Save the user stack
AB5D 39               (      monitor.asm):01142 (4)     92          rts
                      (      monitor.asm):01143                 
                      (      monitor.asm):01144                 ;  ____            _   _   ____                   _         _                       
                      (      monitor.asm):01145                 ; |  _ \   _   _  | | | | |  _ \    ___    __ _  (_)  ___  | |_    ___   _ __   ___ 
                      (      monitor.asm):01146                 ; | |_) | | | | | | | | | | |_) |  / _ \  / _` | | | / __| | __|  / _ \ | '__| / __|
                      (      monitor.asm):01147                 ; |  __/  | |_| | | | | | |  _ <  |  __/ | (_| | | | \__ \ | |_  |  __/ | |    \__ \
                      (      monitor.asm):01148                 ; |_|      \__,_| |_| |_| |_| \_\  \___|  \__, | |_| |___/  \__|  \___| |_|    |___/
                      (      monitor.asm):01149                 ;                                         |___/                                     
                      (      monitor.asm):01150                 ;
                      (      monitor.asm):01151                 ; Pull Registers
                      (      monitor.asm):01152                 ; ==============
                      (      monitor.asm):01153                 
                      (      monitor.asm):01154                     PRAGMA cc
                      (      monitor.asm):01155                     
AB5E                  (      monitor.asm):01156                 PullRegisters:  
AB5E B6ECC9           (      monitor.asm):01157 (4)     4           lda     RegCC               ; Load CC register
AB61 3402             (      monitor.asm):01158 (4+1)   9           pshs    A                   ; Store it so it can be restored
AB63 B6ECCB           (      monitor.asm):01159 (4)     13          lda     RegA                ; Load the A register
AB66 F6ECCC           (      monitor.asm):01160 (4)     17          ldb     RegB                ; Load the B register
AB69 11B6ECCD         (      monitor.asm):01161 (5)     22          lde     RegE                ; Load the E register
AB6D 11F6ECCE         (      monitor.asm):01162 (5)     27          ldf     RegF                ; Load the F register
AB71 BEECCF           (      monitor.asm):01163 (5)     32          ldx     RegX                ; Load the X register
AB74 10BEECD1         (      monitor.asm):01164 (6)     38          ldy     RegY                ; Load the Y register
AB78 FEECD3           (      monitor.asm):01165 (5)     43          ldu     RegU                ; Load the user stack
AB7B 3581             (      monitor.asm):01166 (4+3)   50          puls    CC,PC
                      (      monitor.asm):01167                 
                      (      monitor.asm):01168                 ;  ____                  
                      (      monitor.asm):01169                 ; |  _ \   _   _   _ __  
                      (      monitor.asm):01170                 ; | |_) | | | | | | '_ \ 
                      (      monitor.asm):01171                 ; |  _ <  | |_| | | | | |
                      (      monitor.asm):01172                 ; |_| \_\  \__,_| |_| |_|
                      (      monitor.asm):01173                 ;
                      (      monitor.asm):01174                 ; Execute code at address specified, or CurrAddress
                      (      monitor.asm):01175                 ; -------------------------------------------------
                      (      monitor.asm):01176                 ; Input:    X = Command line string
                      (      monitor.asm):01177                 
                      (      monitor.asm):01178                     PRAGMA cc
                      (      monitor.asm):01179                     
AB7D                  (      monitor.asm):01180                 Run:
AB7D BDABBD           (      monitor.asm):01181 (7)     7           jsr     SkipSpaces          ; Removes possible leading spaces
AB80 A684             (      monitor.asm):01182 (4+0)   11          lda     ,X                  ; Read character from command line
AB82 2708             (      monitor.asm):01183 (3)     14          beq     RunValidate         ; Use current address
AB84                  (      monitor.asm):01184                 RunGetAddress:
AB84 BDA28E           (      monitor.asm):01185 (7)     21          jsr     GetStrWord          ; Get address from the input buffer
AB87 2413             (      monitor.asm):01186 (3)     24          bcc     RunError            ; Invalid address, then print error
AB89 FDECC5           (      monitor.asm):01187 (5)     29          std     CurrAddress         ; Save address to memory
AB8C                  (      monitor.asm):01188                 RunValidate:
AB8C A69FECC5         (      monitor.asm):01189 (4+5)   38          lda     [CurrAddress]       ; Load byte at specified address
AB90 270D             (      monitor.asm):01190 (3)     41          beq     RunEnd              ; If it's zero, then don't try to execute code
AB92                  (      monitor.asm):01191                 RunExecute:
AB92 7CECC8           (      monitor.asm):01192 (6)     47          inc     RunFlag             ; Make run flag non zero
AB95 BDAB5E           (      monitor.asm):01193 (7)     54          jsr     PullRegisters       ; Restore registers from previous command
AB98 6E9FECC5         (      monitor.asm):01194 (3+5)   62          jmp     [CurrAddress]       ; Execute code at specified address
AB9C                  (      monitor.asm):01195                 RunError:
AB9C BDA4BC           (      monitor.asm):01196 (7)     69          jsr     ErrInvalidAddress   ; If there's an error in the address, print it
AB9F                  (      monitor.asm):01197                 RunEnd:
AB9F 39               (      monitor.asm):01198 (4)     73          rts
                      (      monitor.asm):01199                 
                      (      monitor.asm):01200                 ;  ____           _        _          _       _                           
                      (      monitor.asm):01201                 ; / ___|    ___  | |_     / \      __| |   __| |  _ __    ___   ___   ___ 
                      (      monitor.asm):01202                 ; \___ \   / _ \ | __|   / _ \    / _` |  / _` | | '__|  / _ \ / __| / __|
                      (      monitor.asm):01203                 ;  ___) | |  __/ | |_   / ___ \  | (_| | | (_| | | |    |  __/ \__ \ \__ \
                      (      monitor.asm):01204                 ; |____/   \___|  \__| /_/   \_\  \__,_|  \__,_| |_|     \___| |___/ |___/
                      (      monitor.asm):01205                 ;
                      (      monitor.asm):01206                 ; Sets the current address
                      (      monitor.asm):01207                 ; ========================
                      (      monitor.asm):01208                 ; Input:    X = Command line string
                      (      monitor.asm):01209                 
                      (      monitor.asm):01210                     PRAGMA cc
                      (      monitor.asm):01211                     
ABA0                  (      monitor.asm):01212                 SetAddress:
ABA0 BDABBD           (      monitor.asm):01213 (7)     7           jsr     SkipSpaces          ; Remove leading spaces
ABA3 A684             (      monitor.asm):01214 (4+0)   11          lda     ,X                  ; Load first character
ABA5 270F             (      monitor.asm):01215 (3)     14          beq     SetAddressDefault   ; Is it the end of the string?
ABA7 BDA28E           (      monitor.asm):01216 (7)     21          jsr     GetStrWord          ; Get address from the input buffer
ABAA 2405             (      monitor.asm):01217 (3)     24          bcc     SetAddressError     ; Error in address
ABAC FDECC5           (      monitor.asm):01218 (5)     29          std     CurrAddress         ; Save the address
ABAF 200B             (      monitor.asm):01219 (3)     32          bra     SetAddressEnd
ABB1                  (      monitor.asm):01220                 SetAddressError:
ABB1 BDA4BC           (      monitor.asm):01221 (7)     39          jsr     ErrInvalidAddress   ; Display address error
ABB4 2006             (      monitor.asm):01222 (3)     42          bra     SetAddressEnd
ABB6                  (      monitor.asm):01223                 SetAddressDefault:
ABB6 CC0000           (      monitor.asm):01224 (3)     45          ldd     #$0000
ABB9 FDECC5           (      monitor.asm):01225 (5)     50          std     CurrAddress         ; Set default address to $0000
ABBC                  (      monitor.asm):01226                 SetAddressEnd:
ABBC 39               (      monitor.asm):01227 (4)     54          rts
                      (      monitor.asm):01228                 
                      (      monitor.asm):01229                 ;  ____    _      _           ____                                      
                      (      monitor.asm):01230                 ; / ___|  | | __ (_)  _ __   / ___|   _ __     __ _    ___    ___   ___ 
                      (      monitor.asm):01231                 ; \___ \  | |/ / | | | '_ \  \___ \  | '_ \   / _` |  / __|  / _ \ / __|
                      (      monitor.asm):01232                 ;  ___) | |   <  | | | |_) |  ___) | | |_) | | (_| | | (__  |  __/ \__ \
                      (      monitor.asm):01233                 ; |____/  |_|\_\ |_| | .__/  |____/  | .__/   \__,_|  \___|  \___| |___/
                      (      monitor.asm):01234                 ;                    |_|             |_|
                      (      monitor.asm):01235                 ;
                      (      monitor.asm):01236                 ; Skip leading spaces in string and positions pointer to first non-space character
                      (      monitor.asm):01237                 ; ================================================================================
                      (      monitor.asm):01238                 ; Input:    X = Starting position of string pointer
                      (      monitor.asm):01239                 ; Output:   X = New position of pointer
                      (      monitor.asm):01240                 
                      (      monitor.asm):01241                     PRAGMA cc
                      (      monitor.asm):01242                 
ABBD                  (      monitor.asm):01243                 SkipSpaces:
ABBD 3402             (      monitor.asm):01244 (4+1)   5           pshs    A
ABBF                  (      monitor.asm):01245                 SkipSpacesLoop:
ABBF A684             (      monitor.asm):01246 (4+0)   9           lda     ,X                  ; Load character from string
ABC1 270B             (      monitor.asm):01247 (3)     12          beq     SkipSpacesEnd       ; Is it the end of the string? Yes, then exit
ABC3 8120             (      monitor.asm):01248 (2)     14          cmpa    #' '                ; Is it a space?
ABC5 2607             (      monitor.asm):01249 (3)     17          bne     SkipSpacesEnd       ; Not a space? Then end subroutine
ABC7 3001             (      monitor.asm):01250 (4+1)   22          leax    1,X                 ; Increment index for next character
ABC9 7CECC4           (      monitor.asm):01251 (6)     28          inc     CmdErrorPtr         ; Increment error pointer to next potential error location
ABCC 20F1             (      monitor.asm):01252 (3)     31          bra     SkipSpacesLoop      ; Go and read another character
ABCE                  (      monitor.asm):01253                 SkipSpacesEnd:
ABCE 3582             (      monitor.asm):01254 (4+3)   38          puls    A,PC
                      (      monitor.asm):01255                 
                      (      monitor.asm):01256                 ; __        __                             ____                    _   
                      (      monitor.asm):01257                 ; \ \      / /   __ _   _ __   _ __ ___   | __ )    ___     ___   | |_ 
                      (      monitor.asm):01258                 ;  \ \ /\ / /   / _` | | '__| | '_ ` _ \  |  _ \   / _ \   / _ \  | __|
                      (      monitor.asm):01259                 ;   \ V  V /   | (_| | | |    | | | | | | | |_) | | (_) | | (_) | | |_ 
                      (      monitor.asm):01260                 ;    \_/\_/     \__,_| |_|    |_| |_| |_| |____/   \___/   \___/   \__|
                      (      monitor.asm):01261                 ;
                      (      monitor.asm):01262                 ; Warm boot the computer
                      (      monitor.asm):01263                 ; ======================
                      (      monitor.asm):01264                 
ABD0                  (      monitor.asm):01265                 Warmboot:
ABD0 7EA011           (      monitor.asm):01266 (3)     41          jmp     Warm                ; Warm boots the computer
                      (      monitor.asm):01267                     
                      (      monitor.asm):01268                 ; __        __         _   _          
                      (      monitor.asm):01269                 ; \ \      / /  _ __  (_) | |_    ___ 
                      (      monitor.asm):01270                 ;  \ \ /\ / /  | '__| | | | __|  / _ \
                      (      monitor.asm):01271                 ;   \ V  V /   | |    | | | |_  |  __/
                      (      monitor.asm):01272                 ;    \_/\_/    |_|    |_|  \__|  \___|
                      (      monitor.asm):01273                 ;
                      (      monitor.asm):01274                 ; Write a sequence of bytes starting at a base address
                      (      monitor.asm):01275                 ; ====================================================
                      (      monitor.asm):01276                 
                      (      monitor.asm):01277                     PRAGMA cc
                      (      monitor.asm):01278                 
ABD3                  (      monitor.asm):01279                 Write:
                      (      monitor.asm):01280                     ; Get base address
ABD3 BDABBD           (      monitor.asm):01281 (7)     7           jsr     SkipSpaces          ; Skipe leading white spaces
ABD6 A684             (      monitor.asm):01282 (4+0)   11          lda     ,X                  ; Load first character
ABD8 272E             (      monitor.asm):01283 (3)     14          beq     WriteNoParameter    ; If it's the end of the string, then missing parameter
ABDA BDA28E           (      monitor.asm):01284 (7)     21          jsr     GetStrWord          ; Get address from the input buffer
ABDD 242D             (      monitor.asm):01285 (3)     24          bcc     WriteAddressError   ; Error in address
ABDF FDECC5           (      monitor.asm):01286 (5)     29          std     CurrAddress         ; Save the address
ABE2 1F02             (      monitor.asm):01287 (4)     33          tfr     D,Y                 ; Copy address to Y
                      (      monitor.asm):01288                     ; Get first byte
ABE4 114F             (      monitor.asm):01289 (2)     35          clre                        ; Set number of bytes to zero
ABE6 BDABBD           (      monitor.asm):01290 (7)     42          jsr     SkipSpaces          ; Skipe leading white spaces
ABE9 A684             (      monitor.asm):01291 (4+0)   46          lda     ,X                  ; Load character
ABEB 271B             (      monitor.asm):01292 (3)     49          beq     WriteNoParameter    ; If it's the end of the string, then missing parameter
ABED BDA1F9           (      monitor.asm):01293 (7)     56          jsr     GetStrByte          ; Get address from the input buffer
ABF0 241E             (      monitor.asm):01294 (3)     59          bcc     WriteByteError      ; Error in byte
ABF2 A7A0             (      monitor.asm):01295 (4+1)   64          sta     ,Y+                 ; Store byte at address
ABF4 114C             (      monitor.asm):01296 (2)     66          ince                        ; Set byte count to 1
                      (      monitor.asm):01297                     ; Get remaining bytes if any
ABF6                  (      monitor.asm):01298                 WriteByteLoop:
ABF6 BDABBD           (      monitor.asm):01299 (7)     73          jsr     SkipSpaces          ; Skipe leading white spaces
ABF9 A684             (      monitor.asm):01300 (4+0)   77          lda     ,X                  ; Load character
ABFB 2717             (      monitor.asm):01301 (3)     80          beq     WriteConfirm        ; Read back and print bytes to confirm proper write
ABFD BDA1F9           (      monitor.asm):01302 (7)     87          jsr     GetStrByte          ; Get address from the input buffer
AC00 240E             (      monitor.asm):01303 (3)     90          bcc     WriteByteError      ; Error in byte
AC02 A7A0             (      monitor.asm):01304 (4+1)   95          sta     ,Y+                 ; Store byte at address
AC04 114C             (      monitor.asm):01305 (2)     97          ince                        ; Increment byte counter
AC06 20EE             (      monitor.asm):01306 (3)     100         bra     WriteByteLoop
AC08                  (      monitor.asm):01307                 WriteNoParameter:
AC08 BDA4F0           (      monitor.asm):01308 (7)     107         jsr     ErrNoParameter      ; Display no parameter error
AC0B 39               (      monitor.asm):01309 (4)     111         rts
AC0C                  (      monitor.asm):01310                 WriteAddressError:
AC0C BDA4BC           (      monitor.asm):01311 (7)     118         jsr     ErrInvalidAddress   ; Display address error
AC0F 39               (      monitor.asm):01312 (4)     122         rts
AC10                  (      monitor.asm):01313                 WriteByteError:
AC10 BDA4C9           (      monitor.asm):01314 (7)     129         jsr     ErrInvalidByte      ; Display address error
AC13 39               (      monitor.asm):01315 (4)     133         rts
AC14                  (      monitor.asm):01316                 WriteConfirm:   
AC14 FCECC5           (      monitor.asm):01317 (5)     138         ldd     CurrAddress         ; Load base address
AC17 1F02             (      monitor.asm):01318 (4)     142         tfr     D,Y                 ; Copy address to Y
AC19 BDA44A           (      monitor.asm):01319 (7)     149         jsr     OutWord             ; Print base address
AC1C 863A             (      monitor.asm):01320 (2)     151         lda     #':'                ; Separate address and byte with colon
AC1E BDA1C2           (      monitor.asm):01321 (7)     158         jsr     OutChar             ; Print separator
AC21                  (      monitor.asm):01322                 WriteConfirmLoop:
AC21 A6A0             (      monitor.asm):01323 (4+1)   163         lda     ,Y+                 ; Read byte
AC23 BDA3D7           (      monitor.asm):01324 (7)     170         jsr     OutByte             ; Print byte
AC26 114A             (      monitor.asm):01325 (2)     172         dece                        ; Decrement byte counter
AC28 2707             (      monitor.asm):01326 (3)     175         beq     WriteEnd            ; Is it the end? Then exit
AC2A 862C             (      monitor.asm):01327 (2)     177         lda     #','                ; Separate bytes with comma
AC2C BDA1C2           (      monitor.asm):01328 (7)     184         jsr     OutChar             ; Print comma
AC2F 20F0             (      monitor.asm):01329 (3)     187         bra     WriteConfirmLoop    ; Check for next byte
AC31                  (      monitor.asm):01330                 WriteEnd:
AC31 10BFECC5         (      monitor.asm):01331 (6)     193         sty     CurrAddress         ; Save state of current address
AC35 BDA3F9           (      monitor.asm):01332 (7)     200         jsr     OutCRLF             ; Change line
AC38 39               (      monitor.asm):01333 (4)     204         rts
                      (      monitor.asm):01334                     
                      (         main.asm):00194                     INCLUDE "psg.asm"           ; Programmable Sound Generator subroutines
                      (          psg.asm):00001                 ; PSG declarations
     FF11             (          psg.asm):00002                 Snd1Addr        EQU $FF11       ; Writing to this address will latch the address of the register
     FF10             (          psg.asm):00003                 Snd1Write       EQU $FF10       ; Writing to this address will write to the addressed register
     FF11             (          psg.asm):00004                 Snd1Read        EQU $FF11       ; Reading to this address will read the addressed register
     FF13             (          psg.asm):00005                 Snd2Addr        EQU $FF13       ; Writing to this address will latch the address of the register
     FF12             (          psg.asm):00006                 Snd2Write       EQU $FF12       ; Writing to this address will write to the addressed register
     FF13             (          psg.asm):00007                 Snd2Read        EQU $FF13       ; Reading to this address will read the addressed register
     FF15             (          psg.asm):00008                 Snd3Addr        EQU $FF15       ; Writing to this address will latch the address of the register
     FF14             (          psg.asm):00009                 Snd3Write       EQU $FF14       ; Writing to this address will write to the addressed register
     FF15             (          psg.asm):00010                 Snd3Read        EQU $FF15       ; Reading to this address will read the addressed register
     FF17             (          psg.asm):00011                 Snd4Addr        EQU $FF17       ; Writing to this address will latch the address of the register
     FF16             (          psg.asm):00012                 Snd4Write       EQU $FF16       ; Writing to this address will write to the addressed register
     FF17             (          psg.asm):00013                 Snd4Read        EQU $FF17       ; Reading to this address will read the addressed register
                      (          psg.asm):00014                 
                      (          psg.asm):00015                 ; PSG register array
     0000             (          psg.asm):00016                 ToneA_Fine      EQU 0       ; 8-bit fine tune A
     0001             (          psg.asm):00017                 ToneA_Coarse    EQU 1       ; 4-bit coarse tune A
     0002             (          psg.asm):00018                 ToneB_Fine      EQU 2       ; 8-bit fine tune B
     0003             (          psg.asm):00019                 ToneB_Coarse    EQU 3       ; 4-bit coarse tune B
     0004             (          psg.asm):00020                 ToneC_Fine      EQU 4       ; 8-bit fine tune C
     0005             (          psg.asm):00021                 ToneC_Coarse    EQU 5       ; 4-bit coarse tune C
     0006             (          psg.asm):00022                 Noise           EQU 6       ; 5-bit control
     0007             (          psg.asm):00023                 Enable          EQU 7       ; IOB, IOA, /NoiseC, /NoiseB, /NoiseC, /ToneC, /ToneB, /ToneA
     0008             (          psg.asm):00024                 AmplA           EQU 8       ; M, L3, L2, L1, L0
     0009             (          psg.asm):00025                 AmplB           EQU 9       ; M, L3, L2, L1, L0
     000A             (          psg.asm):00026                 AmplC           EQU 10      ; M, L3, L2, L1, L0
     000B             (          psg.asm):00027                 EnvFine         EQU 11      ; 8-bit fine tune enveloppe
     000C             (          psg.asm):00028                 EnvCoarse       EQU 12      ; 8-bit coarse tune enveloppe
     000D             (          psg.asm):00029                 EnvShapeCycle   EQU 13      ; CONT, ATT, ALT, HOLD
     000E             (          psg.asm):00030                 IOportA         EQU 14      ; 8-bit parallel I/O port A
     000F             (          psg.asm):00031                 IOportB         EQU 15      ; 8-bit parallel I/O port B
                      (          psg.asm):00032                 
                      (          psg.asm):00033                 ; Voice NUMBERS (LSB nibble is dropped at import)
     0000             (          psg.asm):00034                 EOT         EQU $0000
     1000             (          psg.asm):00035                 Voice1      EQU $1000
     2000             (          psg.asm):00036                 Voice2      EQU $2000
     3000             (          psg.asm):00037                 Voice3      EQU $3000
     4000             (          psg.asm):00038                 Voice4      EQU $4000
     5000             (          psg.asm):00039                 Voice5      EQU $5000
     6000             (          psg.asm):00040                 Voice6      EQU $6000
     7000             (          psg.asm):00041                 Voice7      EQU $7000
     8000             (          psg.asm):00042                 Voice8      EQU $8000
     9000             (          psg.asm):00043                 Voice9      EQU $9000
     A000             (          psg.asm):00044                 Voice10     EQU $A000
     B000             (          psg.asm):00045                 Voice11     EQU $B000
     C000             (          psg.asm):00046                 Voice12     EQU $C000
     D000             (          psg.asm):00047                 Noise1      EQU $D000
     E000             (          psg.asm):00048                 Noise2      EQU $E000
     F000             (          psg.asm):00049                 Noise3      EQU $F000
                      (          psg.asm):00050                 
                      (          psg.asm):00051                 ; Tempered Chromatic Scale (f clock EQU 1.78977MHz)
                      (          psg.asm):00052                 ; 12-bit (converted from octal chart to hex)
                      (          psg.asm):00053                 ; MSB EQU Coarse, LSB EQU Fine
     0FFF             (          psg.asm):00054                 XX          EQU $0FFF       ; Don't care
     0D5D             (          psg.asm):00055                 C1          EQU $0D5D
     0C9C             (          psg.asm):00056                 Cs1         EQU $0C9C
     0C9C             (          psg.asm):00057                 Db1         EQU $0C9C
     0BE7             (          psg.asm):00058                 D1          EQU $0BE7
     0B3C             (          psg.asm):00059                 Ds1         EQU $0B3C
     0B3C             (          psg.asm):00060                 Eb1         EQU $0B3C
     0A9B             (          psg.asm):00061                 E1          EQU $0A9B
     0A02             (          psg.asm):00062                 F1          EQU $0A02
     0973             (          psg.asm):00063                 Fs1         EQU $0973
     0973             (          psg.asm):00064                 Gb1         EQU $0973
     08EB             (          psg.asm):00065                 G1          EQU $08EB
     086B             (          psg.asm):00066                 Gs1         EQU $086B
     086B             (          psg.asm):00067                 Ab1         EQU $086B
     07F2             (          psg.asm):00068                 A1          EQU $07F2
     0780             (          psg.asm):00069                 As1         EQU $0780
     0780             (          psg.asm):00070                 Bb1         EQU $0780
     0714             (          psg.asm):00071                 B1          EQU $0714
     06AE             (          psg.asm):00072                 C2          EQU $06AE
     064E             (          psg.asm):00073                 Cs2         EQU $064E
     064E             (          psg.asm):00074                 Db2         EQU $064E
     05F4             (          psg.asm):00075                 D2          EQU $05F4
     059E             (          psg.asm):00076                 Ds2         EQU $059E
     059E             (          psg.asm):00077                 Eb2         EQU $059E
     054D             (          psg.asm):00078                 E2          EQU $054D
     0501             (          psg.asm):00079                 F2          EQU $0501
     04B9             (          psg.asm):00080                 Fs2         EQU $04B9
     04B9             (          psg.asm):00081                 Gb2         EQU $04B9
     0475             (          psg.asm):00082                 G2          EQU $0475
     0435             (          psg.asm):00083                 Gs2         EQU $0435
     0435             (          psg.asm):00084                 Ab2         EQU $0435
     03F9             (          psg.asm):00085                 A2          EQU $03F9
     03C0             (          psg.asm):00086                 As2         EQU $03C0
     03C0             (          psg.asm):00087                 Bb2         EQU $03C0
     038A             (          psg.asm):00088                 B2          EQU $038A
     0357             (          psg.asm):00089                 C3          EQU $0357
     0327             (          psg.asm):00090                 Cs3         EQU $0327
     0327             (          psg.asm):00091                 Db3         EQU $0327
     02FA             (          psg.asm):00092                 D3          EQU $02FA
     02CF             (          psg.asm):00093                 Ds3         EQU $02CF
     02CF             (          psg.asm):00094                 Eb3         EQU $02CF
     02A7             (          psg.asm):00095                 E3          EQU $02A7
     0281             (          psg.asm):00096                 F3          EQU $0281
     025D             (          psg.asm):00097                 Fs3         EQU $025D
     025D             (          psg.asm):00098                 Gb3         EQU $025D
     023B             (          psg.asm):00099                 G3          EQU $023B
     021B             (          psg.asm):00100                 Gs3         EQU $021B
     021B             (          psg.asm):00101                 Ab3         EQU $021B
     01FC             (          psg.asm):00102                 A3          EQU $01FC
     01E0             (          psg.asm):00103                 As3         EQU $01E0
     01E0             (          psg.asm):00104                 Bb3         EQU $01E0
     01C5             (          psg.asm):00105                 B3          EQU $01C5
     01AC             (          psg.asm):00106                 C4          EQU $01AC
     0194             (          psg.asm):00107                 Cs4         EQU $0194
     0194             (          psg.asm):00108                 Db4         EQU $0194
     017D             (          psg.asm):00109                 D4          EQU $017D
     0168             (          psg.asm):00110                 Ds4         EQU $0168
     0168             (          psg.asm):00111                 Eb4         EQU $0168
     0153             (          psg.asm):00112                 E4          EQU $0153
     0140             (          psg.asm):00113                 F4          EQU $0140
     012E             (          psg.asm):00114                 Fs4         EQU $012E
     012E             (          psg.asm):00115                 Gb4         EQU $012E
     011D             (          psg.asm):00116                 G4          EQU $011D
     010D             (          psg.asm):00117                 Gs4         EQU $010D
     010D             (          psg.asm):00118                 Ab4         EQU $010D
     00FE             (          psg.asm):00119                 A4          EQU $00FE
     00F0             (          psg.asm):00120                 As4         EQU $00F0
     00F0             (          psg.asm):00121                 Bb4         EQU $00F0
     00E2             (          psg.asm):00122                 B4          EQU $00E2
     00D6             (          psg.asm):00123                 C5          EQU $00D6
     00CA             (          psg.asm):00124                 Cs5         EQU $00CA
     00CA             (          psg.asm):00125                 Db5         EQU $00CA
     00BE             (          psg.asm):00126                 D5          EQU $00BE
     00B4             (          psg.asm):00127                 Ds5         EQU $00B4
     00B4             (          psg.asm):00128                 Eb5         EQU $00B4
     00AA             (          psg.asm):00129                 E5          EQU $00AA
     00A0             (          psg.asm):00130                 F5          EQU $00A0
     0097             (          psg.asm):00131                 Fs5         EQU $0097
     0097             (          psg.asm):00132                 Gb5         EQU $0097
     008F             (          psg.asm):00133                 G5          EQU $008F
     0087             (          psg.asm):00134                 Gs5         EQU $0087
     0087             (          psg.asm):00135                 Ab5         EQU $0087
     007F             (          psg.asm):00136                 A5          EQU $007F
     0078             (          psg.asm):00137                 As5         EQU $0078
     0078             (          psg.asm):00138                 Bb5         EQU $0078
     0071             (          psg.asm):00139                 B5          EQU $0071
     006B             (          psg.asm):00140                 C6          EQU $006B
     0065             (          psg.asm):00141                 Cs6         EQU $0065
     0065             (          psg.asm):00142                 Db6         EQU $0065
     005F             (          psg.asm):00143                 D6          EQU $005F
     005A             (          psg.asm):00144                 Ds6         EQU $005A
     005A             (          psg.asm):00145                 Eb6         EQU $005A
     0055             (          psg.asm):00146                 E6          EQU $0055
     0052             (          psg.asm):00147                 F6          EQU $0052
     004C             (          psg.asm):00148                 Fs6         EQU $004C
     004C             (          psg.asm):00149                 Gb6         EQU $004C
     0047             (          psg.asm):00150                 G6          EQU $0047
     0043             (          psg.asm):00151                 Gs6         EQU $0043
     0043             (          psg.asm):00152                 Ab6         EQU $0043
     0040             (          psg.asm):00153                 A6          EQU $0040
     003C             (          psg.asm):00154                 As6         EQU $003C
     003C             (          psg.asm):00155                 Bb6         EQU $003C
     0039             (          psg.asm):00156                 B6          EQU $0039
     0035             (          psg.asm):00157                 C7          EQU $0035
     0032             (          psg.asm):00158                 Cs7         EQU $0032
     0032             (          psg.asm):00159                 Db7         EQU $0032
     0030             (          psg.asm):00160                 D7          EQU $0030
     002D             (          psg.asm):00161                 Ds7         EQU $002D
     002D             (          psg.asm):00162                 Eb7         EQU $002D
     002A             (          psg.asm):00163                 E7          EQU $002A
     0028             (          psg.asm):00164                 F7          EQU $0028
     0026             (          psg.asm):00165                 Fs7         EQU $0026
     0026             (          psg.asm):00166                 Gb7         EQU $0026
     0024             (          psg.asm):00167                 G7          EQU $0024
     0022             (          psg.asm):00168                 Gs7         EQU $0022
     0022             (          psg.asm):00169                 Ab7         EQU $0022
     0020             (          psg.asm):00170                 A7          EQU $0020
     001E             (          psg.asm):00171                 As7         EQU $001E
     001E             (          psg.asm):00172                 Bb7         EQU $001E
     001C             (          psg.asm):00173                 B7          EQU $001C
     001B             (          psg.asm):00174                 C8          EQU $001B
     0019             (          psg.asm):00175                 Cs8         EQU $0019
     0019             (          psg.asm):00176                 Db8         EQU $0019
     0018             (          psg.asm):00177                 D8          EQU $0018
     0016             (          psg.asm):00178                 Ds8         EQU $0016
     0016             (          psg.asm):00179                 Eb8         EQU $0016
     0015             (          psg.asm):00180                 E8          EQU $0015
     0014             (          psg.asm):00181                 F8          EQU $0014
     0013             (          psg.asm):00182                 Fs8         EQU $0013
     0013             (          psg.asm):00183                 Gb8         EQU $0013
     0012             (          psg.asm):00184                 G8          EQU $0012
     0011             (          psg.asm):00185                 Gs8         EQU $0011
     0011             (          psg.asm):00186                 Ab8         EQU $0011
     0010             (          psg.asm):00187                 A8          EQU $0010
     000F             (          psg.asm):00188                 As8         EQU $000F
     000F             (          psg.asm):00189                 Bb8         EQU $000F
     000E             (          psg.asm):00190                 B8          EQU $000E
                      (          psg.asm):00191                 
                      (          psg.asm):00192                 ; COMMON AMPLITUDE LEVELS
     0000             (          psg.asm):00193                 Off         EQU $0000
     0300             (          psg.asm):00194                 Low         EQU $0300
     0700             (          psg.asm):00195                 Mid         EQU $0700
     0B00             (          psg.asm):00196                 High        EQU $0B00
     0F00             (          psg.asm):00197                 Full        EQU $0F00
                      (          psg.asm):00198                 
                      (          psg.asm):00199                 ; NOTE AND REST DURATION (LSB byte is dropped at import)
     0080             (          psg.asm):00200                 Whole       EQU $0080
     0040             (          psg.asm):00201                 Half        EQU $0040
     0020             (          psg.asm):00202                 Quarter     EQU $0020
     0018             (          psg.asm):00203                 Sixth       EQU $0018
     0010             (          psg.asm):00204                 Eighth      EQU $0010
     000C             (          psg.asm):00205                 Twelth      EQU $000C
     0008             (          psg.asm):00206                 Sixteenth   EQU $0008
     0004             (          psg.asm):00207                 Thirtieth   EQU $0004
     0002             (          psg.asm):00208                 Sixtieth    EQU $0002
     0002             (          psg.asm):00209                 Pause       EQU $0002
     0000             (          psg.asm):00210                 None        EQU $0000
                      (          psg.asm):00211                 
                      (          psg.asm):00212                 
                      (          psg.asm):00213                 ;  ____                  ___           _   _   
                      (          psg.asm):00214                 ; |  _ \   ___    __ _  |_ _|  _ __   (_) | |_ 
                      (          psg.asm):00215                 ; | |_) | / __|  / _` |  | |  | '_ \  | | | __|
                      (          psg.asm):00216                 ; |  __/  \__ \ | (_| |  | |  | | | | | | | |_ 
                      (          psg.asm):00217                 ; |_|     |___/  \__, | |___| |_| |_| |_|  \__|
                      (          psg.asm):00218                 ;                |___/                         
                      (          psg.asm):00219                 ;
                      (          psg.asm):00220                 ; Initialize all the PSGs
                      (          psg.asm):00221                 ; =======================
                      (          psg.asm):00222                 
AC39                  (          psg.asm):00223                 PsgInit:
                      (          psg.asm):00224                 
                      (          psg.asm):00225                     ; Initialize registers
AC39 8607             (          psg.asm):00226 (2)     206         lda #Enable         ; Mixer Control - I/O Enable (R7 octal)
AC3B B7FF11           (          psg.asm):00227 (4)     210         sta Snd1Addr
AC3E B7FF13           (          psg.asm):00228 (4)     214         sta Snd2Addr
AC41 B7FF15           (          psg.asm):00229 (4)     218         sta Snd3Addr
AC44 B7FF17           (          psg.asm):00230 (4)     222         sta Snd4Addr
AC47 8638             (          psg.asm):00231 (2)     224         lda #$38            ; Disable Noise and Enable tone on all channels
AC49 B7FF10           (          psg.asm):00232 (4)     228         sta Snd1Write
AC4C B7FF12           (          psg.asm):00233 (4)     232         sta Snd2Write
AC4F B7FF14           (          psg.asm):00234 (4)     236         sta Snd3Write
AC52 B7FF16           (          psg.asm):00235 (4)     240         sta Snd4Write
                      (          psg.asm):00236                     ;Initialize amplitude to 0
AC55 8608             (          psg.asm):00237 (2)     242         lda #AmplA          ; Amplitude Control (R10 octal)
AC57 B7FF11           (          psg.asm):00238 (4)     246         sta Snd1Addr
AC5A B7FF13           (          psg.asm):00239 (4)     250         sta Snd2Addr
AC5D B7FF15           (          psg.asm):00240 (4)     254         sta Snd3Addr
AC60 B7FF17           (          psg.asm):00241 (4)     258         sta Snd4Addr
AC63 8600             (          psg.asm):00242 (2)     260         lda #Off            ; xxx1000 - Amplitude "mode"
AC65 B7FF10           (          psg.asm):00243 (4)     264         sta Snd1Write
AC68 B7FF12           (          psg.asm):00244 (4)     268         sta Snd2Write
AC6B B7FF14           (          psg.asm):00245 (4)     272         sta Snd3Write
AC6E B7FF16           (          psg.asm):00246 (4)     276         sta Snd4Write
AC71 8609             (          psg.asm):00247 (2)     278         lda #AmplB          ; Amplitude Control (R11 octal)
AC73 B7FF11           (          psg.asm):00248 (4)     282         sta Snd1Addr
AC76 B7FF13           (          psg.asm):00249 (4)     286         sta Snd2Addr
AC79 B7FF15           (          psg.asm):00250 (4)     290         sta Snd3Addr
AC7C B7FF17           (          psg.asm):00251 (4)     294         sta Snd4Addr
AC7F 8600             (          psg.asm):00252 (2)     296         lda #Off            ; xxx1000 - Amplitude "mode"
AC81 B7FF10           (          psg.asm):00253 (4)     300         sta Snd1Write
AC84 B7FF12           (          psg.asm):00254 (4)     304         sta Snd2Write
AC87 B7FF14           (          psg.asm):00255 (4)     308         sta Snd3Write
AC8A B7FF16           (          psg.asm):00256 (4)     312         sta Snd4Write
AC8D 860A             (          psg.asm):00257 (2)     314         lda #AmplC          ; Amplitude Control (R12 octal)
AC8F B7FF11           (          psg.asm):00258 (4)     318         sta Snd1Addr
AC92 B7FF13           (          psg.asm):00259 (4)     322         sta Snd2Addr
AC95 B7FF15           (          psg.asm):00260 (4)     326         sta Snd3Addr
AC98 B7FF17           (          psg.asm):00261 (4)     330         sta Snd4Addr
AC9B 8600             (          psg.asm):00262 (2)     332         lda #Off            ; xxx1000 - Amplitude "mode"
AC9D B7FF10           (          psg.asm):00263 (4)     336         sta Snd1Write
ACA0 B7FF12           (          psg.asm):00264 (4)     340         sta Snd2Write
ACA3 B7FF14           (          psg.asm):00265 (4)     344         sta Snd3Write
ACA6 B7FF16           (          psg.asm):00266 (4)     348         sta Snd4Write
ACA9 39               (          psg.asm):00267 (4)     352         rts
                      (          psg.asm):00268                 
                      (          psg.asm):00269                 ;  ____    _                 
                      (          psg.asm):00270                 ; |  _ \  | |   __ _   _   _ 
                      (          psg.asm):00271                 ; | |_) | | |  / _` | | | | |
                      (          psg.asm):00272                 ; |  __/  | | | (_| | | |_| |
                      (          psg.asm):00273                 ; |_|     |_|  \__,_|  \__, |
                      (          psg.asm):00274                 ;                      |___/ 
                      (          psg.asm):00275                 ;
                      (          psg.asm):00276                 ; Play song command
                      (          psg.asm):00277                 ; =================
                      (          psg.asm):00278                 
ACAA                  (          psg.asm):00279                 PlayCmd:
ACAA BDABBD           (          psg.asm):00280 (7)     359         jsr     SkipSpaces          ; Remove leading white spaces
ACAD A684             (          psg.asm):00281 (4+0)   363         lda     ,X                  ; Read a character from string
ACAF 270E             (          psg.asm):00282 (3)     366         beq     PlayCmdDefault      ; If empty, play boot music
ACB1 8131             (          psg.asm):00283 (2)     368         cmpa    #'1'                ; Is it the 1st song (Mario)
ACB3 2603             (          psg.asm):00284 (3)     371         bne     PlayCmd2            ; No, then check if its the second song?
ACB5 7EAEF7           (          psg.asm):00285 (3)     374         jmp     MarioSong           ; Play Mario song
ACB8                  (          psg.asm):00286                 PlayCmd2:
ACB8 8132             (          psg.asm):00287 (2)     376         cmpa    #'2'                ; Is it the 2nd song (Monkey Island)
ACBA 2606             (          psg.asm):00288 (3)     379         bne     PlayCmdInvalid      ; No, then say it's invalid
ACBC 7EAF51           (          psg.asm):00289 (3)     382         jmp     MonkeyIslandSong    ; Play Monkey Island song
ACBF                  (          psg.asm):00290                 PlayCmdDefault:
ACBF 7EAF5D           (          psg.asm):00291 (3)     385         jmp     BootTune
ACC2                  (          psg.asm):00292                 PlayCmdInvalid:
ACC2 BDA4E3           (          psg.asm):00293 (7)     392         jsr     ErrInvalidParameter
ACC5 39               (          psg.asm):00294 (4)     396         rts
                      (          psg.asm):00295                 
                      (          psg.asm):00296                 ;  ____    _                   _   _           _          
                      (          psg.asm):00297                 ; |  _ \  | |   __ _   _   _  | \ | |   ___   | |_    ___ 
                      (          psg.asm):00298                 ; | |_) | | |  / _` | | | | | |  \| |  / _ \  | __|  / _ \
                      (          psg.asm):00299                 ; |  __/  | | | (_| | | |_| | | |\  | | (_) | | |_  |  __/
                      (          psg.asm):00300                 ; |_|     |_|  \__,_|  \__, | |_| \_|  \___/   \__|  \___|
                      (          psg.asm):00301                 ;                      |___/
                      (          psg.asm):00302                 ;
                      (          psg.asm):00303                 ; Play a note on a specific channel
                      (          psg.asm):00304                 ; =================================
                      (          psg.asm):00305                 
ACC6                  (          psg.asm):00306                 PlayNote:
ACC6 3410             (          psg.asm):00307 (4+2)   402         pshs    X
ACC8 B6EDE1           (          psg.asm):00308 (4)     406         lda     SndVoice            ; Load Voice number from current record
ACCB                  (          psg.asm):00309                 PlayNoteVoice1:
ACCB 8110             (          psg.asm):00310 (2)     408         cmpa    #$10                ; Is it Voice 1?
ACCD 2624             (          psg.asm):00311 (3)     411         bne     PlayNoteVoice2      ; No, check if it's Voice 2
                      (          psg.asm):00312                     ; Coarse
ACCF 8601             (          psg.asm):00313 (2)     413         lda     #ToneA_Coarse       ; Tone Generator Control - Coarse
ACD1 B7FF11           (          psg.asm):00314 (4)     417         sta     Snd1Addr            ; Store register in PSG
ACD4 B6EDE2           (          psg.asm):00315 (4)     421         lda     SndNoteCoarse       ; Read coarse value
ACD7 B7FF10           (          psg.asm):00316 (4)     425         sta     Snd1Write           ; Store coare tone value
                      (          psg.asm):00317                     ; Fine
ACDA 8600             (          psg.asm):00318 (2)     427         lda     #ToneA_Fine         ; Tone Generator Control - Fine
ACDC B7FF11           (          psg.asm):00319 (4)     431         sta     Snd1Addr            ; Store register in PSG
ACDF B6EDE3           (          psg.asm):00320 (4)     435         lda     SndNoteFine         ; Read fine value
ACE2 B7FF10           (          psg.asm):00321 (4)     439         sta     Snd1Write           ; Store fine tone value
                      (          psg.asm):00322                     ; Amplitude
ACE5 8608             (          psg.asm):00323 (2)     441         lda     #AmplA              ; Amplitude control register
ACE7 B7FF11           (          psg.asm):00324 (4)     445         sta     Snd1Addr            ; Store register in PSG
ACEA B6EDE4           (          psg.asm):00325 (4)     449         lda     SndVolume           ; Read volume value
ACED B7FF10           (          psg.asm):00326 (4)     453         sta     Snd1Write           ; Store volume value
                      (          psg.asm):00327                     ; Duration
ACF0 7EAEC2           (          psg.asm):00328 (3)     456         jmp     PlayNoteDuration    ; Interpret duration
ACF3                  (          psg.asm):00329                 PlayNoteVoice2:
ACF3 8120             (          psg.asm):00330 (2)     458         cmpa    #$20                ; Is it Voice 2?
ACF5 2624             (          psg.asm):00331 (3)     461         bne     PlayNoteVoice3      ; No, check if it's Voice 3
                      (          psg.asm):00332                     ; Coarse
ACF7 8603             (          psg.asm):00333 (2)     463         lda     #ToneB_Coarse       ; Tone Generator Control - Coarse
ACF9 B7FF11           (          psg.asm):00334 (4)     467         sta     Snd1Addr            ; Store register in PSG
ACFC B6EDE2           (          psg.asm):00335 (4)     471         lda     SndNoteCoarse       ; Read coarse value
ACFF B7FF10           (          psg.asm):00336 (4)     475         sta     Snd1Write           ; Store coare tone value
                      (          psg.asm):00337                     ; Fine
AD02 8602             (          psg.asm):00338 (2)     477         lda     #ToneB_Fine         ; Tone Generator Control - Fine
AD04 B7FF11           (          psg.asm):00339 (4)     481         sta     Snd1Addr            ; Store register in PSG
AD07 B6EDE3           (          psg.asm):00340 (4)     485         lda     SndNoteFine         ; Read fine value
AD0A B7FF10           (          psg.asm):00341 (4)     489         sta     Snd1Write           ; Store fine tone value
                      (          psg.asm):00342                     ; Amplitude
AD0D 8609             (          psg.asm):00343 (2)     491         lda     #AmplB              ; Amplitude control register
AD0F B7FF11           (          psg.asm):00344 (4)     495         sta     Snd1Addr            ; Store register in PSG
AD12 B6EDE4           (          psg.asm):00345 (4)     499         lda     SndVolume           ; Read volume value
AD15 B7FF10           (          psg.asm):00346 (4)     503         sta     Snd1Write           ; Store volume value
                      (          psg.asm):00347                     ; Duration
AD18 7EAEC2           (          psg.asm):00348 (3)     506         jmp     PlayNoteDuration    ; Interpret duration
AD1B                  (          psg.asm):00349                 PlayNoteVoice3:
AD1B 8130             (          psg.asm):00350 (2)     508         cmpa    #$30                ; Is it Voice 3?
AD1D 2624             (          psg.asm):00351 (3)     511         bne     PlayNoteVoice4      ; No, check if it's Voice 4
                      (          psg.asm):00352                     ; Coarse
AD1F 8605             (          psg.asm):00353 (2)     513         lda     #ToneC_Coarse       ; Tone Generator Control - Coarse
AD21 B7FF11           (          psg.asm):00354 (4)     517         sta     Snd1Addr            ; Store register in PSG
AD24 B6EDE2           (          psg.asm):00355 (4)     521         lda     SndNoteCoarse       ; Read coarse value
AD27 B7FF10           (          psg.asm):00356 (4)     525         sta     Snd1Write           ; Store coare tone value
                      (          psg.asm):00357                     ; Fine
AD2A 8604             (          psg.asm):00358 (2)     527         lda     #ToneC_Fine         ; Tone Generator Control - Fine
AD2C B7FF11           (          psg.asm):00359 (4)     531         sta     Snd1Addr            ; Store register in PSG
AD2F B6EDE3           (          psg.asm):00360 (4)     535         lda     SndNoteFine         ; Read fine value
AD32 B7FF10           (          psg.asm):00361 (4)     539         sta     Snd1Write           ; Store fine tone value
                      (          psg.asm):00362                     ; Amplitude
AD35 860A             (          psg.asm):00363 (2)     541         lda     #AmplC              ; Amplitude control register
AD37 B7FF11           (          psg.asm):00364 (4)     545         sta     Snd1Addr            ; Store register in PSG
AD3A B6EDE4           (          psg.asm):00365 (4)     549         lda     SndVolume           ; Read volume value
AD3D B7FF10           (          psg.asm):00366 (4)     553         sta     Snd1Write           ; Store volume value
                      (          psg.asm):00367                     ; Duration
AD40 7EAEC2           (          psg.asm):00368 (3)     556         jmp     PlayNoteDuration    ; Interpret duration
AD43                  (          psg.asm):00369                 PlayNoteVoice4:
AD43 8140             (          psg.asm):00370 (2)     558         cmpa    #$40                ; Is it Voice 4?
AD45 2624             (          psg.asm):00371 (3)     561         bne     PlayNoteVoice5      ; No, check if it's Voice 5
                      (          psg.asm):00372                     ; Coarse
AD47 8601             (          psg.asm):00373 (2)     563         lda     #ToneA_Coarse       ; Tone Generator Control - Coarse
AD49 B7FF13           (          psg.asm):00374 (4)     567         sta     Snd2Addr            ; Store register in PSG
AD4C B6EDE2           (          psg.asm):00375 (4)     571         lda     SndNoteCoarse       ; Read coarse value
AD4F B7FF12           (          psg.asm):00376 (4)     575         sta     Snd2Write           ; Store coare tone value
                      (          psg.asm):00377                     ; Fine
AD52 8600             (          psg.asm):00378 (2)     577         lda     #ToneA_Fine         ; Tone Generator Control - Fine
AD54 B7FF13           (          psg.asm):00379 (4)     581         sta     Snd2Addr            ; Store register in PSG
AD57 B6EDE3           (          psg.asm):00380 (4)     585         lda     SndNoteFine         ; Read fine value
AD5A B7FF12           (          psg.asm):00381 (4)     589         sta     Snd2Write           ; Store fine tone value
                      (          psg.asm):00382                     ; Amplitude
AD5D 8608             (          psg.asm):00383 (2)     591         lda     #AmplA              ; Amplitude control register
AD5F B7FF13           (          psg.asm):00384 (4)     595         sta     Snd2Addr            ; Store register in PSG
AD62 B6EDE4           (          psg.asm):00385 (4)     599         lda     SndVolume           ; Read volume value
AD65 B7FF12           (          psg.asm):00386 (4)     603         sta     Snd2Write           ; Store volume value
                      (          psg.asm):00387                     ; Duration
AD68 7EAEC2           (          psg.asm):00388 (3)     606         jmp     PlayNoteDuration    ; Interpret duration
AD6B                  (          psg.asm):00389                 PlayNoteVoice5:
AD6B 8150             (          psg.asm):00390 (2)     608         cmpa    #$50                ; Is it Voice 5?
AD6D 2624             (          psg.asm):00391 (3)     611         bne     PlayNoteVoice6      ; No, check if it's Voice 6
                      (          psg.asm):00392                     ; Coarse
AD6F 8603             (          psg.asm):00393 (2)     613         lda     #ToneB_Coarse       ; Tone Generator Control - Coarse
AD71 B7FF13           (          psg.asm):00394 (4)     617         sta     Snd2Addr            ; Store register in PSG
AD74 B6EDE2           (          psg.asm):00395 (4)     621         lda     SndNoteCoarse       ; Read coarse value
AD77 B7FF12           (          psg.asm):00396 (4)     625         sta     Snd2Write           ; Store coare tone value
                      (          psg.asm):00397                     ; Fine
AD7A 8602             (          psg.asm):00398 (2)     627         lda     #ToneB_Fine         ; Tone Generator Control - Fine
AD7C B7FF13           (          psg.asm):00399 (4)     631         sta     Snd2Addr            ; Store register in PSG
AD7F B6EDE3           (          psg.asm):00400 (4)     635         lda     SndNoteFine         ; Read fine value
AD82 B7FF12           (          psg.asm):00401 (4)     639         sta     Snd2Write           ; Store fine tone value
                      (          psg.asm):00402                     ; Amplitude
AD85 8609             (          psg.asm):00403 (2)     641         lda     #AmplB              ; Amplitude control register
AD87 B7FF13           (          psg.asm):00404 (4)     645         sta     Snd2Addr            ; Store register in PSG
AD8A B6EDE4           (          psg.asm):00405 (4)     649         lda     SndVolume           ; Read volume value
AD8D B7FF12           (          psg.asm):00406 (4)     653         sta     Snd2Write           ; Store volume value
                      (          psg.asm):00407                     ; Duration
AD90 7EAEC2           (          psg.asm):00408 (3)     656         jmp     PlayNoteDuration    ; Interpret duration
AD93                  (          psg.asm):00409                 PlayNoteVoice6:
AD93 8160             (          psg.asm):00410 (2)     658         cmpa    #$60                ; Is it Voice 6?
AD95 2624             (          psg.asm):00411 (3)     661         bne     PlayNoteVoice7      ; No, check if it's Voice 7
                      (          psg.asm):00412                     ; Coarse
AD97 8605             (          psg.asm):00413 (2)     663         lda     #ToneC_Coarse       ; Tone Generator Control - Coarse
AD99 B7FF13           (          psg.asm):00414 (4)     667         sta     Snd2Addr            ; Store register in PSG
AD9C B6EDE2           (          psg.asm):00415 (4)     671         lda     SndNoteCoarse       ; Read coarse value
AD9F B7FF12           (          psg.asm):00416 (4)     675         sta     Snd2Write           ; Store coare tone value
                      (          psg.asm):00417                     ; Fine
ADA2 8604             (          psg.asm):00418 (2)     677         lda     #ToneC_Fine         ; Tone Generator Control - Fine
ADA4 B7FF13           (          psg.asm):00419 (4)     681         sta     Snd2Addr            ; Store register in PSG
ADA7 B6EDE3           (          psg.asm):00420 (4)     685         lda     SndNoteFine         ; Read fine value
ADAA B7FF12           (          psg.asm):00421 (4)     689         sta     Snd2Write           ; Store fine tone value
                      (          psg.asm):00422                     ; Amplitude
ADAD 860A             (          psg.asm):00423 (2)     691         lda     #AmplC              ; Amplitude control register
ADAF B7FF13           (          psg.asm):00424 (4)     695         sta     Snd2Addr            ; Store register in PSG
ADB2 B6EDE4           (          psg.asm):00425 (4)     699         lda     SndVolume           ; Read volume value
ADB5 B7FF12           (          psg.asm):00426 (4)     703         sta     Snd2Write           ; Store volume value
                      (          psg.asm):00427                     ; Duration
ADB8 7EAEC2           (          psg.asm):00428 (3)     706         jmp     PlayNoteDuration    ; Interpret duration
ADBB                  (          psg.asm):00429                 PlayNoteVoice7:
ADBB 8170             (          psg.asm):00430 (2)     708         cmpa    #$70                ; Is it Voice 7?
ADBD 2624             (          psg.asm):00431 (3)     711         bne     PlayNoteVoice8      ; No, check if it's Voice 8
                      (          psg.asm):00432                     ; Coarse
ADBF 8601             (          psg.asm):00433 (2)     713         lda     #ToneA_Coarse       ; Tone Generator Control - Coarse
ADC1 B7FF15           (          psg.asm):00434 (4)     717         sta     Snd3Addr            ; Store register in PSG
ADC4 B6EDE2           (          psg.asm):00435 (4)     721         lda     SndNoteCoarse       ; Read coarse value
ADC7 B7FF14           (          psg.asm):00436 (4)     725         sta     Snd3Write           ; Store coare tone value
                      (          psg.asm):00437                     ; Fine
ADCA 8600             (          psg.asm):00438 (2)     727         lda     #ToneA_Fine         ; Tone Generator Control - Fine
ADCC B7FF15           (          psg.asm):00439 (4)     731         sta     Snd3Addr            ; Store register in PSG
ADCF B6EDE3           (          psg.asm):00440 (4)     735         lda     SndNoteFine         ; Read fine value
ADD2 B7FF14           (          psg.asm):00441 (4)     739         sta     Snd3Write           ; Store fine tone value
                      (          psg.asm):00442                     ; Amplitude
ADD5 8608             (          psg.asm):00443 (2)     741         lda     #AmplA              ; Amplitude control register
ADD7 B7FF15           (          psg.asm):00444 (4)     745         sta     Snd3Addr            ; Store register in PSG
ADDA B6EDE4           (          psg.asm):00445 (4)     749         lda     SndVolume           ; Read volume value
ADDD B7FF14           (          psg.asm):00446 (4)     753         sta     Snd3Write           ; Store volume value
                      (          psg.asm):00447                     ; Duration
ADE0 7EAEC2           (          psg.asm):00448 (3)     756         jmp     PlayNoteDuration    ; Interpret duration
ADE3                  (          psg.asm):00449                 PlayNoteVoice8:
ADE3 8180             (          psg.asm):00450 (2)     758         cmpa    #$80                ; Is it Voice 8?
ADE5 2624             (          psg.asm):00451 (3)     761         bne     PlayNoteVoice9      ; No, check if it's Voice 9
                      (          psg.asm):00452                     ; Coarse
ADE7 8603             (          psg.asm):00453 (2)     763         lda     #ToneB_Coarse       ; Tone Generator Control - Coarse
ADE9 B7FF15           (          psg.asm):00454 (4)     767         sta     Snd3Addr            ; Store register in PSG
ADEC B6EDE2           (          psg.asm):00455 (4)     771         lda     SndNoteCoarse       ; Read coarse value
ADEF B7FF14           (          psg.asm):00456 (4)     775         sta     Snd3Write           ; Store coare tone value
                      (          psg.asm):00457                     ; Fine
ADF2 8602             (          psg.asm):00458 (2)     777         lda     #ToneB_Fine         ; Tone Generator Control - Fine
ADF4 B7FF15           (          psg.asm):00459 (4)     781         sta     Snd3Addr            ; Store register in PSG
ADF7 B6EDE3           (          psg.asm):00460 (4)     785         lda     SndNoteFine         ; Read fine value
ADFA B7FF14           (          psg.asm):00461 (4)     789         sta     Snd3Write           ; Store fine tone value
                      (          psg.asm):00462                     ; Amplitude
ADFD 8609             (          psg.asm):00463 (2)     791         lda     #AmplB              ; Amplitude control register
ADFF B7FF15           (          psg.asm):00464 (4)     795         sta     Snd3Addr            ; Store register in PSG
AE02 B6EDE4           (          psg.asm):00465 (4)     799         lda     SndVolume           ; Read volume value
AE05 B7FF14           (          psg.asm):00466 (4)     803         sta     Snd3Write           ; Store volume value
                      (          psg.asm):00467                     ; Duration
AE08 7EAEC2           (          psg.asm):00468 (3)     806         jmp     PlayNoteDuration    ; Interpret duration
AE0B                  (          psg.asm):00469                 PlayNoteVoice9:
AE0B 8190             (          psg.asm):00470 (2)     808         cmpa    #$90                ; Is it Voice 9?
AE0D 2624             (          psg.asm):00471 (3)     811         bne     PlayNoteVoice10     ; No, check if it's Voice 10
                      (          psg.asm):00472                     ; Coarse
AE0F 8605             (          psg.asm):00473 (2)     813         lda     #ToneC_Coarse       ; Tone Generator Control - Coarse
AE11 B7FF15           (          psg.asm):00474 (4)     817         sta     Snd3Addr            ; Store register in PSG
AE14 B6EDE2           (          psg.asm):00475 (4)     821         lda     SndNoteCoarse       ; Read coarse value
AE17 B7FF14           (          psg.asm):00476 (4)     825         sta     Snd3Write           ; Store coare tone value
                      (          psg.asm):00477                     ; Fine
AE1A 8604             (          psg.asm):00478 (2)     827         lda     #ToneC_Fine         ; Tone Generator Control - Fine
AE1C B7FF15           (          psg.asm):00479 (4)     831         sta     Snd3Addr            ; Store register in PSG
AE1F B6EDE3           (          psg.asm):00480 (4)     835         lda     SndNoteFine         ; Read fine value
AE22 B7FF14           (          psg.asm):00481 (4)     839         sta     Snd3Write           ; Store fine tone value
                      (          psg.asm):00482                     ; Amplitude
AE25 860A             (          psg.asm):00483 (2)     841         lda     #AmplC              ; Amplitude control register
AE27 B7FF15           (          psg.asm):00484 (4)     845         sta     Snd3Addr            ; Store register in PSG
AE2A B6EDE4           (          psg.asm):00485 (4)     849         lda     SndVolume           ; Read volume value
AE2D B7FF14           (          psg.asm):00486 (4)     853         sta     Snd3Write           ; Store volume value
                      (          psg.asm):00487                     ; Duration
AE30 7EAEC2           (          psg.asm):00488 (3)     856         jmp     PlayNoteDuration    ; Interpret duration
AE33                  (          psg.asm):00489                 PlayNoteVoice10:
AE33 81A0             (          psg.asm):00490 (2)     858         cmpa    #$A0                ; Is it Voice 10?
AE35 2624             (          psg.asm):00491 (3)     861         bne     PlayNoteVoice11     ; No, check if it's Voice 11
                      (          psg.asm):00492                     ; Coarse
AE37 8601             (          psg.asm):00493 (2)     863         lda     #ToneA_Coarse       ; Tone Generator Control - Coarse
AE39 B7FF17           (          psg.asm):00494 (4)     867         sta     Snd4Addr            ; Store register in PSG
AE3C B6EDE2           (          psg.asm):00495 (4)     871         lda     SndNoteCoarse       ; Read coarse value
AE3F B7FF16           (          psg.asm):00496 (4)     875         sta     Snd4Write           ; Store coare tone value
                      (          psg.asm):00497                     ; Fine
AE42 8600             (          psg.asm):00498 (2)     877         lda     #ToneA_Fine         ; Tone Generator Control - Fine
AE44 B7FF17           (          psg.asm):00499 (4)     881         sta     Snd4Addr            ; Store register in PSG
AE47 B6EDE3           (          psg.asm):00500 (4)     885         lda     SndNoteFine         ; Read fine value
AE4A B7FF16           (          psg.asm):00501 (4)     889         sta     Snd4Write           ; Store fine tone value
                      (          psg.asm):00502                     ; Amplitude
AE4D 8608             (          psg.asm):00503 (2)     891         lda     #AmplA              ; Amplitude control register
AE4F B7FF17           (          psg.asm):00504 (4)     895         sta     Snd4Addr            ; Store register in PSG
AE52 B6EDE4           (          psg.asm):00505 (4)     899         lda     SndVolume           ; Read volume value
AE55 B7FF16           (          psg.asm):00506 (4)     903         sta     Snd4Write           ; Store volume value
                      (          psg.asm):00507                     ; Duration
AE58 7EAEC2           (          psg.asm):00508 (3)     906         jmp     PlayNoteDuration    ; Interpret duration
AE5B                  (          psg.asm):00509                 PlayNoteVoice11:
AE5B 81B0             (          psg.asm):00510 (2)     908         cmpa    #$B0                ; Is it Voice 11?
AE5D 2624             (          psg.asm):00511 (3)     911         bne     PlayNoteVoice12     ; No, check if it's Voice 12
                      (          psg.asm):00512                     ; Coarse
AE5F 8603             (          psg.asm):00513 (2)     913         lda     #ToneB_Coarse       ; Tone Generator Control - Coarse
AE61 B7FF17           (          psg.asm):00514 (4)     917         sta     Snd4Addr            ; Store register in PSG
AE64 B6EDE2           (          psg.asm):00515 (4)     921         lda     SndNoteCoarse       ; Read coarse value
AE67 B7FF16           (          psg.asm):00516 (4)     925         sta     Snd4Write           ; Store coare tone value
                      (          psg.asm):00517                     ; Fine
AE6A 8602             (          psg.asm):00518 (2)     927         lda     #ToneB_Fine         ; Tone Generator Control - Fine
AE6C B7FF17           (          psg.asm):00519 (4)     931         sta     Snd4Addr            ; Store register in PSG
AE6F B6EDE3           (          psg.asm):00520 (4)     935         lda     SndNoteFine         ; Read fine value
AE72 B7FF16           (          psg.asm):00521 (4)     939         sta     Snd4Write           ; Store fine tone value
                      (          psg.asm):00522                     ; Amplitude
AE75 8609             (          psg.asm):00523 (2)     941         lda     #AmplB              ; Amplitude control register
AE77 B7FF17           (          psg.asm):00524 (4)     945         sta     Snd4Addr            ; Store register in PSG
AE7A B6EDE4           (          psg.asm):00525 (4)     949         lda     SndVolume           ; Read volume value
AE7D B7FF16           (          psg.asm):00526 (4)     953         sta     Snd4Write           ; Store volume value
                      (          psg.asm):00527                     ; Duration
AE80 7EAEC2           (          psg.asm):00528 (3)     956         jmp     PlayNoteDuration    ; Interpret duration
AE83                  (          psg.asm):00529                 PlayNoteVoice12:
AE83 81C0             (          psg.asm):00530 (2)     958         cmpa    #$C0                ; Is it Voice 12?
AE85 2624             (          psg.asm):00531 (3)     961         bne     PlayNoteNoise1      ; No, check if it's Noise1
                      (          psg.asm):00532                     ; Coarse
AE87 8605             (          psg.asm):00533 (2)     963         lda     #ToneC_Coarse       ; Tone Generator Control - Coarse
AE89 B7FF17           (          psg.asm):00534 (4)     967         sta     Snd4Addr            ; Store register in PSG
AE8C B6EDE2           (          psg.asm):00535 (4)     971         lda     SndNoteCoarse       ; Read coarse value
AE8F B7FF16           (          psg.asm):00536 (4)     975         sta     Snd4Write           ; Store coare tone value
                      (          psg.asm):00537                     ; Fine
AE92 8604             (          psg.asm):00538 (2)     977         lda     #ToneC_Fine         ; Tone Generator Control - Fine
AE94 B7FF17           (          psg.asm):00539 (4)     981         sta     Snd4Addr            ; Store register in PSG
AE97 B6EDE3           (          psg.asm):00540 (4)     985         lda     SndNoteFine         ; Read fine value
AE9A B7FF16           (          psg.asm):00541 (4)     989         sta     Snd4Write           ; Store fine tone value
                      (          psg.asm):00542                     ; Amplitude
AE9D 860A             (          psg.asm):00543 (2)     991         lda     #AmplC              ; Amplitude control register
AE9F B7FF17           (          psg.asm):00544 (4)     995         sta     Snd4Addr            ; Store register in PSG
AEA2 B6EDE4           (          psg.asm):00545 (4)     999         lda     SndVolume           ; Read volume value
AEA5 B7FF16           (          psg.asm):00546 (4)     1003        sta     Snd4Write           ; Store volume value
                      (          psg.asm):00547                     ; Duration
AEA8 7EAEC2           (          psg.asm):00548 (3)     1006        jmp     PlayNoteDuration    ; Interpret duration
AEAB                  (          psg.asm):00549                 PlayNoteNoise1:
AEAB 81D0             (          psg.asm):00550 (2)     1008        cmpa    #$D0                ; Is it Noise 1?
AEAD 2603             (          psg.asm):00551 (3)     1011        bne     PlayNoteNoise2      ; No, check if it's Noise2
AEAF 7EAED0           (          psg.asm):00552 (3)     1014        jmp     PlayNoteEnd         ; ***** Noise not yet implemented
AEB2                  (          psg.asm):00553                 PlayNoteNoise2:
AEB2 81E0             (          psg.asm):00554 (2)     1016        cmpa    #$E0                ; Is it Noise 2?
AEB4 2603             (          psg.asm):00555 (3)     1019        bne     PlayNoteNoise3      ; No, check if it's Noise3
AEB6 7EAED0           (          psg.asm):00556 (3)     1022        jmp     PlayNoteEnd         ; ***** Noise not yet implemented
AEB9                  (          psg.asm):00557                 PlayNoteNoise3:
AEB9 81F0             (          psg.asm):00558 (2)     1024        cmpa    #$F0                ; Is it Noise 3?
AEBB 2603             (          psg.asm):00559 (3)     1027        bne     PlayNoteNoChannel   ; No, end routine
AEBD 7EAED0           (          psg.asm):00560 (3)     1030        jmp     PlayNoteEnd         ; ***** Noise not yet implemented
AEC0                  (          psg.asm):00561                 PlayNoteNoChannel:
AEC0 200E             (          psg.asm):00562 (3)     1033        bra     PlayNoteEnd         ; If no voice numnber has been declared, end playback
AEC2                  (          psg.asm):00563                 PlayNoteDuration:
AEC2 F6EDE0           (          psg.asm):00564 (4)     1037        ldb     SndTempo            ; Set number of milliseconds to wait
AEC5 B6EDE5           (          psg.asm):00565 (4)     1041        lda     SndDuration         ; Load duration value
AEC8 2706             (          psg.asm):00566 (3)     1044        beq     PlayNoteEnd         ; If 0, then end playing note
AECA                  (          psg.asm):00567                 PlayNoteDurLoop:
AECA BDA1D1           (          psg.asm):00568 (7)     1051        jsr     Millisecond         ; Wait Tempo milliseconds
AECD 4A               (          psg.asm):00569 (1)     1052        deca                        ; Decrement timer
AECE 26FA             (          psg.asm):00570 (3)     1055        bne     PlayNoteDurLoop     ; If not ended, continue tempo delay
AED0                  (          psg.asm):00571                 PlayNoteEnd:    
AED0 3590             (          psg.asm):00572 (4+4)   1063        puls    X,PC
                      (          psg.asm):00573                 
                      (          psg.asm):00574                 ;  ____    _                   _____                        
                      (          psg.asm):00575                 ; |  _ \  | |   __ _   _   _  |_   _|  _   _   _ __     ___ 
                      (          psg.asm):00576                 ; | |_) | | |  / _` | | | | |   | |   | | | | | '_ \   / _ \
                      (          psg.asm):00577                 ; |  __/  | | | (_| | | |_| |   | |   | |_| | | | | | |  __/
                      (          psg.asm):00578                 ; |_|     |_|  \__,_|  \__, |   |_|    \__,_| |_| |_|  \___|
                      (          psg.asm):00579                 ;                      |___/                                
                      (          psg.asm):00580                 ;
                      (          psg.asm):00581                 ; Boot tune that resembles Win95 boot music
                      (          psg.asm):00582                 ; =========================================
                      (          psg.asm):00583                 
AED2                  (          psg.asm):00584                 PlayTune:
                      (          psg.asm):00585                     ; Voice number
AED2 A684             (          psg.asm):00586 (4+0)   1067        lda     ,X                  ; Load merged Voice and coarse note data
AED4 84F0             (          psg.asm):00587 (2)     1069        anda    #$F0                ; Filter out note data to only keep voice number
AED6 271E             (          psg.asm):00588 (3)     1072        beq     PlayTuneEnd         ; End playing tune if voice number is 0
AED8 B7EDE1           (          psg.asm):00589 (4)     1076        sta     SndVoice            ; Save voice number
                      (          psg.asm):00590                     ; Coarse note
AEDB A680             (          psg.asm):00591 (4+1)   1081        lda     ,X+                 ; Load coarse portion of note data
AEDD 840F             (          psg.asm):00592 (2)     1083        anda    #$0F                ; Filter out voice number to only keep coarse note data
AEDF B7EDE2           (          psg.asm):00593 (4)     1087        sta     SndNoteCoarse       ; Save coarse portion of note data
                      (          psg.asm):00594                     ; Fine note
AEE2 A680             (          psg.asm):00595 (4+1)   1092        lda     ,X+                 ; Load fine portion of note data
AEE4 B7EDE3           (          psg.asm):00596 (4)     1096        sta     SndNoteFine         ; Sage fine portion of note data
                      (          psg.asm):00597                     ; Volume
AEE7 A680             (          psg.asm):00598 (4+1)   1101        lda     ,X+                 ; Load volume data
AEE9 B7EDE4           (          psg.asm):00599 (4)     1105        sta     SndVolume           ; Save volume data
                      (          psg.asm):00600                     ; Duration
AEEC A680             (          psg.asm):00601 (4+1)   1110        lda     ,X+                 ; Load duration data
AEEE B7EDE5           (          psg.asm):00602 (4)     1114        sta     SndDuration         ; Save duration data
                      (          psg.asm):00603                     ; Play note
AEF1 BDACC6           (          psg.asm):00604 (7)     1121        jsr     PlayNote
AEF4 20DC             (          psg.asm):00605 (3)     1124        bra     PlayTune
AEF6                  (          psg.asm):00606                 PlayTuneEnd:    
AEF6 39               (          psg.asm):00607 (4)     1128        rts
                      (          psg.asm):00608                 
                      (          psg.asm):00609                 ;  __  __                  _           ____                          
                      (          psg.asm):00610                 ; |  \/  |   __ _   _ __  (_)   ___   / ___|    ___    _ __     __ _ 
                      (          psg.asm):00611                 ; | |\/| |  / _` | | '__| | |  / _ \  \___ \   / _ \  | '_ \   / _` |
                      (          psg.asm):00612                 ; | |  | | | (_| | | |    | | | (_) |  ___) | | (_) | | | | | | (_| |
                      (          psg.asm):00613                 ; |_|  |_|  \__,_| |_|    |_|  \___/  |____/   \___/  |_| |_|  \__, |
                      (          psg.asm):00614                 ;                                                              |___/ 
                      (          psg.asm):00615                 ;
                      (          psg.asm):00616                 ; Super Mario Song
                      (          psg.asm):00617                 ; ================
                      (          psg.asm):00618                 
AEF7                  (          psg.asm):00619                 MarioSong:
AEF7 8609             (          psg.asm):00620 (2)     1130        lda     #9                  ; Load tempo
AEF9 B7EDE0           (          psg.asm):00621 (4)     1134        sta     SndTempo
                      (          psg.asm):00622                     ; 1-2
AEFC 8EB77D           (          psg.asm):00623 (3)     1137        ldx     #mario1
AEFF BDAED2           (          psg.asm):00624 (7)     1144        jsr     PlayTune
                      (          psg.asm):00625                     ; 3-6
AF02 8EB829           (          psg.asm):00626 (3)     1147        ldx     #mario2
AF05 BDAED2           (          psg.asm):00627 (7)     1154        jsr     PlayTune
                      (          psg.asm):00628                     ; Repeat
AF08 8EB829           (          psg.asm):00629 (3)     1157        ldx     #mario2
AF0B BDAED2           (          psg.asm):00630 (7)     1164        jsr     PlayTune
                      (          psg.asm):00631                     ; 7-14
AF0E 8EB9C5           (          psg.asm):00632 (3)     1167        ldx     #mario3
AF11 BDAED2           (          psg.asm):00633 (7)     1174        jsr     PlayTune
                      (          psg.asm):00634                     ; Repeat
AF14 8EB9C5           (          psg.asm):00635 (3)     1177        ldx     #mario3 
AF17 BDAED2           (          psg.asm):00636 (7)     1184        jsr     PlayTune
                      (          psg.asm):00637                     ; 15-22
AF1A 8EBCD9           (          psg.asm):00638 (3)     1187        ldx     #mario4 
AF1D BDAED2           (          psg.asm):00639 (7)     1194        jsr     PlayTune
                      (          psg.asm):00640                     ; 23-26 (Same as 3-6)
AF20 8EB829           (          psg.asm):00641 (3)     1197        ldx     #mario2 
AF23 BDAED2           (          psg.asm):00642 (7)     1204        jsr     PlayTune
                      (          psg.asm):00643                     ; Repeat
AF26 8EB829           (          psg.asm):00644 (3)     1207        ldx     #mario2 
AF29 BDAED2           (          psg.asm):00645 (7)     1214        jsr     PlayTune
                      (          psg.asm):00646                     ; 27-34
AF2C 8EBF99           (          psg.asm):00647 (3)     1217        ldx     #mario6 
AF2F BDAED2           (          psg.asm):00648 (7)     1224        jsr     PlayTune
                      (          psg.asm):00649                     ; Repeat
AF32 8EBF99           (          psg.asm):00650 (3)     1227        ldx     #mario6 
AF35 BDAED2           (          psg.asm):00651 (7)     1234        jsr     PlayTune
                      (          psg.asm):00652                     ; 35-42
AF38 8EC2D9           (          psg.asm):00653 (3)     1237        ldx     #mario7 
AF3B BDAED2           (          psg.asm):00654 (7)     1244        jsr     PlayTune
                      (          psg.asm):00655                     ; 43-50 (same as 27-34)
AF3E 8EBF99           (          psg.asm):00656 (3)     1247        ldx     #mario6 
AF41 BDAED2           (          psg.asm):00657 (7)     1254        jsr     PlayTune
                      (          psg.asm):00658                     ; Repeat
AF44 8EBF99           (          psg.asm):00659 (3)     1257        ldx     #mario6 
AF47 BDAED2           (          psg.asm):00660 (7)     1264        jsr     PlayTune
                      (          psg.asm):00661                     ; 51-53
AF4A 8EC5E5           (          psg.asm):00662 (3)     1267        ldx     #mario9 
AF4D BDAED2           (          psg.asm):00663 (7)     1274        jsr     PlayTune
AF50 39               (          psg.asm):00664 (4)     1278        rts
                      (          psg.asm):00665                 
                      (          psg.asm):00666                 ;  __  __                   _                       ___         _                       _ 
                      (          psg.asm):00667                 ; |  \/  |   ___    _ __   | | __   ___   _   _    |_ _|  ___  | |   __ _   _ __     __| |
                      (          psg.asm):00668                 ; | |\/| |  / _ \  | '_ \  | |/ /  / _ \ | | | |    | |  / __| | |  / _` | | '_ \   / _` |
                      (          psg.asm):00669                 ; | |  | | | (_) | | | | | |   <  |  __/ | |_| |    | |  \__ \ | | | (_| | | | | | | (_| |
                      (          psg.asm):00670                 ; |_|  |_|  \___/  |_| |_| |_|\_\  \___|  \__, |   |___| |___/ |_|  \__,_| |_| |_|  \__,_|
                      (          psg.asm):00671                 ;                                         |___/                                           
                      (          psg.asm):00672                 
                      (          psg.asm):00673                 ; Monkey Island Song
                      (          psg.asm):00674                 ; ==================
                      (          psg.asm):00675                 
AF51                  (          psg.asm):00676                 MonkeyIslandSong:
AF51 8612             (          psg.asm):00677 (2)     1280        lda     #18                 ; Load tempo
AF53 B7EDE0           (          psg.asm):00678 (4)     1284        sta     SndTempo
AF56 8EC6C1           (          psg.asm):00679 (3)     1287        ldx     #MonkeyIslandData   ; Get LSB address
AF59 BDAED2           (          psg.asm):00680 (7)     1294        jsr     PlayTune            ; 
AF5C 39               (          psg.asm):00681 (4)     1298        rts
                      (          psg.asm):00682                 
                      (          psg.asm):00683                 ;  ____                    _     _____                        
                      (          psg.asm):00684                 ; | __ )    ___     ___   | |_  |_   _|  _   _   _ __     ___ 
                      (          psg.asm):00685                 ; |  _ \   / _ \   / _ \  | __|   | |   | | | | | '_ \   / _ \
                      (          psg.asm):00686                 ; | |_) | | (_) | | (_) | | |_    | |   | |_| | | | | | |  __/
                      (          psg.asm):00687                 ; |____/   \___/   \___/   \__|   |_|    \__,_| |_| |_|  \___|
                      (          psg.asm):00688                 ;
                      (          psg.asm):00689                 ; Windows 95 boot tune
                      (          psg.asm):00690                 ; ====================
                      (          psg.asm):00691                 
AF5D                  (          psg.asm):00692                 BootTune:
AF5D 860C             (          psg.asm):00693 (2)     1300        lda     #12                 ; Load tempo
AF5F B7EDE0           (          psg.asm):00694 (4)     1304        sta     SndTempo            ; Set tempo in memory
AF62 8EAF69           (          psg.asm):00695 (3)     1307        ldx     #BootTuneData       ; Point to tune data
AF65 BDAED2           (          psg.asm):00696 (7)     1314        jsr     PlayTune            ; Play the tune
AF68 39               (          psg.asm):00697 (4)     1318        rts
                      (          psg.asm):00698                 
                      (          psg.asm):00699                 ; -------------------------------------------------------------------
                      (          psg.asm):00700                 
AF69                  (          psg.asm):00701                 BootTuneData:
                      (          psg.asm):00702                     ; 0:0   Voice+Note,Vol+Dur
AF69 1FFF0008         (          psg.asm):00703                     .word   Voice1+XX,Off+Sixteenth
                      (          psg.asm):00704                     
                      (          psg.asm):00705                     ; 1:1    Voice    Note   Vol   Dur
AF6D 105A0700         (          psg.asm):00706                     .word   Voice1+Eb6,Mid+None
AF71 305A0300         (          psg.asm):00707                     .word   Voice3+Eb6,Low+None
AF75 405A0300         (          psg.asm):00708                     .word   Voice4+Eb6,Low+None
AF79 510D0700         (          psg.asm):00709                     .word   Voice5+Ab4,Mid+None
AF7D 61680700         (          psg.asm):00710                     .word   Voice6+Eb4,Mid+None
AF81 721B0700         (          psg.asm):00711                     .word   Voice7+Ab3,Mid+None
AF85 85010700         (          psg.asm):00712                     .word   Voice8+F2,Mid+None
AF89 AA020710         (          psg.asm):00713                     .word   Voice10+F1,Mid+Eighth
AF8D 1FFF0000         (          psg.asm):00714                     .word   Voice1+XX,Off+None
                      (          psg.asm):00715                 
                      (          psg.asm):00716                     ; 1:2    Voice    Note   Vol   Dur
AF91 10B40708         (          psg.asm):00717                     .word   Voice1+Eb5,Mid+Sixteenth
AF95 1FFF0000         (          psg.asm):00718                     .word   Voice1+XX,Off+None
                      (          psg.asm):00719                 
                      (          psg.asm):00720                     ; 1:3,4  Voice    Note   Vol   Dur
AF99 10780708         (          psg.asm):00721                     .word   Voice1+Bb5,Mid+Sixteenth
AF9D 20780710         (          psg.asm):00722                     .word   Voice2+Bb5,Mid+Eighth
AFA1 1FFF0000         (          psg.asm):00723                     .word   Voice1+XX,Off+None
AFA5 8FFF0000         (          psg.asm):00724                     .word   Voice8+XX,Off+None
AFA9 AFFF0000         (          psg.asm):00725                     .word   Voice10+XX,Off+None
                      (          psg.asm):00726                 
                      (          psg.asm):00727                     ; 1:5    Voice    Note   Vol   Dur
AFAD 10870700         (          psg.asm):00728                     .word   Voice1+Ab5,Mid+None
AFB1 210D0700         (          psg.asm):00729                     .word   Voice2+Ab4,Mid+None
AFB5 84350700         (          psg.asm):00730                     .word   Voice8+Ab2,Mid+None
AFB9 A86B0720         (          psg.asm):00731                     .word   Voice10+Ab1,Mid+Quarter
AFBD 1FFF0000         (          psg.asm):00732                     .word   Voice1+XX,Off+None
AFC1 2FFF0000         (          psg.asm):00733                     .word   Voice2+XX,Off+None
                      (          psg.asm):00734                     
                      (          psg.asm):00735                     ; 1:6    Voice    Note   Vol   Dur
AFC5 105A0700         (          psg.asm):00736                     .word   Voice1+Eb6,Mid+None
AFC9 10B40710         (          psg.asm):00737                     .word   Voice1+Eb5,Mid+Eighth
AFCD 1FFF0000         (          psg.asm):00738                     .word   Voice1+XX,Off+None
AFD1 2FFF0000         (          psg.asm):00739                     .word   Voice2+XX,Off+None
AFD5 3FFF0300         (          psg.asm):00740                     .word   Voice3+XX,Low+None
AFD9 4FFF0300         (          psg.asm):00741                     .word   Voice4+XX,Low+None
AFDD 5FFF0000         (          psg.asm):00742                     .word   Voice5+XX,Off+None
AFE1 6FFF0000         (          psg.asm):00743                     .word   Voice6+XX,Off+None
AFE5 7FFF0000         (          psg.asm):00744                     .word   Voice7+XX,Off+None
AFE9 8FFF0000         (          psg.asm):00745                     .word   Voice8+XX,Off+None
AFED AFFF0000         (          psg.asm):00746                     .word   Voice10+XX,Off+None
                      (          psg.asm):00747                 
                      (          psg.asm):00748                     ; 2:1    Voice    Note   Vol   Dur
AFF1 103C0700         (          psg.asm):00749                     .word   Voice1+Bb6,Mid+None
AFF5 20780700         (          psg.asm):00750                     .word   Voice2+Bb5,Mid+None
AFF9 303C0300         (          psg.asm):00751                     .word   Voice3+Bb6,Low+None
AFFD 40780300         (          psg.asm):00752                     .word   Voice4+Bb5,Low+None
B001 511D0700         (          psg.asm):00753                     .word   Voice5+G4,Mid+None
B005 61680700         (          psg.asm):00754                     .word   Voice6+Eb4,Mid+None
B009 723B0700         (          psg.asm):00755                     .word   Voice7+G3,Mid+None
B00D 81E00700         (          psg.asm):00756                     .word   Voice8+Bb3,Mid+None
B011 92CF0700         (          psg.asm):00757                     .word   Voice9+Eb3,Mid+None
B015 A59E0700         (          psg.asm):00758                     .word   Voice10+Eb2,Mid+None
B019 BB3C0740         (          psg.asm):00759                     .word   Voice11+Eb1,Mid+Half
B01D 1FFF0000         (          psg.asm):00760                     .word   Voice1+XX,Off+None
B021 2FFF0000         (          psg.asm):00761                     .word   Voice2+XX,Off+None
B025 3FFF0000         (          psg.asm):00762                     .word   Voice3+XX,Off+None
B029 4FFF0000         (          psg.asm):00763                     .word   Voice4+XX,Off+None
B02D 5FFF0000         (          psg.asm):00764                     .word   Voice5+XX,Off+None
B031 6FFF0000         (          psg.asm):00765                     .word   Voice6+XX,Off+None
B035 7FFF0000         (          psg.asm):00766                     .word   Voice7+XX,Off+None
B039 8FFF0000         (          psg.asm):00767                     .word   Voice8+XX,Off+None
B03D 9FFF0000         (          psg.asm):00768                     .word   Voice9+XX,Off+None
B041 AFFF0000         (          psg.asm):00769                     .word   Voice10+XX,Off+None
B045 BFFF0000         (          psg.asm):00770                     .word   Voice11+XX,Off+None
                      (          psg.asm):00771                 
                      (          psg.asm):00772                     ; EOT
B049 00000000         (          psg.asm):00773                     .word   $0000,$0000
                      (         main.asm):00195                     INCLUDE "data.asm"          ; Text data
                      (         data.asm):00001                 ; ****************************************************************************************
                      (         data.asm):00002                 ; * Text and Data
                      (         data.asm):00003                 ; ****************************************************************************************
                      (         data.asm):00004                 
                      (         data.asm):00005                     PRAGMA cc
                      (         data.asm):00006                 
B04D                  (         data.asm):00007                 BootMsg:    ;                                        *                       *               *
B04D 2D2D2D2D2D2D2D2D (         data.asm):00008                     .str    "----------------------------------------"
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
B075 0D0A             (         data.asm):00009                     .db     CR,LF
B077 4D6963726F486F62 (         data.asm):00010                     .str    "MicroHobbyist's Retro Homebrew Computers"
     6279697374277320
     526574726F20486F
     6D65627265772043
     6F6D707574657273
B09F 0D0A             (         data.asm):00011                     .db     CR,LF
B0A1 4C6F676963537061 (         data.asm):00012                     .str    "LogicSpark-09, a 6309 project, rev "
     726B2D30392C2061
     2036333039207072
     6F6A6563742C2072
     657620
B0C4 000D0A           (         data.asm):00013                     .db     NULL,CR,LF
B0C7 44657369676E6564 (         data.asm):00014                     .str    "Designed by Frederic Segard  (2024)"
     2062792046726564
     6572696320536567
     6172642020283230
     323429
B0EA 0D0A0A00         (         data.asm):00015                     .db     CR,LF,LF,NULL
B0EE 2062797465732066 (         data.asm):00016                     .str    " bytes free "
     72656520
B0FA 0D0A00           (         data.asm):00017                     .db     CR,LF,NULL
B0FD 206279746573206F (         data.asm):00018                     .str    " bytes of unallocated shadow RAM"
     6620756E616C6C6F
     6361746564207368
     61646F772052414D
B11D 0D0A             (         data.asm):00019                     .db     CR,LF
B11F 2D2D2D2D2D2D2D2D (         data.asm):00020                     .str    "----------------------------------------"
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
     2D2D2D2D2D2D2D2D
B147 0D0A0A00         (         data.asm):00021                     .db     CR,LF,LF,NULL
                      (         data.asm):00022                 
B14B                  (         data.asm):00023                 CmdList:
B14B 41444452         (         data.asm):00024                     .str    "ADDR"
B14F FF               (         data.asm):00025                     .db     EOD
B150 ABA0             (         data.asm):00026                     .dw     SetAddress          ; Run code at current or specified address
B152 434C53           (         data.asm):00027                     .str    "CLS"
B155 FF               (         data.asm):00028                     .db     EOD
B156 A15F             (         data.asm):00029                     .dw     Cls                 ; Clear screen
B158 44494147         (         data.asm):00030                     .str    "DIAG"
B15C FF               (         data.asm):00031                     .db     EOD
B15D A57D             (         data.asm):00032                     .dw     Diagnostics         ; Display content of memory
B15F 44554D50         (         data.asm):00033                     .str    "DUMP"
B163 FF               (         data.asm):00034                     .db     EOD
B164 A65B             (         data.asm):00035                     .dw     Dump                ; Display content of memory
B166 48454C50         (         data.asm):00036                     .str    "HELP"
B16A FF               (         data.asm):00037                     .db     EOD
B16B A50A             (         data.asm):00038                     .dw     CmdHelp             ; Help for various commands
B16D 494E54           (         data.asm):00039                     .str    "INT"
B170 FF               (         data.asm):00040                     .db     EOD
B171 A6BF             (         data.asm):00041                     .dw     IntTest             ; Test priority interrupt encoder
B173 4C4F4144         (         data.asm):00042                     .str    "LOAD"
B177 FF               (         data.asm):00043                     .db     EOD
B178 A6DA             (         data.asm):00044                     .dw     LoadIntelHex        ; Upload Intel Hex code
B17A 4D4150           (         data.asm):00045                     .str    "MAP"
B17D FF               (         data.asm):00046                     .db     EOD
B17E A7A8             (         data.asm):00047                     .dw     MemoryMap           ; Memory map of LogicSpark-09
B180 4D454D           (         data.asm):00048                     .str    "MEM"
B183 FF               (         data.asm):00049                     .db     EOD
B184 A7FB             (         data.asm):00050                     .dw     MemSize             ; Memory Size installed
B186 4D4D55           (         data.asm):00051                     .str    "MMU"
B189 FF               (         data.asm):00052                     .db     EOD
B18A A8B1             (         data.asm):00053                     .dw     Mmu                 ; MMU Commands and status
B18C 5045454B         (         data.asm):00054                     .str    "PEEK"
B190 FF               (         data.asm):00055                     .db     EOD
B191 A9D1             (         data.asm):00056                     .dw     Peek                ; Read a byte of memory
B193 504C4159         (         data.asm):00057                     .str    "PLAY"
B197 FF               (         data.asm):00058                     .db     EOD
B198 ACAA             (         data.asm):00059                     .dw     PlayCmd             ; Play a song
B19A 504F4B45         (         data.asm):00060                     .str    "POKE"
B19E FF               (         data.asm):00061                     .db     EOD
B19F A9FB             (         data.asm):00062                     .dw     Poke                ; Write a byte of memory
B1A1 524547           (         data.asm):00063                     .str    "REG"
B1A4 FF               (         data.asm):00064                     .db     EOD
B1A5 AA3B             (         data.asm):00065                     .dw     PrintRegisters      ; Print registers
B1A7 52554E           (         data.asm):00066                     .str    "RUN"
B1AA FF               (         data.asm):00067                     .db     EOD
B1AB AB7D             (         data.asm):00068                     .dw     Run                 ; Run code at current or specified address
B1AD 544147           (         data.asm):00069                     .str    "TAG"
B1B0 FF               (         data.asm):00070                     .db     EOD
B1B1 A7D0             (         data.asm):00071                     .dw     MemTag              ; Tags memory cells to block numbers (except #07)
B1B3 5741524D         (         data.asm):00072                     .str    "WARM"
B1B7 FF               (         data.asm):00073                     .db     EOD
B1B8 ABD0             (         data.asm):00074                     .dw     Warmboot            ; Warmboot the monitor
B1BA 5752495445       (         data.asm):00075                     .str    "WRITE"
B1BF FF               (         data.asm):00076                     .db     EOD
B1C0 ABD3             (         data.asm):00077                     .dw     Write               ; Write sequetial bytes to memory
B1C2 00               (         data.asm):00078                     .db     NULL
                      (         data.asm):00079                 
B1C3                  (         data.asm):00080                 CmdHelpMsg: ;                                        *                       *               *
B1C3 4C697374206F6620 (         data.asm):00081                     .str    "List of valid commands:"
     76616C696420636F
     6D6D616E64733A
B1DA 0D0A             (         data.asm):00082                     .db     CR,LF
B1DC 202020414444523A (         data.asm):00083                     .str    "   ADDR: Set current address"
     2053657420637572
     72656E7420616464
     72657373
B1F8 0D0A             (         data.asm):00084                     .db     CR,LF
B1FA 202020434C533A20 (         data.asm):00085                     .str    "   CLS: Clear screen"
     436C656172207363
     7265656E
B20E 0D0A             (         data.asm):00086                     .db     CR,LF
B210 202020444941473A (         data.asm):00087                     .str    "   DIAG: Diagnostics"
     20446961676E6F73
     74696373
B224 0D0A             (         data.asm):00088                     .db     CR,LF
B226 20202044554D503A (         data.asm):00089                     .str    "   DUMP: Display memory content"
     20446973706C6179
     206D656D6F727920
     636F6E74656E74
B245 0D0A             (         data.asm):00090                     .db     CR,LF
B247 20202048454C503A (         data.asm):00091                     .str    "   HELP: This help screen"
     2054686973206865
     6C70207363726565
     6E
B260 0D0A             (         data.asm):00092                     .db     CR,LF
B262 202020494E543A20 (         data.asm):00093                     .str    "   INT: Test priority interrupt encoder"
     5465737420707269
     6F7269747920696E
     7465727275707420
     656E636F646572
B289 0D0A             (         data.asm):00094                     .db     CR,LF
B28B 2020204C4F41443A (         data.asm):00095                     .str    "   LOAD: Load Intel Hex from console"
     204C6F616420496E
     74656C2048657820
     66726F6D20636F6E
     736F6C65
B2AF 0D0A             (         data.asm):00096                     .db     CR,LF
B2B1 2020204D41503A20 (         data.asm):00097                     .str    "   MAP: Memory and I/O map of system"
     4D656D6F72792061
     6E6420492F4F206D
     6170206F66207379
     7374656D
B2D5 0D0A             (         data.asm):00098                     .db     CR,LF
B2D7 2020204D454D3A20 (         data.asm):00099                     .str    "   MEM: Available memory on system"
     417661696C61626C
     65206D656D6F7279
     206F6E2073797374
     656D
B2F9 0D0A             (         data.asm):00100                     .db     CR,LF
B2FB 2020204D4D553A20 (         data.asm):00101                     .str    "   MMU: Memory Management Unit Commands and Status"
     4D656D6F7279204D
     616E6167656D656E
     7420556E69742043
     6F6D6D616E647320
     616E642053746174
     7573
B32D 0D0A             (         data.asm):00102                     .db     CR,LF
B32F 2020205045454B3A (         data.asm):00103                     .str    "   PEEK: Read a byte of memory"
     2052656164206120
     62797465206F6620
     6D656D6F7279
B34D 0D0A             (         data.asm):00104                     .db     CR,LF
B34F 202020504C41593A (         data.asm):00105                     .str    "   PLAY: Play a song (1 or 2)"
     20506C6179206120
     736F6E6720283120
     6F72203229
B36C 0D0A             (         data.asm):00106                     .db     CR,LF
B36E 202020504F4B453A (         data.asm):00107                     .str    "   POKE: Write a byte into memory"
     2057726974652061
     206279746520696E
     746F206D656D6F72
     79
B38F 0D0A             (         data.asm):00108                     .db     CR,LF
B391 2020205245473A20 (         data.asm):00109                     .str    "   REG: Print the registers content"
     5072696E74207468
     6520726567697374
     65727320636F6E74
     656E74
B3B4 0D0A             (         data.asm):00110                     .db     CR,LF
B3B6 20202052554E3A20 (         data.asm):00111                     .str    "   RUN: Execute code"
     4578656375746520
     636F6465
B3CA 0D0A             (         data.asm):00112                     .db     CR,LF
B3CC 2020205441473A20 (         data.asm):00113                     .str    "   TAG: Tags memory to block numbers (except #07)"
     54616773206D656D
     6F727920746F2062
     6C6F636B206E756D
     6265727320286578
     6365707420233037
     29
B3FD 0D0A             (         data.asm):00114                     .db     CR,LF
B3FF 2020205741524D3A (         data.asm):00115                     .str    "   WARM: Warm boots the computer"
     205761726D20626F
     6F74732074686520
     636F6D7075746572
B41F 0D0A             (         data.asm):00116                     .db     CR,LF
B421 2020205752495445 (         data.asm):00117                     .str    "   WRITE: Write data sequentially to memory"
     3A20577269746520
     6461746120736571
     75656E7469616C6C
     7920746F206D656D
     6F7279
B44C 0D0A00           (         data.asm):00118                     .db     CR,LF,NULL
                      (         data.asm):00119                 
B44F                  (         data.asm):00120                 DiagMessage:
B44F 446961676E6F7374 (         data.asm):00121                     .str    "Diagnostics"
     696373
B45A 0D0A00           (         data.asm):00122                     .db     CR,LF,NULL
                      (         data.asm):00123                 
B45D                  (         data.asm):00124                 DiagTestingMsg:
B45D 202054657374696E (         data.asm):00125                     .str    "  Testing 512K chip #"
     67203531324B2063
     6869702023
B472 00               (         data.asm):00126                     .db     NULL
                      (         data.asm):00127                 
B473                  (         data.asm):00128                 DiagPassMsg:
B473 50617373         (         data.asm):00129                     .str    "Pass"
B477 0D0A00           (         data.asm):00130                     .db     CR,LF,NULL
                      (         data.asm):00131                 
B47A                  (         data.asm):00132                 DiagFailMsg:
B47A 4661696C         (         data.asm):00133                     .str    "Fail"
B47E 0D0A00           (         data.asm):00134                     .db     CR,LF,NULL
                      (         data.asm):00135                 
B481                  (         data.asm):00136                 DiagSkipMsg:
B481 536B6970         (         data.asm):00137                     .str    "Skip"
B485 0D0A00           (         data.asm):00138                     .db     CR,LF,NULL
                      (         data.asm):00139                     
B488                  (         data.asm):00140                 ErrInvalidAddrMsg:
B488 496E76616C696420 (         data.asm):00141                     .str    "Invalid address!"
     6164647265737321
B498 0D0A00           (         data.asm):00142                     .db     CR,LF,NULL
                      (         data.asm):00143                 
B49B                  (         data.asm):00144                 ErrInvalidByteMsg:
B49B 496E76616C696420 (         data.asm):00145                     .str    "Invalid byte!"
     6279746521
B4A8 0D0A00           (         data.asm):00146                     .db     CR,LF,NULL
                      (         data.asm):00147                 
B4AB                  (         data.asm):00148                 ErrInvalidParamMsg:
B4AB 496E76616C696420 (         data.asm):00149                     .str    "Invalid parameter!"
     706172616D657465
     7221
B4BD 0D0A00           (         data.asm):00150                     .db     CR,LF,NULL
                      (         data.asm):00151                 
B4C0                  (         data.asm):00152                 ErrNoParameterMsg:
B4C0 4E6F20706172616D (         data.asm):00153                     .str    "No parameter was specified."
     6574657220776173
     2073706563696669
     65642E
B4DB 0D0A00           (         data.asm):00154                     .db     CR,LF,NULL
                      (         data.asm):00155                 
B4DE                  (         data.asm):00156                 ErrInvalidCmdMsg:
B4DE 496E76616C696420 (         data.asm):00157                     .str    "Invalid command!"
     636F6D6D616E6421
B4EE 0D0A00           (         data.asm):00158                     .db     CR,LF,NULL
                      (         data.asm):00159                 
B4F1                  (         data.asm):00160                 ErrSyntaxErrorMsg:
B4F1 53796E7461782065 (         data.asm):00161                     .str    "Syntax error!"
     72726F7221
B4FE 0D0A00           (         data.asm):00162                     .db     CR,LF,NULL
                      (         data.asm):00163                     
B501                  (         data.asm):00164                 LoadStartMsg:
B501 4C6F616420363330 (         data.asm):00165                     .str    "Load 6309 code in Intel Hex format"
     3920636F64652069
     6E20496E74656C20
     48657820666F726D
     6174
B523 0D0A             (         data.asm):00166                     .db     CR,LF
B525 5072657373204553 (         data.asm):00167                     .str    "Press ESC to cancel."
     4320746F2063616E
     63656C2E
B539 0D0A00           (         data.asm):00168                     .db     CR,LF,NULL
                      (         data.asm):00169                 
B53C                  (         data.asm):00170                 LoadUserAbortErr:
B53C 5472616E73666572 (         data.asm):00171                     .str    "Transfer aborted by user"
     2061626F72746564
     2062792075736572
B554 0D0A00           (         data.asm):00172                     .db     CR,LF,NULL
                      (         data.asm):00173                 
B557                  (         data.asm):00174                 LoadRecordErr:
B557 556E6B6E6F776E20 (         data.asm):00175                     .str    "Unknown record type: "
     7265636F72642074
     7970653A20
B56C 00               (         data.asm):00176                     .db     NULL
                      (         data.asm):00177                 
B56D                  (         data.asm):00178                 LoadFailedErr:
B56D 446F776E6C6F6164 (         data.asm):00179                     .str    "Download failed due to checksum error"
     206661696C656420
     64756520746F2063
     6865636B73756D20
     6572726F72
B592 0D0A00           (         data.asm):00180                     .db     CR,LF,NULL
                      (         data.asm):00181                 
B595                  (         data.asm):00182                 LoadSuccessMsg:
B595 446F776E6C6F6164 (         data.asm):00183                     .str    "Download Successful"
     2053756363657373
     66756C
B5A8 0D0A00           (         data.asm):00184                     .db     CR,LF,NULL
                      (         data.asm):00185                 
B5AB                  (         data.asm):00186                 MemoryMapMsg:
                      (         data.asm):00187                     ; Memory Map:
B5AB 4D656D6F7279204D (         data.asm):00188                     .str    "Memory Map:"
     61703A
B5B6 0D0A             (         data.asm):00189                     .db     CR,LF
B5B8 20202052414D3A20 (         data.asm):00190                     .str    "   RAM:        $0000-$"
     2020202020202024
     303030302D24
B5CE 000D0A           (         data.asm):00191                     .db     NULL,CR,LF
B5D1 202020466C617368 (         data.asm):00192                     .str    "   Flash:      $"
     3A20202020202024
B5E1 000D0A           (         data.asm):00193                     .db     NULL,CR,LF
B5E4 202020436F6E7374 (         data.asm):00194                     .str    "   Const. RAM: $FE00-$FEFF"
     2E2052414D3A2024
     464530302D244645
     4646
B5FE 0D0A             (         data.asm):00195                     .db     CR,LF
B600 202020492F4F2072 (         data.asm):00196                     .str    "   I/O range:  $FF00-$FFEF"
     616E67653A202024
     464630302D244646
     4546
B61A 0D0A             (         data.asm):00197                     .db     CR,LF
B61C 202020566563746F (         data.asm):00198                     .str    "   Vectors:    $FFF0-$FFFF"
     72733A2020202024
     464646302D244646
     4646
B636 0D0A             (         data.asm):00199                     .db     CR,LF
B638 492F4F204D61703A (         data.asm):00200                     .str    "I/O Map:"
B640 0D0A             (         data.asm):00201                     .db     CR,LF
B642 202020496E742E20 (         data.asm):00202                     .str    "   Int. Vect.: $FF09 (R)"
     566563742E3A2024
     4646303920285229
B65A 0D0A             (         data.asm):00203                     .db     CR,LF
B65C 2020204143494120 (         data.asm):00204                     .str    "   ACIA #1:    $FF68-FF6B"
     23313A2020202024
     464636382D464636
     42
B675 0D0A             (         data.asm):00205                     .db     CR,LF
B677 2020204143494120 (         data.asm):00206                     .str    "   ACIA #2:    $FF6C-FF6F"
     23323A2020202024
     464636432D464636
     46
B690 0D0A00           (         data.asm):00207                     .db     CR,LF,NULL
                      (         data.asm):00208                 
B693                  (         data.asm):00209                 MemorySizeMsg:
                      (         data.asm):00210                     ; Memory Size:
B693 4D656D6F72792053 (         data.asm):00211                     .str    "Memory Size:"
     697A653A
B69F 0D0A             (         data.asm):00212                     .db     CR,LF
B6A1 2020204261736520 (         data.asm):00213                     .str    "   Base RAM:     64KB ("
     52414D3A20202020
     2036344B422028
B6B8 00               (         data.asm):00214                     .db     NULL
B6B9 2062797465732066 (         data.asm):00215                     .str    " bytes free)"
     72656529
B6C5 0D0A             (         data.asm):00216                     .db     CR,LF
B6C7 202020457874656E (         data.asm):00217                     .str    "   Extended RAM: "
     6465642052414D3A
     20
B6D8 00               (         data.asm):00218                     .db     NULL
B6D9 4B422028         (         data.asm):00219                     .str    "KB ("
B6DD 00               (         data.asm):00220                     .db     NULL
B6DE 20626C6F636B7320 (         data.asm):00221                     .str    " blocks free)"
     6672656529
B6EB 0D0A             (         data.asm):00222                     .db     CR,LF
B6ED 202020546F74616C (         data.asm):00223                     .str    "   Total RAM:    "
     2052414D3A202020
     20
B6FE 00               (         data.asm):00224                     .db     NULL
B6FF 4B42             (         data.asm):00225                     .str    "KB"
B701 0D0A00           (         data.asm):00226                     .db     CR,LF,NULL
                      (         data.asm):00227                 
B704                  (         data.asm):00228                 MmuMsg:
                      (         data.asm):00229                     ; MMU status:
B704 4D4D552053746174 (         data.asm):00230                     .str    "MMU Status:"
     75733A
B70F 0D0A             (         data.asm):00231                     .db     CR,LF
B711 2020204D4D552028 (         data.asm):00232                     .str    "   MMU (ON/OFF): "
     4F4E2F4F4646293A
     20
B722 000D0A           (         data.asm):00233                     .db     NULL,CR,LF
B725 2020205461736B20 (         data.asm):00234                     .str    "   Task (0/1): "
     28302F31293A20
B734 000D0A           (         data.asm):00235                     .db     NULL,CR,LF
B737 5461736B20726567 (         data.asm):00236                     .str    "Task registers:"
     6973746572733A
B746 0D0A             (         data.asm):00237                     .db     CR,LF
B748 2020205461736B20 (         data.asm):00238                     .str    "   Task 0: "
     303A20
B753 000D0A           (         data.asm):00239                     .db     NULL,CR,LF
B756 2020205461736B20 (         data.asm):00240                     .str    "   Task 1: "
     313A20
B761 00               (         data.asm):00241                     .db     NULL
                      (         data.asm):00242                 
B762                  (         data.asm):00243                 MmuList:
B762 4F4E             (         data.asm):00244                     .str    "ON"
B764 FF               (         data.asm):00245                     .db     EOD
B765 A97A             (         data.asm):00246                     .dw     MmuOn
B767 4F4646           (         data.asm):00247                     .str    "OFF"
B76A FF               (         data.asm):00248                     .db     EOD
B76B A983             (         data.asm):00249                     .dw     MmuOff
B76D 5441534B         (         data.asm):00250                     .str    "TASK"
B771 FF               (         data.asm):00251                     .db     EOD
B772 A98C             (         data.asm):00252                     .dw     MmuTask
B774 5245534554       (         data.asm):00253                     .str    "RESET"
B779 FF               (         data.asm):00254                     .db     EOD
B77A A9B3             (         data.asm):00255                     .dw     MmuReset
B77C 00               (         data.asm):00256                     .db     NULL
                      (         main.asm):00196                     INCLUDE "mario.asm"         ; Super Mario song data
B77D                  (        mario.asm):00001                 mario1:
                      (        mario.asm):00002                 
                      (        mario.asm):00003                     ; 1:1   Voice    Note   Vol   Dur
B77D 10AA0700         (        mario.asm):00004                     .dw     Voice1+E5,Mid+None
B781 212E0700         (        mario.asm):00005                     .dw     Voice2+Fs4,Mid+None
B785 42FA0710         (        mario.asm):00006                     .dw     Voice4+D3,Mid+Eighth
B789 1FFF0000         (        mario.asm):00007                     .dw     Voice1+XX,Off+None
B78D 2FFF0000         (        mario.asm):00008                     .dw     Voice2+XX,Off+None
B791 4FFF0002         (        mario.asm):00009                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00010                 
                      (        mario.asm):00011                     ; 1:2
B795 10AA0700         (        mario.asm):00012                     .dw     Voice1+E5,Mid+None
B799 212E0700         (        mario.asm):00013                     .dw     Voice2+Fs4,Mid+None
B79D 42FA0710         (        mario.asm):00014                     .dw     Voice4+D3,Mid+Eighth
B7A1 1FFF0000         (        mario.asm):00015                     .dw     Voice1+XX,Off+None
B7A5 2FFF0000         (        mario.asm):00016                     .dw     Voice2+XX,Off+None
B7A9 4FFF0010         (        mario.asm):00017                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00018                 
                      (        mario.asm):00019                     ; 1:3
B7AD 10AA0700         (        mario.asm):00020                     .dw     Voice1+E5,Mid+None
B7B1 212E0700         (        mario.asm):00021                     .dw     Voice2+Fs4,Mid+None
B7B5 42FA0710         (        mario.asm):00022                     .dw     Voice4+D3,Mid+Eighth
B7B9 1FFF0000         (        mario.asm):00023                     .dw     Voice1+XX,Off+None
B7BD 2FFF0000         (        mario.asm):00024                     .dw     Voice2+XX,Off+None
B7C1 4FFF0010         (        mario.asm):00025                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00026                 
                      (        mario.asm):00027                     ; 1:4
B7C5 10D60700         (        mario.asm):00028                     .dw     Voice1+C5,Mid+None
B7C9 212E0700         (        mario.asm):00029                     .dw     Voice2+Fs4,Mid+None
B7CD 42FA0710         (        mario.asm):00030                     .dw     Voice4+D3,Mid+Eighth
B7D1 1FFF0000         (        mario.asm):00031                     .dw     Voice1+XX,Off+None
B7D5 2FFF0000         (        mario.asm):00032                     .dw     Voice2+XX,Off+None
B7D9 4FFF0002         (        mario.asm):00033                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00034                 
                      (        mario.asm):00035                     ; 1:5
B7DD 10AA0700         (        mario.asm):00036                     .dw     Voice1+E5,Mid+None
B7E1 212E0700         (        mario.asm):00037                     .dw     Voice2+Fs4,Mid+None
B7E5 42FA0720         (        mario.asm):00038                     .dw     Voice4+D3,Mid+Quarter
B7E9 1FFF0000         (        mario.asm):00039                     .dw     Voice1+XX,Off+None
B7ED 2FFF0000         (        mario.asm):00040                     .dw     Voice2+XX,Off+None
B7F1 4FFF0002         (        mario.asm):00041                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00042                 
                      (        mario.asm):00043                     ; 2:1   Voice+Note,Vol+Dur
B7F5 108F0700         (        mario.asm):00044                     .dw     Voice1+G5,Mid+None
B7F9 20E20700         (        mario.asm):00045                     .dw     Voice2+B4,Mid+None
B7FD 311D0700         (        mario.asm):00046                     .dw     Voice3+G4,Mid+None
B801 423B0720         (        mario.asm):00047                     .dw     Voice4+G3,Mid+Quarter
B805 1FFF0000         (        mario.asm):00048                     .dw     Voice1+XX,Off+None
B809 2FFF0000         (        mario.asm):00049                     .dw     Voice2+XX,Off+None
B80D 3FFF0000         (        mario.asm):00050                     .dw     Voice3+XX,Off+None
B811 4FFF0020         (        mario.asm):00051                     .dw     Voice4+XX,Off+Quarter
                      (        mario.asm):00052                 
                      (        mario.asm):00053                     ; 2:2
B815 111D0700         (        mario.asm):00054                     .dw     Voice1+G4,Mid+None
B819 44750720         (        mario.asm):00055                     .dw     Voice4+G2,Mid+Quarter
B81D 1FFF0000         (        mario.asm):00056                     .dw     Voice1+XX,Off+None
B821 4FFF0020         (        mario.asm):00057                     .dw     Voice4+XX,Off+Quarter
                      (        mario.asm):00058                 
                      (        mario.asm):00059                     ; EOT
B825 00000000         (        mario.asm):00060                     .dw     $0000,$0000
                      (        mario.asm):00061                 
                      (        mario.asm):00062                 ; ----------------------------------------------------------------------------------------------------------------------
                      (        mario.asm):00063                 
B829                  (        mario.asm):00064                 mario2:
                      (        mario.asm):00065                     ; 3:1   Voice+Note,Vol+Dur
B829 10D60700         (        mario.asm):00066                     .dw     Voice1+C5,Mid+None
B82D 21530700         (        mario.asm):00067                     .dw     Voice2+E4,Mid+None
B831 423B0720         (        mario.asm):00068                     .dw     Voice4+G3,Mid+Quarter
B835 1FFF0000         (        mario.asm):00069                     .dw     Voice1+XX,Off+None
B839 2FFF0000         (        mario.asm):00070                     .dw     Voice2+XX,Off+None
B83D 4FFF0010         (        mario.asm):00071                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00072                 
                      (        mario.asm):00073                     ; 3:2
B841 111D0700         (        mario.asm):00074                     .dw     Voice1+G4,Mid+None
B845 21AC0700         (        mario.asm):00075                     .dw     Voice2+C4,Mid+None
B849 42A70720         (        mario.asm):00076                     .dw     Voice4+E3,Mid+Quarter
B84D 1FFF0000         (        mario.asm):00077                     .dw     Voice1+XX,Off+None
B851 2FFF0000         (        mario.asm):00078                     .dw     Voice2+XX,Off+None
B855 4FFF0010         (        mario.asm):00079                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00080                 
                      (        mario.asm):00081                     ; 3:3
B859 11530700         (        mario.asm):00082                     .dw     Voice1+E4,Mid+None
B85D 223B0700         (        mario.asm):00083                     .dw     Voice2+G3,Mid+None
B861 43570720         (        mario.asm):00084                     .dw     Voice4+C3,Mid+Quarter
B865 1FFF0000         (        mario.asm):00085                     .dw     Voice1+XX,Off+None
B869 2FFF0000         (        mario.asm):00086                     .dw     Voice2+XX,Off+None
B86D 4FFF0010         (        mario.asm):00087                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00088                     
                      (        mario.asm):00089                     ; 4:1   Voice+Note,Vol+Dur
B871 10FE0700         (        mario.asm):00090                     .dw     Voice1+A4,Mid+None
B875 21AC0700         (        mario.asm):00091                     .dw     Voice2+C4,Mid+None
B879 42810720         (        mario.asm):00092                     .dw     Voice4+F3,Mid+Quarter
B87D 1FFF0000         (        mario.asm):00093                     .dw     Voice1+XX,Off+None
B881 2FFF0000         (        mario.asm):00094                     .dw     Voice2+XX,Off+None
B885 4FFF0002         (        mario.asm):00095                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00096                 
                      (        mario.asm):00097                     ; 4:2
B889 10E20700         (        mario.asm):00098                     .dw     Voice1+B4,Mid+None
B88D 217D0700         (        mario.asm):00099                     .dw     Voice2+D4,Mid+None
B891 423B0720         (        mario.asm):00100                     .dw     Voice4+G3,Mid+Quarter
B895 1FFF0000         (        mario.asm):00101                     .dw     Voice1+XX,Off+None
B899 2FFF0000         (        mario.asm):00102                     .dw     Voice2+XX,Off+None
B89D 4FFF0002         (        mario.asm):00103                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00104                 
                      (        mario.asm):00105                     ; 4:3
B8A1 10F00700         (        mario.asm):00106                     .dw     Voice1+As4,Mid+None
B8A5 21940700         (        mario.asm):00107                     .dw     Voice2+Cs4,Mid+None
B8A9 425D0710         (        mario.asm):00108                     .dw     Voice4+Fs3,Mid+Eighth
B8AD 1FFF0000         (        mario.asm):00109                     .dw     Voice1+XX,Off+None
B8B1 2FFF0000         (        mario.asm):00110                     .dw     Voice2+XX,Off+None
B8B5 4FFF0002         (        mario.asm):00111                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00112                 
                      (        mario.asm):00113                     ; 4:4
B8B9 10FE0700         (        mario.asm):00114                     .dw     Voice1+A4,Mid+None
B8BD 21AC0700         (        mario.asm):00115                     .dw     Voice2+C4,Mid+None
B8C1 42810720         (        mario.asm):00116                     .dw     Voice4+F3,Mid+Quarter
B8C5 1FFF0000         (        mario.asm):00117                     .dw     Voice1+XX,Off+None
B8C9 2FFF0000         (        mario.asm):00118                     .dw     Voice2+XX,Off+None
B8CD 4FFF0002         (        mario.asm):00119                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00120                 
                      (        mario.asm):00121                     ; 5:1   Voice+Note,Vol+Dur
B8D1 111D0700         (        mario.asm):00122                     .dw     Voice1+G4,Mid+None
B8D5 21AC0700         (        mario.asm):00123                     .dw     Voice2+C4,Mid+None
B8D9 42A70710         (        mario.asm):00124                     .dw     Voice4+E3,Mid+Eighth
B8DD 1FFF0000         (        mario.asm):00125                     .dw     Voice1+XX,Off+None
B8E1 2FFF0000         (        mario.asm):00126                     .dw     Voice2+XX,Off+None
B8E5 4FFF0002         (        mario.asm):00127                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00128                 
                      (        mario.asm):00129                     ; 5:2
B8E9 10AA0700         (        mario.asm):00130                     .dw     Voice1+E5,Mid+None
B8ED 211D0700         (        mario.asm):00131                     .dw     Voice2+G4,Mid+None
B8F1 41AC0710         (        mario.asm):00132                     .dw     Voice4+C4,Mid+Eighth
B8F5 1FFF0000         (        mario.asm):00133                     .dw     Voice1+XX,Off+None
B8F9 2FFF0000         (        mario.asm):00134                     .dw     Voice2+XX,Off+None
B8FD 4FFF0002         (        mario.asm):00135                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00136                 
                      (        mario.asm):00137                     ; 5:3
B901 108F0700         (        mario.asm):00138                     .dw     Voice1+G5,Mid+None
B905 20E20700         (        mario.asm):00139                     .dw     Voice2+B4,Mid+None
B909 41530710         (        mario.asm):00140                     .dw     Voice4+E4,Mid+Eighth
B90D 1FFF0000         (        mario.asm):00141                     .dw     Voice1+XX,Off+None
B911 2FFF0000         (        mario.asm):00142                     .dw     Voice2+XX,Off+None
B915 4FFF0002         (        mario.asm):00143                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00144                 
                      (        mario.asm):00145                     ; 5:4
B919 107F0700         (        mario.asm):00146                     .dw     Voice1+A5,Mid+None
B91D 20D60700         (        mario.asm):00147                     .dw     Voice2+C5,Mid+None
B921 41400720         (        mario.asm):00148                     .dw     Voice4+F4,Mid+Quarter
B925 1FFF0000         (        mario.asm):00149                     .dw     Voice1+XX,Off+None
B929 2FFF0000         (        mario.asm):00150                     .dw     Voice2+XX,Off+None
B92D 4FFF0002         (        mario.asm):00151                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00152                 
                      (        mario.asm):00153                     ; 5:5
B931 10A00700         (        mario.asm):00154                     .dw     Voice1+F5,Mid+None
B935 20FE0700         (        mario.asm):00155                     .dw     Voice2+A4,Mid+None
B939 417D0710         (        mario.asm):00156                     .dw     Voice4+D4,Mid+Eighth
B93D 1FFF0000         (        mario.asm):00157                     .dw     Voice1+XX,Off+None
B941 2FFF0000         (        mario.asm):00158                     .dw     Voice2+XX,Off+None
B945 4FFF0002         (        mario.asm):00159                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00160                 
                      (        mario.asm):00161                     ; 5:6
B949 108F0700         (        mario.asm):00162                     .dw     Voice1+G5,Mid+None
B94D 20E20700         (        mario.asm):00163                     .dw     Voice2+B4,Mid+None
B951 41530710         (        mario.asm):00164                     .dw     Voice4+E4,Mid+Eighth
B955 1FFF0000         (        mario.asm):00165                     .dw     Voice1+XX,Off+None
B959 2FFF0000         (        mario.asm):00166                     .dw     Voice2+XX,Off+None
B95D 4FFF0010         (        mario.asm):00167                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00168                 
                      (        mario.asm):00169                     ; 6:1   Voice+Note,Vol+Dur
B961 10AA0700         (        mario.asm):00170                     .dw     Voice1+E5,Mid+None
B965 20FE0700         (        mario.asm):00171                     .dw     Voice2+A4,Mid+None
B969 41AC0720         (        mario.asm):00172                     .dw     Voice4+C4,Mid+Quarter
B96D 1FFF0000         (        mario.asm):00173                     .dw     Voice1+XX,Off+None
B971 2FFF0000         (        mario.asm):00174                     .dw     Voice2+XX,Off+None
B975 4FFF0002         (        mario.asm):00175                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00176                     
                      (        mario.asm):00177                     ; 6:2
B979 10D60700         (        mario.asm):00178                     .dw     Voice1+C5,Mid+None
B97D 21530700         (        mario.asm):00179                     .dw     Voice2+E4,Mid+None
B981 40FE0710         (        mario.asm):00180                     .dw     Voice4+A4,Mid+Eighth
B985 1FFF0000         (        mario.asm):00181                     .dw     Voice1+XX,Off+None
B989 2FFF0000         (        mario.asm):00182                     .dw     Voice2+XX,Off+None
B98D 4FFF0002         (        mario.asm):00183                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00184                 
                      (        mario.asm):00185                     ; 6:3
B991 10BE0700         (        mario.asm):00186                     .dw     Voice1+D5,Mid+None
B995 21400700         (        mario.asm):00187                     .dw     Voice2+F4,Mid+None
B999 40E20710         (        mario.asm):00188                     .dw     Voice4+B4,Mid+Eighth
B99D 1FFF0000         (        mario.asm):00189                     .dw     Voice1+XX,Off+None
B9A1 2FFF0000         (        mario.asm):00190                     .dw     Voice2+XX,Off+None
B9A5 4FFF0002         (        mario.asm):00191                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00192                     
                      (        mario.asm):00193                     ; 6:4
B9A9 10E20700         (        mario.asm):00194                     .dw     Voice1+B4,Mid+None
B9AD 217D0700         (        mario.asm):00195                     .dw     Voice2+D4,Mid+None
B9B1 423B0720         (        mario.asm):00196                     .dw     Voice4+G3,Mid+Quarter
B9B5 1FFF0000         (        mario.asm):00197                     .dw     Voice1+XX,Off+None
B9B9 2FFF0000         (        mario.asm):00198                     .dw     Voice2+XX,Off+None
B9BD 4FFF0010         (        mario.asm):00199                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00200                 
                      (        mario.asm):00201                     ; EOT
B9C1 00000000         (        mario.asm):00202                     .dw     $0000,$0000
                      (        mario.asm):00203                     
                      (        mario.asm):00204                 ; ----------------------------------------------------------------------------------------------------------------------
                      (        mario.asm):00205                 
B9C5                  (        mario.asm):00206                 mario3:
                      (        mario.asm):00207                     ; 7:1   Voice+Note,Vol+Dur
B9C5 43570720         (        mario.asm):00208                     .dw     Voice4+C3,Mid+Quarter
B9C9 4FFF0002         (        mario.asm):00209                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00210                     
                      (        mario.asm):00211                     ; 7:2   Voice+Note,Vol+Dur
B9CD 108F0700         (        mario.asm):00212                     .dw     Voice1+G5,Mid+None
B9D1 20AA0710         (        mario.asm):00213                     .dw     Voice2+E5,Mid+Eighth
B9D5 1FFF0000         (        mario.asm):00214                     .dw     Voice1+XX,Off+None
B9D9 2FFF0002         (        mario.asm):00215                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00216                     
                      (        mario.asm):00217                     ; 7:3   Voice+Note,Vol+Dur
B9DD 10970700         (        mario.asm):00218                     .dw     Voice1+Fs5,Mid+None
B9E1 20B40700         (        mario.asm):00219                     .dw     Voice2+Ds5,Mid+None
B9E5 423B0710         (        mario.asm):00220                     .dw     Voice4+G3,Mid+Eighth
B9E9 1FFF0000         (        mario.asm):00221                     .dw     Voice1+XX,Off+None
B9ED 2FFF0000         (        mario.asm):00222                     .dw     Voice2+XX,Off+None
B9F1 4FFF0002         (        mario.asm):00223                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00224                 
                      (        mario.asm):00225                     ; 7:4   Voice+Note,Vol+Dur
B9F5 10A00700         (        mario.asm):00226                     .dw     Voice1+F5,Mid+None
B9F9 20BE0710         (        mario.asm):00227                     .dw     Voice2+D5,Mid+Eighth
B9FD 1FFF0000         (        mario.asm):00228                     .dw     Voice1+XX,Off+None
BA01 2FFF0002         (        mario.asm):00229                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00230                 
                      (        mario.asm):00231                     ; 7:5   Voice+Note,Vol+Dur
BA05 10B40700         (        mario.asm):00232                     .dw     Voice1+Ds5,Mid+None
BA09 20E20710         (        mario.asm):00233                     .dw     Voice2+B4,Mid+Eighth
BA0D 1FFF0000         (        mario.asm):00234                     .dw     Voice1+XX,Off+None
BA11 2FFF0002         (        mario.asm):00235                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00236                 
                      (        mario.asm):00237                     ; 7:6   Voice+Note,Vol+Dur
BA15 41AC0710         (        mario.asm):00238                     .dw     Voice4+C4,Mid+Eighth
BA19 1FFF0000         (        mario.asm):00239                     .dw     Voice1+XX,Off+None
BA1D 2FFF0000         (        mario.asm):00240                     .dw     Voice2+XX,Off+None
BA21 4FFF0002         (        mario.asm):00241                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00242                 
                      (        mario.asm):00243                     ; 7:7   Voice+Note,Vol+Dur
BA25 10AA0700         (        mario.asm):00244                     .dw     Voice1+E5,Mid+None
BA29 20D60710         (        mario.asm):00245                     .dw     Voice2+C5,Mid+Eighth
BA2D 1FFF0000         (        mario.asm):00246                     .dw     Voice1+XX,Off+None
BA31 2FFF0000         (        mario.asm):00247                     .dw     Voice2+XX,Off+None
BA35 4FFF0002         (        mario.asm):00248                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00249                 
                      (        mario.asm):00250                     ; 8:1   Voice+Note,Vol+Dur
BA39 42810710         (        mario.asm):00251                     .dw     Voice4+F3,Mid+Eighth
                      (        mario.asm):00252                 
                      (        mario.asm):00253                     ; 8:2   Voice+Note,Vol+Dur
BA3D 110D0700         (        mario.asm):00254                     .dw     Voice1+Gs4,Mid+None
BA41 21530710         (        mario.asm):00255                     .dw     Voice2+E4,Mid+Eighth
BA45 1FFF0000         (        mario.asm):00256                     .dw     Voice1+XX,Off+None
BA49 2FFF0000         (        mario.asm):00257                     .dw     Voice2+XX,Off+None
BA4D 4FFF0002         (        mario.asm):00258                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00259                 
                      (        mario.asm):00260                     ; 8:3   Voice+Note,Vol+Dur
BA51 10FE0700         (        mario.asm):00261                     .dw     Voice1+A4,Mid+None
BA55 21400710         (        mario.asm):00262                     .dw     Voice2+F4,Mid+Eighth
BA59 1FFF0000         (        mario.asm):00263                     .dw     Voice1+XX,Off+None
BA5D 2FFF0000         (        mario.asm):00264                     .dw     Voice2+XX,Off+None
BA61 4FFF0002         (        mario.asm):00265                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00266                     
                      (        mario.asm):00267                     ; 8:4   Voice+Note,Vol+Dur
BA65 10D60700         (        mario.asm):00268                     .dw     Voice1+C5,Mid+None
BA69 211D0700         (        mario.asm):00269                     .dw     Voice2+G4,Mid+None
BA6D 41AC0710         (        mario.asm):00270                     .dw     Voice4+C4,Mid+Eighth
BA71 1FFF0000         (        mario.asm):00271                     .dw     Voice1+XX,Off+None
BA75 2FFF0000         (        mario.asm):00272                     .dw     Voice2+XX,Off+None
BA79 4FFF0002         (        mario.asm):00273                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00274                 
                      (        mario.asm):00275                     ; 8:5   Voice+Note,Vol+Dur
BA7D 41AC0710         (        mario.asm):00276                     .dw     Voice4+C4,Mid+Eighth
BA81 4FFF0002         (        mario.asm):00277                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00278                 
                      (        mario.asm):00279                     ; 8:6   Voice+Note,Vol+Dur
BA85 10FE0700         (        mario.asm):00280                     .dw     Voice1+A4,Mid+None
BA89 21AC0710         (        mario.asm):00281                     .dw     Voice2+C4,Mid+Eighth
BA8D 1FFF0000         (        mario.asm):00282                     .dw     Voice1+XX,Off+None
BA91 2FFF0000         (        mario.asm):00283                     .dw     Voice2+XX,Off+None
BA95 4FFF0002         (        mario.asm):00284                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00285                     
                      (        mario.asm):00286                     ; 8:7   Voice+Note,Vol+Dur
BA99 10D60700         (        mario.asm):00287                     .dw     Voice1+C5,Mid+None
BA9D 21530700         (        mario.asm):00288                     .dw     Voice2+E4,Mid+None
BAA1 42810710         (        mario.asm):00289                     .dw     Voice4+F3,Mid+Eighth
BAA5 1FFF0000         (        mario.asm):00290                     .dw     Voice1+XX,Off+None
BAA9 2FFF0002         (        mario.asm):00291                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00292                     
                      (        mario.asm):00293                     ; 8:8   Voice+Note,Vol+Dur
BAAD 10BE0700         (        mario.asm):00294                     .dw     Voice1+D5,Mid+None
BAB1 21400710         (        mario.asm):00295                     .dw     Voice2+F4,Mid+Eighth
BAB5 1FFF0000         (        mario.asm):00296                     .dw     Voice1+XX,Off+None
BAB9 2FFF0000         (        mario.asm):00297                     .dw     Voice2+XX,Off+None
BABD 4FFF0002         (        mario.asm):00298                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00299                 
                      (        mario.asm):00300                     ; 9:1   Voice+Note,Vol+Dur
BAC1 43570720         (        mario.asm):00301                     .dw     Voice4+C3,Mid+Quarter
BAC5 4FFF0002         (        mario.asm):00302                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00303                 
                      (        mario.asm):00304                     ; 9:2   Voice+Note,Vol+Dur
BAC9 108F0700         (        mario.asm):00305                     .dw     Voice1+G5,Mid+None
BACD 20AA0710         (        mario.asm):00306                     .dw     Voice2+E5,Mid+Eighth
BAD1 1FFF0000         (        mario.asm):00307                     .dw     Voice1+XX,Off+None
BAD5 2FFF0002         (        mario.asm):00308                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00309                     
                      (        mario.asm):00310                     ; 9:3   Voice+Note,Vol+Dur
BAD9 10970700         (        mario.asm):00311                     .dw     Voice1+Fs5,Mid+None
BADD 20B40700         (        mario.asm):00312                     .dw     Voice2+Ds5,Mid+None
BAE1 423B0710         (        mario.asm):00313                     .dw     Voice4+G3,Mid+Eighth
BAE5 1FFF0000         (        mario.asm):00314                     .dw     Voice1+XX,Off+None
BAE9 2FFF0000         (        mario.asm):00315                     .dw     Voice2+XX,Off+None
BAED 4FFF0002         (        mario.asm):00316                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00317                 
                      (        mario.asm):00318                     ; 9:4   Voice+Note,Vol+Dur
BAF1 10A00700         (        mario.asm):00319                     .dw     Voice1+F5,Mid+None
BAF5 20BE0710         (        mario.asm):00320                     .dw     Voice2+D5,Mid+Eighth
BAF9 1FFF0000         (        mario.asm):00321                     .dw     Voice1+XX,Off+None
BAFD 2FFF0002         (        mario.asm):00322                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00323                 
                      (        mario.asm):00324                     ; 9:5   Voice+Note,Vol+Dur
BB01 10B40700         (        mario.asm):00325                     .dw     Voice1+Ds5,Mid+None
BB05 20E20710         (        mario.asm):00326                     .dw     Voice2+B4,Mid+Eighth
BB09 1FFF0000         (        mario.asm):00327                     .dw     Voice1+XX,Off+None
BB0D 2FFF0002         (        mario.asm):00328                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00329                 
                      (        mario.asm):00330                     ; 9:6   Voice+Note,Vol+Dur
BB11 423B0710         (        mario.asm):00331                     .dw     Voice4+G3,Mid+Eighth
BB15 4FFF0002         (        mario.asm):00332                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00333                     
                      (        mario.asm):00334                     ; 9:7   Voice+Note,Vol+Dur
BB19 10AA0700         (        mario.asm):00335                     .dw     Voice1+E5,Mid+None
BB1D 20D60700         (        mario.asm):00336                     .dw     Voice2+C5,Mid+None
BB21 41AC0710         (        mario.asm):00337                     .dw     Voice4+C4,Mid+Eighth
BB25 1FFF0000         (        mario.asm):00338                     .dw     Voice1+XX,Off+None
BB29 2FFF0000         (        mario.asm):00339                     .dw     Voice2+XX,Off+None
BB2D 4FFF0010         (        mario.asm):00340                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00341                 
                      (        mario.asm):00342                     ; 10:1  Voice+Note,Vol+Dur
BB31 106B0700         (        mario.asm):00343                     .dw     Voice1+C6,Mid+None
BB35 208F0700         (        mario.asm):00344                     .dw     Voice2+G5,Mid+None
BB39 40A00720         (        mario.asm):00345                     .dw     Voice4+F5,Mid+Quarter
BB3D 1FFF0000         (        mario.asm):00346                     .dw     Voice1+XX,Off+None
BB41 2FFF0000         (        mario.asm):00347                     .dw     Voice2+XX,Off+None
BB45 4FFF0002         (        mario.asm):00348                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00349                     
                      (        mario.asm):00350                     ; 10:2  Voice+Note,Vol+Dur
BB49 106B0700         (        mario.asm):00351                     .dw     Voice1+C6,Mid+None
BB4D 208F0700         (        mario.asm):00352                     .dw     Voice2+G5,Mid+None
BB51 30A00710         (        mario.asm):00353                     .dw     Voice3+F5,Mid+Eighth
BB55 1FFF0000         (        mario.asm):00354                     .dw     Voice1+XX,Off+None
BB59 2FFF0000         (        mario.asm):00355                     .dw     Voice2+XX,Off+None
BB5D 3FFF0002         (        mario.asm):00356                     .dw     Voice3+XX,Off+Pause
                      (        mario.asm):00357                     
                      (        mario.asm):00358                     ; 10:3  Voice+Note,Vol+Dur
BB61 106B0700         (        mario.asm):00359                     .dw     Voice1+C6,Mid+None
BB65 208F0700         (        mario.asm):00360                     .dw     Voice2+G5,Mid+None
BB69 40A00720         (        mario.asm):00361                     .dw     Voice4+F5,Mid+Quarter
BB6D 1FFF0000         (        mario.asm):00362                     .dw     Voice1+XX,Off+None
BB71 2FFF0000         (        mario.asm):00363                     .dw     Voice2+XX,Off+None
BB75 4FFF0002         (        mario.asm):00364                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00365                     
                      (        mario.asm):00366                     ; 10:4  Voice+Note,Vol+Dur
BB79 423B0720         (        mario.asm):00367                     .dw     Voice4+G3,Mid+Quarter
BB7D 4FFF0002         (        mario.asm):00368                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00369                 
                      (        mario.asm):00370                     ; 11:1  Voice+Note,Vol+Dur
BB81 43570720         (        mario.asm):00371                     .dw     Voice4+C3,Mid+Quarter
BB85 4FFF0002         (        mario.asm):00372                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00373                     
                      (        mario.asm):00374                     ; 11:2  Voice+Note,Vol+Dur
BB89 108F0700         (        mario.asm):00375                     .dw     Voice1+G5,Mid+None
BB8D 20AA0710         (        mario.asm):00376                     .dw     Voice2+E5,Mid+Eighth
BB91 1FFF0000         (        mario.asm):00377                     .dw     Voice1+XX,Off+None
BB95 2FFF0002         (        mario.asm):00378                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00379                     
                      (        mario.asm):00380                     ; 11:3  Voice+Note,Vol+Dur
BB99 10970700         (        mario.asm):00381                     .dw     Voice1+Fs5,Mid+None
BB9D 20B40700         (        mario.asm):00382                     .dw     Voice2+Ds5,Mid+None
BBA1 423B0710         (        mario.asm):00383                     .dw     Voice4+G3,Mid+Eighth
BBA5 1FFF0000         (        mario.asm):00384                     .dw     Voice1+XX,Off+None
BBA9 2FFF0000         (        mario.asm):00385                     .dw     Voice2+XX,Off+None
BBAD 4FFF0002         (        mario.asm):00386                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00387                 
                      (        mario.asm):00388                     ; 11:4  Voice+Note,Vol+Dur
BBB1 10A00700         (        mario.asm):00389                     .dw     Voice1+F5,Mid+None
BBB5 20BE0710         (        mario.asm):00390                     .dw     Voice2+D5,Mid+Eighth
BBB9 1FFF0000         (        mario.asm):00391                     .dw     Voice1+XX,Off+None
BBBD 2FFF0002         (        mario.asm):00392                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00393                 
                      (        mario.asm):00394                     ; 11:5  Voice+Note,Vol+Dur
BBC1 10B40700         (        mario.asm):00395                     .dw     Voice1+Ds5,Mid+None
BBC5 20E20710         (        mario.asm):00396                     .dw     Voice2+B4,Mid+Eighth
BBC9 1FFF0000         (        mario.asm):00397                     .dw     Voice1+XX,Off+None
BBCD 2FFF0002         (        mario.asm):00398                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00399                 
                      (        mario.asm):00400                     ; 11:6  Voice+Note,Vol+Dur
BBD1 41AC0710         (        mario.asm):00401                     .dw     Voice4+C4,Mid+Eighth
                      (        mario.asm):00402                 
                      (        mario.asm):00403                     ; 11:7  Voice+Note,Vol+Dur
BBD5 10AA0700         (        mario.asm):00404                     .dw     Voice1+E5,Mid+None
BBD9 20D60710         (        mario.asm):00405                     .dw     Voice2+C5,Mid+Eighth
BBDD 1FFF0000         (        mario.asm):00406                     .dw     Voice1+XX,Off+None
BBE1 2FFF0000         (        mario.asm):00407                     .dw     Voice2+XX,Off+None
BBE5 4FFF0002         (        mario.asm):00408                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00409                 
                      (        mario.asm):00410                     ; 12:1  Voice+Note,Vol+Dur
BBE9 42810710         (        mario.asm):00411                     .dw     Voice4+F3,Mid+Eighth
                      (        mario.asm):00412                 
                      (        mario.asm):00413                     ; 12:2  Voice+Note,Vol+Dur
BBED 110D0700         (        mario.asm):00414                     .dw     Voice1+Gs4,Mid+None
BBF1 21530710         (        mario.asm):00415                     .dw     Voice2+E4,Mid+Eighth
BBF5 1FFF0000         (        mario.asm):00416                     .dw     Voice1+XX,Off+None
BBF9 2FFF0000         (        mario.asm):00417                     .dw     Voice2+XX,Off+None
BBFD 4FFF0002         (        mario.asm):00418                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00419                 
                      (        mario.asm):00420                     ; 12:3  Voice+Note,Vol+Dur
BC01 10FE0700         (        mario.asm):00421                     .dw     Voice1+A4,Mid+None
BC05 21400710         (        mario.asm):00422                     .dw     Voice2+F4,Mid+Eighth
BC09 1FFF0000         (        mario.asm):00423                     .dw     Voice1+XX,Off+None
BC0D 2FFF0000         (        mario.asm):00424                     .dw     Voice2+XX,Off+None
BC11 4FFF0002         (        mario.asm):00425                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00426                     
                      (        mario.asm):00427                     ; 12:4  Voice+Note,Vol+Dur
BC15 10D60700         (        mario.asm):00428                     .dw     Voice1+C5,Mid+None
BC19 211D0700         (        mario.asm):00429                     .dw     Voice2+G4,Mid+None
BC1D 41AC0710         (        mario.asm):00430                     .dw     Voice4+C4,Mid+Eighth
BC21 1FFF0000         (        mario.asm):00431                     .dw     Voice1+XX,Off+None
BC25 2FFF0000         (        mario.asm):00432                     .dw     Voice2+XX,Off+None
BC29 4FFF0002         (        mario.asm):00433                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00434                 
                      (        mario.asm):00435                     ; 12:5  Voice+Note,Vol+Dur
BC2D 41AC0710         (        mario.asm):00436                     .dw     Voice4+C4,Mid+Eighth
                      (        mario.asm):00437                 
                      (        mario.asm):00438                     ; 12:6  Voice+Note,Vol+Dur
BC31 10FE0700         (        mario.asm):00439                     .dw     Voice1+A4,Mid+None
BC35 21AC0710         (        mario.asm):00440                     .dw     Voice2+C4,Mid+Eighth
BC39 1FFF0000         (        mario.asm):00441                     .dw     Voice1+XX,Off+None
BC3D 2FFF0000         (        mario.asm):00442                     .dw     Voice2+XX,Off+None
BC41 4FFF0002         (        mario.asm):00443                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00444                     
                      (        mario.asm):00445                     ; 12:7  Voice+Note,Vol+Dur
BC45 10D60700         (        mario.asm):00446                     .dw     Voice1+C5,Mid+None
BC49 21530700         (        mario.asm):00447                     .dw     Voice2+E4,Mid+None
BC4D 42810710         (        mario.asm):00448                     .dw     Voice4+F3,Mid+Eighth
BC51 1FFF0000         (        mario.asm):00449                     .dw     Voice1+XX,Off+None
BC55 2FFF0002         (        mario.asm):00450                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00451                     
                      (        mario.asm):00452                     ; 12:8  Voice+Note,Vol+Dur
BC59 10BE0700         (        mario.asm):00453                     .dw     Voice1+D5,Mid+None
BC5D 21400710         (        mario.asm):00454                     .dw     Voice2+F4,Mid+Eighth
BC61 1FFF0000         (        mario.asm):00455                     .dw     Voice1+XX,Off+None
BC65 2FFF0000         (        mario.asm):00456                     .dw     Voice2+XX,Off+None
BC69 4FFF0002         (        mario.asm):00457                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00458                 
                      (        mario.asm):00459                     ; 13:1  Voice+Note,Vol+Dur
BC6D 43570720         (        mario.asm):00460                     .dw     Voice4+C3,Mid+Quarter
BC71 4FFF0002         (        mario.asm):00461                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00462                 
                      (        mario.asm):00463                     ; 13:2  Voice+Note,Vol+Dur
BC75 10B40700         (        mario.asm):00464                     .dw     Voice1+Ds5,Mid+None
BC79 210D0700         (        mario.asm):00465                     .dw     Voice2+Gs4,Mid+None
BC7D 421B0720         (        mario.asm):00466                     .dw     Voice4+Gs3,Mid+Quarter
BC81 1FFF0000         (        mario.asm):00467                     .dw     Voice1+XX,Off+None
BC85 2FFF0000         (        mario.asm):00468                     .dw     Voice2+XX,Off+None
BC89 4FFF0010         (        mario.asm):00469                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00470                     
                      (        mario.asm):00471                     ; 13:3  Voice+Note,Vol+Dur
BC8D 10BE0700         (        mario.asm):00472                     .dw     Voice1+D5,Mid+None
BC91 21400700         (        mario.asm):00473                     .dw     Voice2+F4,Mid+None
BC95 41E00720         (        mario.asm):00474                     .dw     Voice4+As3,Mid+Quarter
BC99 1FFF0000         (        mario.asm):00475                     .dw     Voice1+XX,Off+None
BC9D 2FFF0000         (        mario.asm):00476                     .dw     Voice2+XX,Off+None
BCA1 4FFF0010         (        mario.asm):00477                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00478                     
                      (        mario.asm):00479                     ; 14:1  Voice+Note,Vol+Dur
BCA5 10D60700         (        mario.asm):00480                     .dw     Voice1+C5,Mid+None
BCA9 21530700         (        mario.asm):00481                     .dw     Voice2+E4,Mid+None
BCAD 41AC0720         (        mario.asm):00482                     .dw     Voice4+C4,Mid+Quarter
BCB1 1FFF0000         (        mario.asm):00483                     .dw     Voice1+XX,Off+None
BCB5 2FFF0000         (        mario.asm):00484                     .dw     Voice2+XX,Off+None
BCB9 4FFF0010         (        mario.asm):00485                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00486                     
                      (        mario.asm):00487                     ; 14:2  Voice+Note,Vol+Dur
BCBD 423B0710         (        mario.asm):00488                     .dw     Voice4+G3,Mid+Eighth
BCC1 4FFF0002         (        mario.asm):00489                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00490                     
                      (        mario.asm):00491                     ; 14:3  Voice+Note,Vol+Dur
BCC5 423B0720         (        mario.asm):00492                     .dw     Voice4+G3,Mid+Quarter
BCC9 4FFF0002         (        mario.asm):00493                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00494                     
                      (        mario.asm):00495                     ; 14:4  Voice+Note,Vol+Dur
BCCD 43570720         (        mario.asm):00496                     .dw     Voice4+C3,Mid+Quarter
BCD1 4FFF0002         (        mario.asm):00497                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00498                     
                      (        mario.asm):00499                     ; EOT
BCD5 00000000         (        mario.asm):00500                     .dw     $0000,$0000
                      (        mario.asm):00501                 
                      (        mario.asm):00502                 ; ----------------------------------------------------------------------------------------------------------------------
                      (        mario.asm):00503                     
BCD9                  (        mario.asm):00504                 mario4:
                      (        mario.asm):00505                     ; 15:1  Voice+Note,Vol+Dur
BCD9 10D60700         (        mario.asm):00506                     .dw     Voice1+C5,Mid+None
BCDD 210D0700         (        mario.asm):00507                     .dw     Voice2+Gs4,Mid+None
BCE1 44350710         (        mario.asm):00508                     .dw     Voice4+Gs2,Mid+Eighth
BCE5 1FFF0000         (        mario.asm):00509                     .dw     Voice1+XX,Off+None
BCE9 2FFF0002         (        mario.asm):00510                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00511                     
                      (        mario.asm):00512                     ; 15:2  Voice+Note,Vol+Dur
BCED 10D60700         (        mario.asm):00513                     .dw     Voice1+C5,Mid+None
BCF1 210D0710         (        mario.asm):00514                     .dw     Voice2+Gs4,Mid+Eighth
BCF5 1FFF0000         (        mario.asm):00515                     .dw     Voice1+XX,Off+None
BCF9 2FFF0000         (        mario.asm):00516                     .dw     Voice2+XX,Off+None
BCFD 4FFF0010         (        mario.asm):00517                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00518                     
                      (        mario.asm):00519                     ; 15:3  Voice+Note,Vol+Dur
BD01 10D60700         (        mario.asm):00520                     .dw     Voice1+C5,Mid+None
BD05 210D0700         (        mario.asm):00521                     .dw     Voice2+Gs4,Mid+None
BD09 42CF0710         (        mario.asm):00522                     .dw     Voice4+Ds3,Mid+Eighth
BD0D 1FFF0000         (        mario.asm):00523                     .dw     Voice1+XX,Off+None
BD11 2FFF0000         (        mario.asm):00524                     .dw     Voice2+XX,Off+None
BD15 4FFF0010         (        mario.asm):00525                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00526                     
                      (        mario.asm):00527                     ; 15:4  Voice+Note,Vol+Dur
BD19 10D60700         (        mario.asm):00528                     .dw     Voice1+C5,Mid+None
BD1D 210D0710         (        mario.asm):00529                     .dw     Voice2+Gs4,Mid+Eighth
BD21 1FFF0000         (        mario.asm):00530                     .dw     Voice1+XX,Off+None
BD25 2FFF0002         (        mario.asm):00531                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00532                     
                      (        mario.asm):00533                     ; 15:5  Voice+Note,Vol+Dur
BD29 10BE0700         (        mario.asm):00534                     .dw     Voice1+D5,Mid+None
BD2D 20F00700         (        mario.asm):00535                     .dw     Voice2+As4,Mid+None
BD31 421B0720         (        mario.asm):00536                     .dw     Voice4+Gs3,Mid+Quarter
BD35 1FFF0000         (        mario.asm):00537                     .dw     Voice1+XX,Off+None
BD39 2FFF0000         (        mario.asm):00538                     .dw     Voice2+XX,Off+None
BD3D 4FFF0002         (        mario.asm):00539                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00540                     
                      (        mario.asm):00541                     ; 16:1  Voice+Note,Vol+Dur
BD41 10AA0700         (        mario.asm):00542                     .dw     Voice1+E5,Mid+None
BD45 211D0700         (        mario.asm):00543                     .dw     Voice2+G4,Mid+None
BD49 423B0710         (        mario.asm):00544                     .dw     Voice4+G3,Mid+Eighth
BD4D 1FFF0000         (        mario.asm):00545                     .dw     Voice1+XX,Off+None
BD51 2FFF0002         (        mario.asm):00546                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00547                     
                      (        mario.asm):00548                     ; 16:2  Voice+Note,Vol+Dur
BD55 10D60700         (        mario.asm):00549                     .dw     Voice1+C5,Mid+None
BD59 21530710         (        mario.asm):00550                     .dw     Voice2+E4,Mid+Eighth
BD5D 1FFF0000         (        mario.asm):00551                     .dw     Voice1+XX,Off+None
BD61 2FFF0000         (        mario.asm):00552                     .dw     Voice2+XX,Off+None
BD65 4FFF0010         (        mario.asm):00553                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00554                     
                      (        mario.asm):00555                     ; 16:3  Voice+Note,Vol+Dur
BD69 10FE0700         (        mario.asm):00556                     .dw     Voice1+A4,Mid+None
BD6D 21530700         (        mario.asm):00557                     .dw     Voice2+E4,Mid+None
BD71 43570710         (        mario.asm):00558                     .dw     Voice4+C3,Mid+Eighth
BD75 1FFF0000         (        mario.asm):00559                     .dw     Voice1+XX,Off+None
BD79 2FFF0000         (        mario.asm):00560                     .dw     Voice2+XX,Off+None
BD7D 4FFF0002         (        mario.asm):00561                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00562                     
                      (        mario.asm):00563                     ; 16:4  Voice+Note,Vol+Dur
BD81 111D0700         (        mario.asm):00564                     .dw     Voice1+G4,Mid+None
BD85 21AC0720         (        mario.asm):00565                     .dw     Voice2+C4,Mid+Quarter
                      (        mario.asm):00566                     
                      (        mario.asm):00567                     ; 16:5  Voice+Note,Vol+Dur
BD89 44750720         (        mario.asm):00568                     .dw     Voice4+G2,Mid+Quarter
BD8D 1FFF0000         (        mario.asm):00569                     .dw     Voice1+XX,Off+None
BD91 2FFF0000         (        mario.asm):00570                     .dw     Voice2+XX,Off+None
BD95 4FFF0002         (        mario.asm):00571                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00572                     
                      (        mario.asm):00573                     ; 17:1  Voice+Note,Vol+Dur
BD99 10D60700         (        mario.asm):00574                     .dw     Voice1+C5,Mid+None
BD9D 210D0700         (        mario.asm):00575                     .dw     Voice2+Gs4,Mid+None
BDA1 44350710         (        mario.asm):00576                     .dw     Voice4+Gs2,Mid+Eighth
BDA5 1FFF0000         (        mario.asm):00577                     .dw     Voice1+XX,Off+None
BDA9 2FFF0002         (        mario.asm):00578                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00579                     
                      (        mario.asm):00580                     ; 17:2  Voice+Note,Vol+Dur
BDAD 10D60700         (        mario.asm):00581                     .dw     Voice1+C5,Mid+None
BDB1 210D0710         (        mario.asm):00582                     .dw     Voice2+Gs4,Mid+Eighth
BDB5 1FFF0000         (        mario.asm):00583                     .dw     Voice1+XX,Off+None
BDB9 2FFF0000         (        mario.asm):00584                     .dw     Voice2+XX,Off+None
BDBD 4FFF0010         (        mario.asm):00585                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00586                 
                      (        mario.asm):00587                     ; 17:3  Voice+Note,Vol+Dur
BDC1 10D60700         (        mario.asm):00588                     .dw     Voice1+C5,Mid+None
BDC5 210D0700         (        mario.asm):00589                     .dw     Voice2+Gs4,Mid+None
BDC9 42CF0710         (        mario.asm):00590                     .dw     Voice4+Ds3,Mid+Eighth
BDCD 1FFF0000         (        mario.asm):00591                     .dw     Voice1+XX,Off+None
BDD1 2FFF0000         (        mario.asm):00592                     .dw     Voice2+XX,Off+None
BDD5 4FFF0010         (        mario.asm):00593                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00594                 
                      (        mario.asm):00595                     ; 17:4  Voice+Note,Vol+Dur
BDD9 10D60700         (        mario.asm):00596                     .dw     Voice1+C5,Mid+None
BDDD 210D0710         (        mario.asm):00597                     .dw     Voice2+Gs4,Mid+Eighth
BDE1 1FFF0000         (        mario.asm):00598                     .dw     Voice1+XX,Off+None
BDE5 2FFF0002         (        mario.asm):00599                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00600                 
                      (        mario.asm):00601                     ; 17:5  Voice+Note,Vol+Dur
BDE9 10BE0700         (        mario.asm):00602                     .dw     Voice1+D5,Mid+None
BDED 20F00700         (        mario.asm):00603                     .dw     Voice2+As4,Mid+None
BDF1 410D0710         (        mario.asm):00604                     .dw     Voice4+Gs4,Mid+Eighth
BDF5 1FFF0000         (        mario.asm):00605                     .dw     Voice1+XX,Off+None
BDF9 2FFF0002         (        mario.asm):00606                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00607                 
                      (        mario.asm):00608                     ; 17:6  Voice+Note,Vol+Dur
BDFD 10AA0700         (        mario.asm):00609                     .dw     Voice1+E5,Mid+None
BE01 211D0700         (        mario.asm):00610                     .dw     Voice2+G4,Mid+None
BE05 421B0710         (        mario.asm):00611                     .dw     Voice4+Gs3,Mid+Eighth
BE09 1FFF0000         (        mario.asm):00612                     .dw     Voice1+XX,Off+None
BE0D 2FFF0000         (        mario.asm):00613                     .dw     Voice2+XX,Off+None
BE11 4FFF0002         (        mario.asm):00614                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00615                 
                      (        mario.asm):00616                     ; 18:1  Voice+Note,Vol+Dur
BE15 423B0720         (        mario.asm):00617                     .dw     Voice4+G3,Mid+Quarter
BE19 4FFF0010         (        mario.asm):00618                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00619                 
                      (        mario.asm):00620                     ; 18:2  Voice+Note,Vol+Dur
BE1D 43570710         (        mario.asm):00621                     .dw     Voice4+C3,Mid+Eighth
BE21 4FFF0020         (        mario.asm):00622                     .dw     Voice4+XX,Off+Quarter
                      (        mario.asm):00623                 
                      (        mario.asm):00624                     ; 18:3  Voice+Note,Vol+Dur
BE25 44750720         (        mario.asm):00625                     .dw     Voice4+G2,Mid+Quarter
BE29 4FFF0002         (        mario.asm):00626                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00627                 
                      (        mario.asm):00628                     ; 19:1  Voice+Note,Vol+Dur
BE2D 10D60700         (        mario.asm):00629                     .dw     Voice1+C5,Mid+None
BE31 210D0700         (        mario.asm):00630                     .dw     Voice2+Gs4,Mid+None
BE35 44350710         (        mario.asm):00631                     .dw     Voice4+Gs2,Mid+Eighth
BE39 1FFF0000         (        mario.asm):00632                     .dw     Voice1+XX,Off+None
BE3D 2FFF0002         (        mario.asm):00633                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00634                     
                      (        mario.asm):00635                     ; 19:2  Voice+Note,Vol+Dur
BE41 10D60700         (        mario.asm):00636                     .dw     Voice1+C5,Mid+None
BE45 210D0710         (        mario.asm):00637                     .dw     Voice2+Gs4,Mid+Eighth
BE49 1FFF0000         (        mario.asm):00638                     .dw     Voice1+XX,Off+None
BE4D 2FFF0000         (        mario.asm):00639                     .dw     Voice2+XX,Off+None
BE51 4FFF0010         (        mario.asm):00640                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00641                     
                      (        mario.asm):00642                     ; 19:3  Voice+Note,Vol+Dur
BE55 10D60700         (        mario.asm):00643                     .dw     Voice1+C5,Mid+None
BE59 210D0700         (        mario.asm):00644                     .dw     Voice2+Gs4,Mid+None
BE5D 41680710         (        mario.asm):00645                     .dw     Voice4+Ds4,Mid+Eighth
BE61 1FFF0000         (        mario.asm):00646                     .dw     Voice1+XX,Off+None
BE65 2FFF0000         (        mario.asm):00647                     .dw     Voice2+XX,Off+None
BE69 4FFF0010         (        mario.asm):00648                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00649                     
                      (        mario.asm):00650                     ; 19:4  Voice+Note,Vol+Dur
BE6D 10D60700         (        mario.asm):00651                     .dw     Voice1+C5,Mid+None
BE71 210D0710         (        mario.asm):00652                     .dw     Voice2+Gs4,Mid+Eighth
BE75 1FFF0000         (        mario.asm):00653                     .dw     Voice1+XX,Off+None
BE79 2FFF0002         (        mario.asm):00654                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00655                     
                      (        mario.asm):00656                     ; 19:5  Voice+Note,Vol+Dur
BE7D 10BE0700         (        mario.asm):00657                     .dw     Voice1+D5,Mid+None
BE81 20F00700         (        mario.asm):00658                     .dw     Voice2+As4,Mid+None
BE85 421B0720         (        mario.asm):00659                     .dw     Voice4+Gs3,Mid+Quarter
BE89 1FFF0000         (        mario.asm):00660                     .dw     Voice1+XX,Off+None
BE8D 2FFF0000         (        mario.asm):00661                     .dw     Voice2+XX,Off+None
BE91 4FFF0002         (        mario.asm):00662                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00663                     
                      (        mario.asm):00664                     ; 20:1  Voice+Note,Vol+Dur
BE95 10AA0700         (        mario.asm):00665                     .dw     Voice1+E5,Mid+None
BE99 211D0700         (        mario.asm):00666                     .dw     Voice2+G4,Mid+None
BE9D 423B0710         (        mario.asm):00667                     .dw     Voice4+G3,Mid+Eighth
BEA1 1FFF0000         (        mario.asm):00668                     .dw     Voice1+XX,Off+None
BEA5 2FFF0002         (        mario.asm):00669                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00670                     
                      (        mario.asm):00671                     ; 20:2  Voice+Note,Vol+Dur
BEA9 10D60700         (        mario.asm):00672                     .dw     Voice1+C5,Mid+None
BEAD 21530710         (        mario.asm):00673                     .dw     Voice2+E4,Mid+Eighth
BEB1 1FFF0000         (        mario.asm):00674                     .dw     Voice1+XX,Off+None
BEB5 2FFF0000         (        mario.asm):00675                     .dw     Voice2+XX,Off+None
BEB9 4FFF0010         (        mario.asm):00676                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00677                     
                      (        mario.asm):00678                     ; 20:3  Voice+Note,Vol+Dur
BEBD 10FE0700         (        mario.asm):00679                     .dw     Voice1+A4,Mid+None
BEC1 21530700         (        mario.asm):00680                     .dw     Voice2+E4,Mid+None
BEC5 43570710         (        mario.asm):00681                     .dw     Voice4+C3,Mid+Eighth
BEC9 1FFF0000         (        mario.asm):00682                     .dw     Voice1+XX,Off+None
BECD 2FFF0000         (        mario.asm):00683                     .dw     Voice2+XX,Off+None
BED1 4FFF0002         (        mario.asm):00684                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00685                     
                      (        mario.asm):00686                     ; 20:4  Voice+Note,Vol+Dur
BED5 111D0700         (        mario.asm):00687                     .dw     Voice1+G4,Mid+None
BED9 21AC0720         (        mario.asm):00688                     .dw     Voice2+C4,Mid+Quarter
                      (        mario.asm):00689                     
                      (        mario.asm):00690                     ; 20:5  Voice+Note,Vol+Dur
BEDD 44750720         (        mario.asm):00691                     .dw     Voice4+G2,Mid+Quarter
BEE1 1FFF0000         (        mario.asm):00692                     .dw     Voice1+XX,Off+None
BEE5 2FFF0000         (        mario.asm):00693                     .dw     Voice2+XX,Off+None
BEE9 4FFF0002         (        mario.asm):00694                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00695                     
                      (        mario.asm):00696                     ; 21:1  Voice+Note,Vol+Dur
BEED 10AA0700         (        mario.asm):00697                     .dw     Voice1+E5,Mid+None
BEF1 212E0700         (        mario.asm):00698                     .dw     Voice2+Fs4,Mid+None
BEF5 42FA0710         (        mario.asm):00699                     .dw     Voice4+D3,Mid+Eighth
BEF9 1FFF0000         (        mario.asm):00700                     .dw     Voice1+XX,Off+None
BEFD 2FFF0000         (        mario.asm):00701                     .dw     Voice2+XX,Off+None
BF01 4FFF0002         (        mario.asm):00702                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00703                 
                      (        mario.asm):00704                     ; 21:2  Voice+Note,Vol+Dur
BF05 10AA0700         (        mario.asm):00705                     .dw     Voice1+E5,Mid+None
BF09 212E0700         (        mario.asm):00706                     .dw     Voice2+Fs4,Mid+None
BF0D 42FA0710         (        mario.asm):00707                     .dw     Voice4+D3,Mid+Eighth
BF11 1FFF0000         (        mario.asm):00708                     .dw     Voice1+XX,Off+None
BF15 2FFF0000         (        mario.asm):00709                     .dw     Voice2+XX,Off+None
BF19 4FFF0010         (        mario.asm):00710                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00711                     
                      (        mario.asm):00712                     ; 21:3  Voice+Note,Vol+Dur
BF1D 10AA0700         (        mario.asm):00713                     .dw     Voice1+E5,Mid+None
BF21 212E0700         (        mario.asm):00714                     .dw     Voice2+Fs4,Mid+None
BF25 42FA0710         (        mario.asm):00715                     .dw     Voice4+D3,Mid+Eighth
BF29 1FFF0000         (        mario.asm):00716                     .dw     Voice1+XX,Off+None
BF2D 2FFF0000         (        mario.asm):00717                     .dw     Voice2+XX,Off+None
BF31 4FFF0010         (        mario.asm):00718                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00719                 
                      (        mario.asm):00720                     ; 21:4  Voice+Note,Vol+Dur
BF35 10D60700         (        mario.asm):00721                     .dw     Voice1+C5,Mid+None
BF39 212E0700         (        mario.asm):00722                     .dw     Voice2+Fs4,Mid+None
BF3D 42FA0710         (        mario.asm):00723                     .dw     Voice4+D3,Mid+Eighth
BF41 1FFF0000         (        mario.asm):00724                     .dw     Voice1+XX,Off+None
BF45 2FFF0000         (        mario.asm):00725                     .dw     Voice2+XX,Off+None
BF49 4FFF0002         (        mario.asm):00726                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00727                 
                      (        mario.asm):00728                     ; 21:5  Voice+Note,Vol+Dur
BF4D 10AA0700         (        mario.asm):00729                     .dw     Voice1+E5,Mid+None
BF51 212E0700         (        mario.asm):00730                     .dw     Voice2+Fs4,Mid+None
BF55 42FA0710         (        mario.asm):00731                     .dw     Voice4+D3,Mid+Eighth
BF59 1FFF0000         (        mario.asm):00732                     .dw     Voice1+XX,Off+None
BF5D 2FFF0000         (        mario.asm):00733                     .dw     Voice2+XX,Off+None
BF61 4FFF0002         (        mario.asm):00734                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00735                 
                      (        mario.asm):00736                     ; 22:1  Voice+Note,Vol+Dur
BF65 108F0700         (        mario.asm):00737                     .dw     Voice1+G5,Mid+None
BF69 20E20700         (        mario.asm):00738                     .dw     Voice2+B4,Mid+None
BF6D 311D0700         (        mario.asm):00739                     .dw     Voice3+G4,Mid+None
BF71 423B0720         (        mario.asm):00740                     .dw     Voice4+G3,Mid+Quarter
BF75 1FFF0000         (        mario.asm):00741                     .dw     Voice1+XX,Off+None
BF79 2FFF0000         (        mario.asm):00742                     .dw     Voice2+XX,Off+None
BF7D 3FFF0000         (        mario.asm):00743                     .dw     Voice3+XX,Off+None
BF81 4FFF0020         (        mario.asm):00744                     .dw     Voice4+XX,Off+Quarter
                      (        mario.asm):00745                 
                      (        mario.asm):00746                     ; 22:2  Voice+Note,Vol+Dur
BF85 111D0700         (        mario.asm):00747                     .dw     Voice1+G4,Mid+None
BF89 44750720         (        mario.asm):00748                     .dw     Voice4+G2,Mid+Quarter
BF8D 1FFF0000         (        mario.asm):00749                     .dw     Voice1+XX,Off+None
BF91 4FFF0020         (        mario.asm):00750                     .dw     Voice4+XX,Off+Quarter
                      (        mario.asm):00751                 
                      (        mario.asm):00752                     ; EOT
BF95 00000000         (        mario.asm):00753                     .dw     $0000,$0000
                      (        mario.asm):00754                     
                      (        mario.asm):00755                 ; ----------------------------------------------------------------------------------------------------------------------
                      (        mario.asm):00756                 
BF99                  (        mario.asm):00757                 mario6:
                      (        mario.asm):00758                     ; 27:1  Voice+Note,Vol+Dur
BF99 10AA0700         (        mario.asm):00759                     .dw     Voice1+E5,Mid+None
BF9D 20D60700         (        mario.asm):00760                     .dw     Voice2+C5,Mid+None
BFA1 43570710         (        mario.asm):00761                     .dw     Voice4+C3,Mid+Eighth
BFA5 1FFF0000         (        mario.asm):00762                     .dw     Voice1+XX,Off+None
BFA9 2FFF0002         (        mario.asm):00763                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00764                 
                      (        mario.asm):00765                     ; 27:2  Voice+Note,Vol+Dur
BFAD 10D60700         (        mario.asm):00766                     .dw     Voice1+C5,Mid+None
BFB1 20FE0710         (        mario.asm):00767                     .dw     Voice2+A4,Mid+Eighth
BFB5 4FFF0002         (        mario.asm):00768                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00769                 
                      (        mario.asm):00770                     ; 27:3  Voice+Note,Vol+Dur
BFB9 10D60700         (        mario.asm):00771                     .dw     Voice1+C5,Mid+None
BFBD 20FE0710         (        mario.asm):00772                     .dw     Voice2+A4,Mid+Eighth
BFC1 4FFF0002         (        mario.asm):00773                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00774                 
                      (        mario.asm):00775                     ; 27:4  Voice+Note,Vol+Dur
BFC5 1FFF0000         (        mario.asm):00776                     .dw     Voice1+XX,Off+None
BFC9 2FFF0010         (        mario.asm):00777                     .dw     Voice2+XX,Off+Eighth
                      (        mario.asm):00778                     
                      (        mario.asm):00779                     ; 27:5  Voice+Note,Vol+Dur
BFCD 111D0700         (        mario.asm):00780                     .dw     Voice1+G4,Mid+None
BFD1 21530700         (        mario.asm):00781                     .dw     Voice2+E4,Mid+None
BFD5 425D0710         (        mario.asm):00782                     .dw     Voice4+Fs3,Mid+Eighth
BFD9 1FFF0000         (        mario.asm):00783                     .dw     Voice1+XX,Off+None
BFDD 2FFF0000         (        mario.asm):00784                     .dw     Voice2+XX,Off+None
BFE1 4FFF0002         (        mario.asm):00785                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00786                 
                      (        mario.asm):00787                     ; 27:6  Voice+Note,Vol+Dur
BFE5 423B0720         (        mario.asm):00788                     .dw     Voice4+G3,Mid+Quarter
BFE9 4FFF0002         (        mario.asm):00789                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00790                 
                      (        mario.asm):00791                     ; 27:7  Voice+Note,Vol+Dur
BFED 110D0700         (        mario.asm):00792                     .dw     Voice1+Gs4,Mid+None
BFF1 21530700         (        mario.asm):00793                     .dw     Voice2+E4,Mid+None
BFF5 41AC0720         (        mario.asm):00794                     .dw     Voice4+C4,Mid+Quarter
BFF9 1FFF0000         (        mario.asm):00795                     .dw     Voice1+XX,Off+None
BFFD 2FFF0000         (        mario.asm):00796                     .dw     Voice2+XX,Off+None
C001 4FFF0002         (        mario.asm):00797                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00798                 
                      (        mario.asm):00799                     ; 28:1  Voice+Note,Vol+Dur
C005 10FE0700         (        mario.asm):00800                     .dw     Voice1+A4,Mid+None
C009 21400700         (        mario.asm):00801                     .dw     Voice2+F4,Mid+None
C00D 42810710         (        mario.asm):00802                     .dw     Voice4+F3,Mid+Eighth
C011 1FFF0000         (        mario.asm):00803                     .dw     Voice1+XX,Off+None
C015 2FFF0002         (        mario.asm):00804                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00805                     
                      (        mario.asm):00806                     ; 28:2  Voice+Note,Vol+Dur
C019 10A00700         (        mario.asm):00807                     .dw     Voice1+F5,Mid+None
C01D 20D60710         (        mario.asm):00808                     .dw     Voice2+C5,Mid+Eighth
C021 4FFF0010         (        mario.asm):00809                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):00810                 
                      (        mario.asm):00811                     ; 28:3  Voice+Note,Vol+Dur
C025 10A00700         (        mario.asm):00812                     .dw     Voice1+F5,Mid+None
C029 20D60710         (        mario.asm):00813                     .dw     Voice2+C5,Mid+Eighth
C02D 1FFF0000         (        mario.asm):00814                     .dw     Voice1+XX,Off+None
C031 2FFF0002         (        mario.asm):00815                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00816                     
                      (        mario.asm):00817                     ; 28:4  Voice+Note,Vol+Dur
C035 10FE0700         (        mario.asm):00818                     .dw     Voice1+A4,Mid+None
C039 21400700         (        mario.asm):00819                     .dw     Voice2+F4,Mid+None
C03D 41AC0710         (        mario.asm):00820                     .dw     Voice4+C4,Mid+Eighth
C041 4FFF0002         (        mario.asm):00821                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00822                 
                      (        mario.asm):00823                     ; 28:5  Voice+Note,Vol+Dur
C045 41AC0710         (        mario.asm):00824                     .dw     Voice4+C4,Mid+Eighth
C049 1FFF0000         (        mario.asm):00825                     .dw     Voice1+XX,Off+None
C04D 2FFF0000         (        mario.asm):00826                     .dw     Voice2+XX,Off+None
C051 4FFF0002         (        mario.asm):00827                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00828                     
                      (        mario.asm):00829                     ; 28:6  Voice+Note,Vol+Dur
C055 41400720         (        mario.asm):00830                     .dw     Voice4+F4,Mid+Quarter
C059 4FFF0002         (        mario.asm):00831                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00832                 
                      (        mario.asm):00833                     ; 29:1  Voice+Note,Vol+Dur
C05D 10E20700         (        mario.asm):00834                     .dw     Voice1+B4,Mid+None
C061 211D0700         (        mario.asm):00835                     .dw     Voice2+G4,Mid+None
C065 42FA0718         (        mario.asm):00836                     .dw     Voice4+D3,Mid+Sixth
C069 1FFF0000         (        mario.asm):00837                     .dw     Voice1+XX,Off+None
C06D 2FFF0000         (        mario.asm):00838                     .dw     Voice2+XX,Off+None
C071 4FFF0002         (        mario.asm):00839                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00840                     
                      (        mario.asm):00841                     ; 29:2  Voice+Note,Vol+Dur
C075 107F0700         (        mario.asm):00842                     .dw     Voice1+A5,Mid+None
C079 20A00718         (        mario.asm):00843                     .dw     Voice2+F5,Mid+Sixth
C07D 1FFF0000         (        mario.asm):00844                     .dw     Voice1+XX,Off+None
C081 2FFF0002         (        mario.asm):00845                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00846                     
                      (        mario.asm):00847                     ; 29:3  Voice+Note,Vol+Dur
C085 107F0700         (        mario.asm):00848                     .dw     Voice1+A5,Mid+None
C089 20A00700         (        mario.asm):00849                     .dw     Voice2+F5,Mid+None
C08D 42810718         (        mario.asm):00850                     .dw     Voice4+F3,Mid+Sixth
C091 1FFF0000         (        mario.asm):00851                     .dw     Voice1+XX,Off+None
C095 2FFF0000         (        mario.asm):00852                     .dw     Voice2+XX,Off+None
C099 4FFF0002         (        mario.asm):00853                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00854                     
                      (        mario.asm):00855                     ; 29:4  Voice+Note,Vol+Dur
C09D 10FE0700         (        mario.asm):00856                     .dw     Voice1+A4,Mid+None
C0A1 20A00700         (        mario.asm):00857                     .dw     Voice2+F5,Mid+None
C0A5 423B0718         (        mario.asm):00858                     .dw     Voice4+G3,Mid+Sixth
C0A9 1FFF0000         (        mario.asm):00859                     .dw     Voice1+XX,Off+None
C0AD 2FFF0002         (        mario.asm):00860                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00861                     
                      (        mario.asm):00862                     ; 29:5  Voice+Note,Vol+Dur
C0B1 108F0700         (        mario.asm):00863                     .dw     Voice1+G5,Mid+None
C0B5 20AA0718         (        mario.asm):00864                     .dw     Voice2+E5,Mid+Sixth
C0B9 1FFF0000         (        mario.asm):00865                     .dw     Voice1+XX,Off+None
C0BD 2FFF0000         (        mario.asm):00866                     .dw     Voice2+XX,Off+None
C0C1 4FFF0002         (        mario.asm):00867                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00868                     
                      (        mario.asm):00869                     ; 29:6  Voice+Note,Vol+Dur
C0C5 10A00700         (        mario.asm):00870                     .dw     Voice1+F5,Mid+None
C0C9 20BE0700         (        mario.asm):00871                     .dw     Voice2+D5,Mid+None
C0CD 41C50718         (        mario.asm):00872                     .dw     Voice4+B3,Mid+Sixth
C0D1 1FFF0000         (        mario.asm):00873                     .dw     Voice1+XX,Off+None
C0D5 2FFF0000         (        mario.asm):00874                     .dw     Voice2+XX,Off+None
C0D9 4FFF0002         (        mario.asm):00875                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00876                     
                      (        mario.asm):00877                     ; 30:1  Voice+Note,Vol+Dur
C0DD 10AA0700         (        mario.asm):00878                     .dw     Voice1+E5,Mid+None
C0E1 20D60700         (        mario.asm):00879                     .dw     Voice2+C5,Mid+None
C0E5 42810710         (        mario.asm):00880                     .dw     Voice4+F3,Mid+Eighth
C0E9 1FFF0000         (        mario.asm):00881                     .dw     Voice1+XX,Off+None
C0ED 2FFF0002         (        mario.asm):00882                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00883                     
                      (        mario.asm):00884                     ; 30:2  Voice+Note,Vol+Dur
C0F1 10D60700         (        mario.asm):00885                     .dw     Voice1+C5,Mid+None
C0F5 20FE0710         (        mario.asm):00886                     .dw     Voice2+A4,Mid+Eighth
C0F9 4FFF0002         (        mario.asm):00887                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00888                     
                      (        mario.asm):00889                     ; 30:3  Voice+Note,Vol+Dur
C0FD 42810710         (        mario.asm):00890                     .dw     Voice4+F3,Mid+Eighth
C101 1FFF0000         (        mario.asm):00891                     .dw     Voice1+XX,Off+None
C105 2FFF0000         (        mario.asm):00892                     .dw     Voice2+XX,Off+None
                      (        mario.asm):00893                     
                      (        mario.asm):00894                     ; 30:4  Voice+Note,Vol+Dur
C109 10FE0700         (        mario.asm):00895                     .dw     Voice1+A4,Mid+None
C10D 21400710         (        mario.asm):00896                     .dw     Voice2+F4,Mid+Eighth
C111 1FFF0000         (        mario.asm):00897                     .dw     Voice1+XX,Off+None
C115 2FFF0000         (        mario.asm):00898                     .dw     Voice2+XX,Off+None
C119 4FFF0002         (        mario.asm):00899                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00900                     
                      (        mario.asm):00901                     ; 30:5  Voice+Note,Vol+Dur
C11D 111D0700         (        mario.asm):00902                     .dw     Voice1+G4,Mid+None
C121 21530700         (        mario.asm):00903                     .dw     Voice2+E4,Mid+None
C125 41AC0710         (        mario.asm):00904                     .dw     Voice4+C4,Mid+Eighth
C129 4FFF0002         (        mario.asm):00905                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00906                     
                      (        mario.asm):00907                     ; 30:6  Voice+Note,Vol+Dur
C12D 41AC0710         (        mario.asm):00908                     .dw     Voice4+C4,Mid+Eighth
C131 1FFF0000         (        mario.asm):00909                     .dw     Voice1+XX,Off+None
C135 2FFF0000         (        mario.asm):00910                     .dw     Voice2+XX,Off+None
C139 4FFF0002         (        mario.asm):00911                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00912                     
                      (        mario.asm):00913                     ; 30:7  Voice+Note,Vol+Dur
C13D 42810720         (        mario.asm):00914                     .dw     Voice4+F3,Mid+Quarter
C141 4FFF0002         (        mario.asm):00915                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):00916                     
                      (        mario.asm):00917                     ; 31:1  Voice+Note,Vol+Dur
C145 10AA0700         (        mario.asm):00918                     .dw     Voice1+E5,Mid+None
C149 20D60700         (        mario.asm):00919                     .dw     Voice2+C5,Mid+None
C14D 43570710         (        mario.asm):00920                     .dw     Voice4+C3,Mid+Eighth
C151 1FFF0000         (        mario.asm):00921                     .dw     Voice1+XX,Off+None
C155 2FFF0002         (        mario.asm):00922                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00923                     
                      (        mario.asm):00924                     ; 31:2  Voice+Note,Vol+Dur
C159 10D60700         (        mario.asm):00925                     .dw     Voice1+C5,Mid+None
C15D 20FE0700         (        mario.asm):00926                     .dw     Voice2+A4,Mid+None
C161 4FFF0010         (        mario.asm):00927                     .dw     Voice4+XX,Off+Eighth    
                      (        mario.asm):00928                     
                      (        mario.asm):00929                     ; 31:3  Voice+Note,Vol+Dur
C165 1FFF0000         (        mario.asm):00930                     .dw     Voice1+XX,Off+None
C169 2FFF0010         (        mario.asm):00931                     .dw     Voice2+XX,Off+Eighth
                      (        mario.asm):00932                     
                      (        mario.asm):00933                     ; 31:4  Voice+Note,Vol+Dur
C16D 111D0700         (        mario.asm):00934                     .dw     Voice1+G4,Mid+None
C171 21530700         (        mario.asm):00935                     .dw     Voice2+E4,Mid+None
C175 425D0710         (        mario.asm):00936                     .dw     Voice4+Fs3,Mid+Eighth
C179 1FFF0000         (        mario.asm):00937                     .dw     Voice1+XX,Off+None
C17D 2FFF0000         (        mario.asm):00938                     .dw     Voice2+XX,Off+None
C181 4FFF0002         (        mario.asm):00939                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00940                     
                      (        mario.asm):00941                     ; 31:5  Voice+Note,Vol+Dur
C185 423B0720         (        mario.asm):00942                     .dw     Voice4+G3,Mid+Quarter
C189 4FFF0002         (        mario.asm):00943                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00944                     
                      (        mario.asm):00945                     ; 31:6  Voice+Note,Vol+Dur
C18D 110D0700         (        mario.asm):00946                     .dw     Voice1+Gs4,Mid+None
C191 21530700         (        mario.asm):00947                     .dw     Voice2+E4,Mid+None
C195 41AC0720         (        mario.asm):00948                     .dw     Voice4+C4,Mid+Quarter
C199 1FFF0000         (        mario.asm):00949                     .dw     Voice1+XX,Off+None
C19D 2FFF0000         (        mario.asm):00950                     .dw     Voice2+XX,Off+None
C1A1 4FFF0002         (        mario.asm):00951                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00952                     
                      (        mario.asm):00953                     ; 32:1  Voice+Note,Vol+Dur
C1A5 10FE0700         (        mario.asm):00954                     .dw     Voice1+A4,Mid+None
C1A9 21400700         (        mario.asm):00955                     .dw     Voice2+F4,Mid+None
C1AD 42810710         (        mario.asm):00956                     .dw     Voice4+F3,Mid+Eighth
C1B1 1FFF0000         (        mario.asm):00957                     .dw     Voice1+XX,Off+None
C1B5 2FFF0002         (        mario.asm):00958                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00959                     
                      (        mario.asm):00960                     ; 32:2  Voice+Note,Vol+Dur
C1B9 10A00700         (        mario.asm):00961                     .dw     Voice1+F5,Mid+None
C1BD 20D60710         (        mario.asm):00962                     .dw     Voice2+C5,Mid+Eighth
C1C1 4FFF0002         (        mario.asm):00963                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00964                     
                      (        mario.asm):00965                     ; 32:3  Voice+Note,Vol+Dur
C1C5 42810710         (        mario.asm):00966                     .dw     Voice4+F3,Mid+Eighth
C1C9 1FFF0000         (        mario.asm):00967                     .dw     Voice1+XX,Off+None
C1CD 2FFF0002         (        mario.asm):00968                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):00969                     
                      (        mario.asm):00970                     ; 32:4  Voice+Note,Vol+Dur
C1D1 10A00700         (        mario.asm):00971                     .dw     Voice1+F5,Mid+None
C1D5 20D60710         (        mario.asm):00972                     .dw     Voice2+C5,Mid+Eighth
C1D9 1FFF0000         (        mario.asm):00973                     .dw     Voice1+XX,Off+None
C1DD 2FFF0000         (        mario.asm):00974                     .dw     Voice2+XX,Off+None
C1E1 4FFF0002         (        mario.asm):00975                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00976                     
                      (        mario.asm):00977                     ; 32:5  Voice+Note,Vol+Dur
C1E5 10FE0700         (        mario.asm):00978                     .dw     Voice1+A4,Mid+None
C1E9 21400700         (        mario.asm):00979                     .dw     Voice2+F4,Mid+None
C1ED 41AC0710         (        mario.asm):00980                     .dw     Voice4+C4,Mid+Eighth
C1F1 4FFF0002         (        mario.asm):00981                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00982                     
                      (        mario.asm):00983                     ; 32:6  Voice+Note,Vol+Dur
C1F5 41AC0710         (        mario.asm):00984                     .dw     Voice4+C4,Mid+Eighth
C1F9 1FFF0000         (        mario.asm):00985                     .dw     Voice1+XX,Off+None
C1FD 2FFF0000         (        mario.asm):00986                     .dw     Voice2+XX,Off+None
C201 4FFF0002         (        mario.asm):00987                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00988                     
                      (        mario.asm):00989                     ; 32:7  Voice+Note,Vol+Dur
C205 42810720         (        mario.asm):00990                     .dw     Voice4+F3,Mid+Quarter
C209 4FFF0002         (        mario.asm):00991                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):00992                     
                      (        mario.asm):00993                     ; 33:1  Voice+Note,Vol+Dur
C20D 10E20700         (        mario.asm):00994                     .dw     Voice1+B4,Mid+None
C211 211D0700         (        mario.asm):00995                     .dw     Voice2+G4,Mid+None
C215 423B0710         (        mario.asm):00996                     .dw     Voice4+G3,Mid+Eighth
C219 1FFF0000         (        mario.asm):00997                     .dw     Voice1+XX,Off+None
C21D 2FFF0000         (        mario.asm):00998                     .dw     Voice2+XX,Off+None
C221 4FFF0002         (        mario.asm):00999                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01000                     
                      (        mario.asm):01001                     ; 33:2  Voice+Note,Vol+Dur
C225 10A00700         (        mario.asm):01002                     .dw     Voice1+F5,Mid+None
C229 20BE0700         (        mario.asm):01003                     .dw     Voice2+D5,Mid+None
C22D 423B0720         (        mario.asm):01004                     .dw     Voice4+G3,Mid+Quarter
C231 1FFF0000         (        mario.asm):01005                     .dw     Voice1+XX,Off+None
C235 2FFF0000         (        mario.asm):01006                     .dw     Voice2+XX,Off+None
C239 4FFF0002         (        mario.asm):01007                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01008                     
                      (        mario.asm):01009                     ; 33:3  Voice+Note,Vol+Dur
C23D 10A00700         (        mario.asm):01010                     .dw     Voice1+F5,Mid+None
C241 20BE0700         (        mario.asm):01011                     .dw     Voice2+D5,Mid+None
C245 423B0710         (        mario.asm):01012                     .dw     Voice4+G3,Mid+Eighth
C249 1FFF0000         (        mario.asm):01013                     .dw     Voice1+XX,Off+None
C24D 2FFF0000         (        mario.asm):01014                     .dw     Voice2+XX,Off+None
C251 4FFF0002         (        mario.asm):01015                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01016                     
                      (        mario.asm):01017                     ; 33:4  Voice+Note,Vol+Dur
C255 10A00700         (        mario.asm):01018                     .dw     Voice1+F5,Mid+None
C259 20BE0700         (        mario.asm):01019                     .dw     Voice2+D5,Mid+None
C25D 423B0718         (        mario.asm):01020                     .dw     Voice4+G3,Mid+Sixth
C261 1FFF0000         (        mario.asm):01021                     .dw     Voice1+XX,Off+None
C265 2FFF0000         (        mario.asm):01022                     .dw     Voice2+XX,Off+None
C269 4FFF0002         (        mario.asm):01023                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01024                     
                      (        mario.asm):01025                     ; 33:5  Voice+Note,Vol+Dur
C26D 10AA0700         (        mario.asm):01026                     .dw     Voice1+E5,Mid+None
C271 20D60700         (        mario.asm):01027                     .dw     Voice2+C5,Mid+None
C275 41FC0718         (        mario.asm):01028                     .dw     Voice4+A3,Mid+Sixth
C279 1FFF0000         (        mario.asm):01029                     .dw     Voice1+XX,Off+None
C27D 2FFF0000         (        mario.asm):01030                     .dw     Voice2+XX,Off+None
C281 4FFF0002         (        mario.asm):01031                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01032                     
                      (        mario.asm):01033                     ; 33:6  Voice+Note,Vol+Dur
C285 10BE0700         (        mario.asm):01034                     .dw     Voice1+D5,Mid+None
C289 20E20700         (        mario.asm):01035                     .dw     Voice2+B4,Mid+None
C28D 41C50718         (        mario.asm):01036                     .dw     Voice4+B3,Mid+Sixth
C291 1FFF0000         (        mario.asm):01037                     .dw     Voice1+XX,Off+None
C295 2FFF0000         (        mario.asm):01038                     .dw     Voice2+XX,Off+None
C299 4FFF0002         (        mario.asm):01039                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01040                     
                      (        mario.asm):01041                     ; 34:1  Voice+Note,Vol+Dur
C29D 10D60700         (        mario.asm):01042                     .dw     Voice1+C5,Mid+None
C2A1 211D0700         (        mario.asm):01043                     .dw     Voice2+G4,Mid+None
C2A5 41AC0710         (        mario.asm):01044                     .dw     Voice4+C4,Mid+Eighth
C2A9 2FFF0002         (        mario.asm):01045                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):01046                 
                      (        mario.asm):01047                     ; 34:2  Voice+Note,Vol+Dur
C2AD 11530700         (        mario.asm):01048                     .dw     Voice1+E4,Mid+None
C2B1 4FFF0002         (        mario.asm):01049                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01050                 
                      (        mario.asm):01051                     ; 34:3  Voice+Note,Vol+Dur
C2B5 423B0710         (        mario.asm):01052                     .dw     Voice4+G3,Mid+Eighth
C2B9 1FFF0002         (        mario.asm):01053                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01054                 
                      (        mario.asm):01055                     ; 34:4  Voice+Note,Vol+Dur
C2BD 11530710         (        mario.asm):01056                     .dw     Voice1+E4,Mid+Eighth
C2C1 4FFF0002         (        mario.asm):01057                     .dw     Voice4+XX,Off+Pause 
                      (        mario.asm):01058                 
                      (        mario.asm):01059                     ; 34:5  Voice+Note,Vol+Dur
C2C5 11AC0700         (        mario.asm):01060                     .dw     Voice1+C4,Mid+None
C2C9 43570720         (        mario.asm):01061                     .dw     Voice4+C3,Mid+Quarter
C2CD 1FFF0000         (        mario.asm):01062                     .dw     Voice1+XX,Off+None
C2D1 4FFF0020         (        mario.asm):01063                     .dw     Voice4+XX,Off+Quarter   
                      (        mario.asm):01064                 
                      (        mario.asm):01065                     ; EOT
C2D5 00000000         (        mario.asm):01066                     .dw     $0000,$0000
                      (        mario.asm):01067                 
                      (        mario.asm):01068                 ; ----------------------------------------------------------------------------------------------------------------------
                      (        mario.asm):01069                 
C2D9                  (        mario.asm):01070                 mario7:
                      (        mario.asm):01071                     ; 35:1  Voice+Note,Vol+Dur
C2D9 10D60700         (        mario.asm):01072                     .dw     Voice1+C5,Mid+None
C2DD 210D0700         (        mario.asm):01073                     .dw     Voice2+Gs4,Mid+None
C2E1 44350710         (        mario.asm):01074                     .dw     Voice4+Gs2,Mid+Eighth
C2E5 1FFF0000         (        mario.asm):01075                     .dw     Voice1+XX,Off+None
C2E9 2FFF0000         (        mario.asm):01076                     .dw     Voice2+XX,Off+None
                      (        mario.asm):01077                 
                      (        mario.asm):01078                     ; 35:2  Voice+Note,Vol+Dur
C2ED 10D60700         (        mario.asm):01079                     .dw     Voice1+C5,Mid+None
C2F1 210D0710         (        mario.asm):01080                     .dw     Voice2+Gs4,Mid+Eighth
C2F5 1FFF0000         (        mario.asm):01081                     .dw     Voice1+XX,Off+None
C2F9 2FFF0000         (        mario.asm):01082                     .dw     Voice2+XX,Off+None
C2FD 4FFF0010         (        mario.asm):01083                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01084                 
                      (        mario.asm):01085                     ; 35:3  Voice+Note,Vol+Dur
C301 10D60700         (        mario.asm):01086                     .dw     Voice1+C5,Mid+None
C305 210D0700         (        mario.asm):01087                     .dw     Voice2+Gs4,Mid+None
C309 42CF0710         (        mario.asm):01088                     .dw     Voice4+Ds3,Mid+Eighth
C30D 1FFF0000         (        mario.asm):01089                     .dw     Voice1+XX,Off+None
C311 2FFF0000         (        mario.asm):01090                     .dw     Voice2+XX,Off+None
C315 4FFF0010         (        mario.asm):01091                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01092                 
                      (        mario.asm):01093                     ; 35:4  Voice+Note,Vol+Dur
C319 10D60700         (        mario.asm):01094                     .dw     Voice1+C5,Mid+None
C31D 210D0710         (        mario.asm):01095                     .dw     Voice2+Gs4,Mid+Eighth
C321 1FFF0000         (        mario.asm):01096                     .dw     Voice1+XX,Off+None
C325 2FFF0000         (        mario.asm):01097                     .dw     Voice2+XX,Off+None
C329 4FFF0002         (        mario.asm):01098                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01099                 
                      (        mario.asm):01100                     ; 35:5  Voice+Note,Vol+Dur
C32D 10BE0700         (        mario.asm):01101                     .dw     Voice1+D5,Mid+None
C331 20F00700         (        mario.asm):01102                     .dw     Voice2+As4,Mid+None
C335 421B0720         (        mario.asm):01103                     .dw     Voice4+Gs3,Mid+Quarter
C339 1FFF0000         (        mario.asm):01104                     .dw     Voice1+XX,Off+None
C33D 2FFF0000         (        mario.asm):01105                     .dw     Voice2+XX,Off+None
C341 4FFF0002         (        mario.asm):01106                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01107                 
                      (        mario.asm):01108                     ; 36:1  Voice+Note,Vol+Dur
C345 10AA0700         (        mario.asm):01109                     .dw     Voice1+E5,Mid+None
C349 211D0700         (        mario.asm):01110                     .dw     Voice2+G4,Mid+None
C34D 423B0710         (        mario.asm):01111                     .dw     Voice4+G3,Mid+Eighth
C351 1FFF0000         (        mario.asm):01112                     .dw     Voice1+XX,Off+None
C355 2FFF0002         (        mario.asm):01113                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):01114                 
                      (        mario.asm):01115                     ; 36:2  Voice+Note,Vol+Dur
C359 10D60700         (        mario.asm):01116                     .dw     Voice1+C5,Mid+None
C35D 21530710         (        mario.asm):01117                     .dw     Voice2+E4,Mid+Eighth
C361 1FFF0000         (        mario.asm):01118                     .dw     Voice1+XX,Off+None
C365 2FFF0000         (        mario.asm):01119                     .dw     Voice2+XX,Off+None
C369 4FFF0010         (        mario.asm):01120                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01121                 
                      (        mario.asm):01122                     ; 36:3  Voice+Note,Vol+Dur
C36D 10FE0700         (        mario.asm):01123                     .dw     Voice1+A4,Mid+None
C371 21530700         (        mario.asm):01124                     .dw     Voice2+E4,Mid+None
C375 43570710         (        mario.asm):01125                     .dw     Voice4+C3,Mid+Eighth
C379 1FFF0000         (        mario.asm):01126                     .dw     Voice1+XX,Off+None
C37D 2FFF0000         (        mario.asm):01127                     .dw     Voice2+XX,Off+None
C381 4FFF0002         (        mario.asm):01128                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01129                 
                      (        mario.asm):01130                     ; 36:4  Voice+Note,Vol+Dur
C385 111D0700         (        mario.asm):01131                     .dw     Voice1+G4,Mid+None
C389 21AC0720         (        mario.asm):01132                     .dw     Voice2+C4,Mid+Quarter
C38D 1FFF0000         (        mario.asm):01133                     .dw     Voice1+XX,Off+None
C391 2FFF0000         (        mario.asm):01134                     .dw     Voice2+XX,Off+None
                      (        mario.asm):01135                 
                      (        mario.asm):01136                     ; 36:5  Voice+Note,Vol+Dur
C395 44750720         (        mario.asm):01137                     .dw     Voice4+G2,Mid+Quarter
C399 1FFF0000         (        mario.asm):01138                     .dw     Voice1+XX,Off+None
C39D 2FFF0000         (        mario.asm):01139                     .dw     Voice2+XX,Off+None
C3A1 4FFF0002         (        mario.asm):01140                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01141                 
                      (        mario.asm):01142                     ; 37:1  Voice+Note,Vol+Dur
C3A5 10D60700         (        mario.asm):01143                     .dw     Voice1+C5,Mid+None
C3A9 210D0700         (        mario.asm):01144                     .dw     Voice2+Gs4,Mid+None
C3AD 44350710         (        mario.asm):01145                     .dw     Voice4+Gs2,Mid+Eighth
C3B1 1FFF0000         (        mario.asm):01146                     .dw     Voice1+XX,Off+None
C3B5 2FFF0000         (        mario.asm):01147                     .dw     Voice2+XX,Off+None
                      (        mario.asm):01148                 
                      (        mario.asm):01149                     ; 37:2  Voice+Note,Vol+Dur
C3B9 10D60700         (        mario.asm):01150                     .dw     Voice1+C5,Mid+None
C3BD 210D0710         (        mario.asm):01151                     .dw     Voice2+Gs4,Mid+Eighth
C3C1 1FFF0000         (        mario.asm):01152                     .dw     Voice1+XX,Off+None
C3C5 2FFF0000         (        mario.asm):01153                     .dw     Voice2+XX,Off+None
C3C9 4FFF0010         (        mario.asm):01154                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01155                 
                      (        mario.asm):01156                     ; 37:3  Voice+Note,Vol+Dur
C3CD 10D60700         (        mario.asm):01157                     .dw     Voice1+C5,Mid+None
C3D1 210D0700         (        mario.asm):01158                     .dw     Voice2+Gs4,Mid+None
C3D5 42CF0710         (        mario.asm):01159                     .dw     Voice4+Ds3,Mid+Eighth
C3D9 1FFF0000         (        mario.asm):01160                     .dw     Voice1+XX,Off+None
C3DD 2FFF0000         (        mario.asm):01161                     .dw     Voice2+XX,Off+None
C3E1 4FFF0010         (        mario.asm):01162                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01163                 
                      (        mario.asm):01164                     ; 37:4  Voice+Note,Vol+Dur
C3E5 10D60700         (        mario.asm):01165                     .dw     Voice1+C5,Mid+None
C3E9 210D0710         (        mario.asm):01166                     .dw     Voice2+Gs4,Mid+Eighth
C3ED 1FFF0000         (        mario.asm):01167                     .dw     Voice1+XX,Off+None
C3F1 2FFF0000         (        mario.asm):01168                     .dw     Voice2+XX,Off+None
C3F5 4FFF0002         (        mario.asm):01169                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01170                 
                      (        mario.asm):01171                     ; 37:5  Voice+Note,Vol+Dur
C3F9 10BE0700         (        mario.asm):01172                     .dw     Voice1+D5,Mid+None
C3FD 20F00700         (        mario.asm):01173                     .dw     Voice2+As4,Mid+None
C401 421B0710         (        mario.asm):01174                     .dw     Voice4+Gs3,Mid+Eighth
C405 1FFF0000         (        mario.asm):01175                     .dw     Voice1+XX,Off+None
C409 2FFF0000         (        mario.asm):01176                     .dw     Voice2+XX,Off+None
C40D 4FFF0002         (        mario.asm):01177                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01178                 
                      (        mario.asm):01179                     ; 37:6  Voice+Note,Vol+Dur
C411 10AA0700         (        mario.asm):01180                     .dw     Voice1+E5,Mid+None
C415 211D0710         (        mario.asm):01181                     .dw     Voice2+G4,Mid+Eighth
C419 1FFF0000         (        mario.asm):01182                     .dw     Voice1+XX,Off+None
C41D 2FFF0000         (        mario.asm):01183                     .dw     Voice2+XX,Off+None
C421 4FFF0002         (        mario.asm):01184                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01185                 
                      (        mario.asm):01186                     ; 38:1  Voice+Note,Vol+Dur
C425 423B0720         (        mario.asm):01187                     .dw     Voice4+G3,Mid+Quarter
C429 4FFF0002         (        mario.asm):01188                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01189                 
                      (        mario.asm):01190                     ; 38:2  Voice+Note,Vol+Dur
C42D 10AA0710         (        mario.asm):01191                     .dw     Voice1+E5,Mid+Eighth
C431 1FFF0002         (        mario.asm):01192                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01193                 
                      (        mario.asm):01194                     ; 38:3  Voice+Note,Vol+Dur
C435 108F0700         (        mario.asm):01195                     .dw     Voice1+G5,Mid+None
C439 43570710         (        mario.asm):01196                     .dw     Voice4+C3,Mid+Eighth
C43D 1FFF0000         (        mario.asm):01197                     .dw     Voice1+XX,Off+None
C441 4FFF0002         (        mario.asm):01198                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01199                 
                      (        mario.asm):01200                     ; 38:4  Voice+Note,Vol+Dur
C445 10550710         (        mario.asm):01201                     .dw     Voice1+E6,Mid+Eighth
C449 1FFF0002         (        mario.asm):01202                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01203                 
                      (        mario.asm):01204                     ; 38:x  Voice+Note,Vol+Dur
C44D 106B0710         (        mario.asm):01205                     .dw     Voice1+C6,Mid+Eighth
C451 1FFF0002         (        mario.asm):01206                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01207                 
                      (        mario.asm):01208                     ; 38:x  Voice+Note,Vol+Dur
C455 105F0700         (        mario.asm):01209                     .dw     Voice1+D6,Mid+None
C459 44750710         (        mario.asm):01210                     .dw     Voice4+G2,Mid+Eighth
C45D 1FFF0002         (        mario.asm):01211                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01212                 
                      (        mario.asm):01213                     ; 38:x  Voice+Note,Vol+Dur
C461 10470710         (        mario.asm):01214                     .dw     Voice1+G6,Mid+Eighth
C465 1FFF0000         (        mario.asm):01215                     .dw     Voice1+XX,Off+None
C469 4FFF0002         (        mario.asm):01216                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01217                 
                      (        mario.asm):01218                     ; 39:1  Voice+Note,Vol+Dur
C46D 10D60700         (        mario.asm):01219                     .dw     Voice1+C5,Mid+None
C471 210D0700         (        mario.asm):01220                     .dw     Voice2+Gs4,Mid+None
C475 44350710         (        mario.asm):01221                     .dw     Voice4+Gs2,Mid+Eighth
C479 1FFF0000         (        mario.asm):01222                     .dw     Voice1+XX,Off+None
C47D 2FFF0000         (        mario.asm):01223                     .dw     Voice2+XX,Off+None
                      (        mario.asm):01224                 
                      (        mario.asm):01225                     ; 39:2  Voice+Note,Vol+Dur
C481 10D60700         (        mario.asm):01226                     .dw     Voice1+C5,Mid+None
C485 210D0710         (        mario.asm):01227                     .dw     Voice2+Gs4,Mid+Eighth
C489 1FFF0000         (        mario.asm):01228                     .dw     Voice1+XX,Off+None
C48D 2FFF0000         (        mario.asm):01229                     .dw     Voice2+XX,Off+None
C491 4FFF0010         (        mario.asm):01230                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01231                 
                      (        mario.asm):01232                     ; 39:3  Voice+Note,Vol+Dur
C495 10D60700         (        mario.asm):01233                     .dw     Voice1+C5,Mid+None
C499 210D0700         (        mario.asm):01234                     .dw     Voice2+Gs4,Mid+None
C49D 42CF0710         (        mario.asm):01235                     .dw     Voice4+Ds3,Mid+Eighth
C4A1 1FFF0000         (        mario.asm):01236                     .dw     Voice1+XX,Off+None
C4A5 2FFF0000         (        mario.asm):01237                     .dw     Voice2+XX,Off+None
C4A9 4FFF0010         (        mario.asm):01238                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01239                 
                      (        mario.asm):01240                     ; 39:4  Voice+Note,Vol+Dur
C4AD 10D60700         (        mario.asm):01241                     .dw     Voice1+C5,Mid+None
C4B1 210D0710         (        mario.asm):01242                     .dw     Voice2+Gs4,Mid+Eighth
C4B5 1FFF0000         (        mario.asm):01243                     .dw     Voice1+XX,Off+None
C4B9 2FFF0000         (        mario.asm):01244                     .dw     Voice2+XX,Off+None
C4BD 4FFF0002         (        mario.asm):01245                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01246                 
                      (        mario.asm):01247                     ; 39:5  Voice+Note,Vol+Dur
C4C1 10BE0700         (        mario.asm):01248                     .dw     Voice1+D5,Mid+None
C4C5 20F00700         (        mario.asm):01249                     .dw     Voice2+As4,Mid+None
C4C9 421B0720         (        mario.asm):01250                     .dw     Voice4+Gs3,Mid+Quarter
C4CD 1FFF0000         (        mario.asm):01251                     .dw     Voice1+XX,Off+None
C4D1 2FFF0000         (        mario.asm):01252                     .dw     Voice2+XX,Off+None
C4D5 4FFF0002         (        mario.asm):01253                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01254                 
                      (        mario.asm):01255                     ; 40:1  Voice+Note,Vol+Dur
C4D9 10AA0700         (        mario.asm):01256                     .dw     Voice1+E5,Mid+None
C4DD 211D0700         (        mario.asm):01257                     .dw     Voice2+G4,Mid+None
C4E1 423B0710         (        mario.asm):01258                     .dw     Voice4+G3,Mid+Eighth
C4E5 1FFF0000         (        mario.asm):01259                     .dw     Voice1+XX,Off+None
C4E9 2FFF0002         (        mario.asm):01260                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):01261                 
                      (        mario.asm):01262                     ; 40:2  Voice+Note,Vol+Dur
C4ED 10D60700         (        mario.asm):01263                     .dw     Voice1+C5,Mid+None
C4F1 21530710         (        mario.asm):01264                     .dw     Voice2+E4,Mid+Eighth
C4F5 1FFF0000         (        mario.asm):01265                     .dw     Voice1+XX,Off+None
C4F9 2FFF0000         (        mario.asm):01266                     .dw     Voice2+XX,Off+None
C4FD 4FFF0010         (        mario.asm):01267                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01268                 
                      (        mario.asm):01269                     ; 40:3  Voice+Note,Vol+Dur
C501 10FE0700         (        mario.asm):01270                     .dw     Voice1+A4,Mid+None
C505 21530700         (        mario.asm):01271                     .dw     Voice2+E4,Mid+None
C509 43570710         (        mario.asm):01272                     .dw     Voice4+C3,Mid+Eighth
C50D 1FFF0000         (        mario.asm):01273                     .dw     Voice1+XX,Off+None
C511 2FFF0000         (        mario.asm):01274                     .dw     Voice2+XX,Off+None
C515 4FFF0002         (        mario.asm):01275                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01276                 
                      (        mario.asm):01277                     ; 40:4  Voice+Note,Vol+Dur
C519 111D0700         (        mario.asm):01278                     .dw     Voice1+G4,Mid+None
C51D 21AC0720         (        mario.asm):01279                     .dw     Voice2+C4,Mid+Quarter
C521 1FFF0000         (        mario.asm):01280                     .dw     Voice1+XX,Off+None
C525 2FFF0000         (        mario.asm):01281                     .dw     Voice2+XX,Off+None
                      (        mario.asm):01282                 
                      (        mario.asm):01283                     ; 40:5  Voice+Note,Vol+Dur
C529 44750720         (        mario.asm):01284                     .dw     Voice4+G2,Mid+Quarter
C52D 1FFF0000         (        mario.asm):01285                     .dw     Voice1+XX,Off+None
C531 2FFF0000         (        mario.asm):01286                     .dw     Voice2+XX,Off+None
C535 4FFF0002         (        mario.asm):01287                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01288                 
                      (        mario.asm):01289                     ; 41:1  Voice    Note   Vol   Dur
C539 10AA0700         (        mario.asm):01290                     .dw     Voice1+E5,Mid+None
C53D 212E0700         (        mario.asm):01291                     .dw     Voice2+Fs4,Mid+None
C541 42FA0710         (        mario.asm):01292                     .dw     Voice4+D3,Mid+Eighth
C545 1FFF0000         (        mario.asm):01293                     .dw     Voice1+XX,Off+None
C549 2FFF0000         (        mario.asm):01294                     .dw     Voice2+XX,Off+None
C54D 4FFF0002         (        mario.asm):01295                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01296                 
                      (        mario.asm):01297                     ; 41:2  Voice    Note   Vol   Dur
C551 10AA0700         (        mario.asm):01298                     .dw     Voice1+E5,Mid+None
C555 212E0700         (        mario.asm):01299                     .dw     Voice2+Fs4,Mid+None
C559 42FA0710         (        mario.asm):01300                     .dw     Voice4+D3,Mid+Eighth
C55D 1FFF0000         (        mario.asm):01301                     .dw     Voice1+XX,Off+None
C561 2FFF0000         (        mario.asm):01302                     .dw     Voice2+XX,Off+None
C565 4FFF0010         (        mario.asm):01303                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01304                 
                      (        mario.asm):01305                     ; 41:3  Voice    Note   Vol   Dur
C569 10AA0700         (        mario.asm):01306                     .dw     Voice1+E5,Mid+None
C56D 212E0700         (        mario.asm):01307                     .dw     Voice2+Fs4,Mid+None
C571 42FA0710         (        mario.asm):01308                     .dw     Voice4+D3,Mid+Eighth
C575 1FFF0000         (        mario.asm):01309                     .dw     Voice1+XX,Off+None
C579 2FFF0000         (        mario.asm):01310                     .dw     Voice2+XX,Off+None
C57D 4FFF0010         (        mario.asm):01311                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01312                 
                      (        mario.asm):01313                     ; 41:4  Voice    Note   Vol   Dur
C581 10D60700         (        mario.asm):01314                     .dw     Voice1+C5,Mid+None
C585 212E0700         (        mario.asm):01315                     .dw     Voice2+Fs4,Mid+None
C589 42FA0710         (        mario.asm):01316                     .dw     Voice4+D3,Mid+Eighth
C58D 1FFF0000         (        mario.asm):01317                     .dw     Voice1+XX,Off+None
C591 2FFF0000         (        mario.asm):01318                     .dw     Voice2+XX,Off+None
C595 4FFF0002         (        mario.asm):01319                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01320                 
                      (        mario.asm):01321                     ; 41:5  Voice    Note   Vol   Dur
C599 10AA0700         (        mario.asm):01322                     .dw     Voice1+E5,Mid+None
C59D 212E0700         (        mario.asm):01323                     .dw     Voice2+Fs4,Mid+None
C5A1 42FA0720         (        mario.asm):01324                     .dw     Voice4+D3,Mid+Quarter
C5A5 1FFF0000         (        mario.asm):01325                     .dw     Voice1+XX,Off+None
C5A9 2FFF0000         (        mario.asm):01326                     .dw     Voice2+XX,Off+None
C5AD 4FFF0002         (        mario.asm):01327                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01328                 
                      (        mario.asm):01329                     ; 42:1  Voice+Note,Vol+Dur
C5B1 108F0700         (        mario.asm):01330                     .dw     Voice1+G5,Mid+None
C5B5 20E20700         (        mario.asm):01331                     .dw     Voice2+B4,Mid+None
C5B9 311D0700         (        mario.asm):01332                     .dw     Voice3+G4,Mid+None
C5BD 423B0720         (        mario.asm):01333                     .dw     Voice4+G3,Mid+Quarter
C5C1 1FFF0000         (        mario.asm):01334                     .dw     Voice1+XX,Off+None
C5C5 2FFF0000         (        mario.asm):01335                     .dw     Voice2+XX,Off+None
C5C9 3FFF0000         (        mario.asm):01336                     .dw     Voice3+XX,Off+None
C5CD 4FFF0020         (        mario.asm):01337                     .dw     Voice4+XX,Off+Quarter
                      (        mario.asm):01338                 
                      (        mario.asm):01339                     ; 42:2  Voice    Note   Vol   Dur
C5D1 111D0700         (        mario.asm):01340                     .dw     Voice1+G4,Mid+None
C5D5 44750720         (        mario.asm):01341                     .dw     Voice4+G2,Mid+Quarter
C5D9 1FFF0000         (        mario.asm):01342                     .dw     Voice1+XX,Off+None
C5DD 4FFF0020         (        mario.asm):01343                     .dw     Voice4+XX,Off+Quarter
                      (        mario.asm):01344                 
                      (        mario.asm):01345                     ; EOT
C5E1 00000000         (        mario.asm):01346                     .dw     $0000,$0000
                      (        mario.asm):01347                 
                      (        mario.asm):01348                 ; ----------------------------------------------------------------------------------------------------------------------
                      (        mario.asm):01349                 
C5E5                  (        mario.asm):01350                 mario9:
                      (        mario.asm):01351                     ; 51:1  Voice    Note   Vol   Dur
C5E5 10D60700         (        mario.asm):01352                     .dw     Voice1+C5,Mid+None
C5E9 21530700         (        mario.asm):01353                     .dw     Voice2+E4,Mid+None
C5ED 423B0720         (        mario.asm):01354                     .dw     Voice4+G3,Mid+Quarter
C5F1 1FFF0000         (        mario.asm):01355                     .dw     Voice1+XX,Off+None
C5F5 2FFF0000         (        mario.asm):01356                     .dw     Voice2+XX,Off+None
C5F9 4FFF0010         (        mario.asm):01357                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01358                 
                      (        mario.asm):01359                     ; 51:2  Voice    Note   Vol   Dur
C5FD 111D0700         (        mario.asm):01360                     .dw     Voice1+G4,Mid+None
C601 21AC0700         (        mario.asm):01361                     .dw     Voice2+C4,Mid+None
C605 42A70720         (        mario.asm):01362                     .dw     Voice4+E3,Mid+Quarter
C609 1FFF0000         (        mario.asm):01363                     .dw     Voice1+XX,Off+None
C60D 2FFF0000         (        mario.asm):01364                     .dw     Voice2+XX,Off+None
C611 4FFF0010         (        mario.asm):01365                     .dw     Voice4+XX,Off+Eighth
                      (        mario.asm):01366                 
                      (        mario.asm):01367                     ; 51:3  Voice    Note   Vol   Dur
C615 11530700         (        mario.asm):01368                     .dw     Voice1+E4,Mid+None
C619 223B0700         (        mario.asm):01369                     .dw     Voice2+G3,Mid+None
C61D 43570720         (        mario.asm):01370                     .dw     Voice4+C3,Mid+Quarter
C621 1FFF0000         (        mario.asm):01371                     .dw     Voice1+XX,Off+None
C625 2FFF0000         (        mario.asm):01372                     .dw     Voice2+XX,Off+None
C629 4FFF0002         (        mario.asm):01373                     .dw     Voice4+XX,Off+Pause
                      (        mario.asm):01374                 
                      (        mario.asm):01375                     ; 52:1  Voice    Note   Vol   Dur
C62D 10FE0700         (        mario.asm):01376                     .dw     Voice1+A4,Mid+None
C631 21400700         (        mario.asm):01377                     .dw     Voice2+F4,Mid+None
C635 43570700         (        mario.asm):01378                     .dw     Voice4+C3,Mid+None
C639 55010718         (        mario.asm):01379                     .dw     Voice5+F2,Mid+Sixth
C63D 1FFF0002         (        mario.asm):01380                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01381                     
                      (        mario.asm):01382                     ; 52:2  Voice    Note   Vol   Dur
C641 10E20718         (        mario.asm):01383                     .dw     Voice1+B4,Mid+Sixth
C645 1FFF0002         (        mario.asm):01384                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01385                 
                      (        mario.asm):01386                     ; 52:3  Voice    Note   Vol   Dur
C649 10FE0718         (        mario.asm):01387                     .dw     Voice1+A4,Mid+Sixth
C64D 1FFF0000         (        mario.asm):01388                     .dw     Voice1+XX,Off+None
C651 2FFF0000         (        mario.asm):01389                     .dw     Voice2+XX,Off+None
C655 4FFF0000         (        mario.asm):01390                     .dw     Voice4+XX,Off+None
C659 5FFF0002         (        mario.asm):01391                     .dw     Voice5+XX,Off+Pause
                      (        mario.asm):01392                 
                      (        mario.asm):01393                     ; 52:4  Voice    Note   Vol   Dur
C65D 110D0700         (        mario.asm):01394                     .dw     Voice1+Gs4,Mid+None
C661 21400700         (        mario.asm):01395                     .dw     Voice2+F4,Mid+None
C665 44350700         (        mario.asm):01396                     .dw     Voice4+Gs2,Mid+None
C669 564E0718         (        mario.asm):01397                     .dw     Voice5+Cs2,Mid+Sixth
C66D 1FFF0002         (        mario.asm):01398                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01399                 
                      (        mario.asm):01400                     ; 52:5  Voice    Note   Vol   Dur
C671 10F00718         (        mario.asm):01401                     .dw     Voice1+As4,Mid+Sixth
C675 1FFF0002         (        mario.asm):01402                     .dw     Voice1+XX,Off+Pause
                      (        mario.asm):01403                 
                      (        mario.asm):01404                     ; 52:6  Voice    Note   Vol   Dur
C679 10FE0718         (        mario.asm):01405                     .dw     Voice1+A4,Mid+Sixth
C67D 1FFF0000         (        mario.asm):01406                     .dw     Voice1+XX,Off+None
C681 2FFF0000         (        mario.asm):01407                     .dw     Voice2+XX,Off+None
C685 4FFF0000         (        mario.asm):01408                     .dw     Voice4+XX,Off+None
C689 5FFF0002         (        mario.asm):01409                     .dw     Voice5+XX,Off+Pause
                      (        mario.asm):01410                 
                      (        mario.asm):01411                     ; 53:1  Voice    Note   Vol   Dur
C68D 111D0700         (        mario.asm):01412                     .dw     Voice1+G4,Mid+None
C691 21530700         (        mario.asm):01413                     .dw     Voice2+E4,Mid+None
C695 44750700         (        mario.asm):01414                     .dw     Voice4+G2,Mid+None
C699 56AE0710         (        mario.asm):01415                     .dw     Voice5+C2,Mid+Eighth
C69D 2FFF0002         (        mario.asm):01416                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):01417                 
                      (        mario.asm):01418                     ; 53:2  Voice    Note   Vol   Dur
C6A1 217D0710         (        mario.asm):01419                     .dw     Voice2+D4,Mid+Eighth
C6A5 2FFF0002         (        mario.asm):01420                     .dw     Voice2+XX,Off+Pause
                      (        mario.asm):01421                 
                      (        mario.asm):01422                     ; 53:3  Voice    Note   Vol   Dur
C6A9 11530740         (        mario.asm):01423                     .dw     Voice1+E4,Mid+Half
C6AD 1FFF0010         (        mario.asm):01424                     .dw     Voice1+XX,Off+Eighth
C6B1 2FFF0000         (        mario.asm):01425                     .dw     Voice2+XX,Off+None
C6B5 4FFF0000         (        mario.asm):01426                     .dw     Voice4+XX,Off+None
C6B9 5FFF0002         (        mario.asm):01427                     .dw     Voice5+XX,Off+Pause
                      (        mario.asm):01428                 
                      (        mario.asm):01429                     ; EOT
C6BD 00000000         (        mario.asm):01430                     .dw     $0000,$0000
                      (         main.asm):00197                     INCLUDE "monkey.asm"        ; Monkey Island song data
C6C1                  (       monkey.asm):00001                 MonkeyIslandData:
                      (       monkey.asm):00002                 
                      (       monkey.asm):00003                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00004                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00005                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00006                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00007                     
                      (       monkey.asm):00008                     ; 22:1  Voice    Note   Vol   Dur
C6C1 854D0710         (       monkey.asm):00009                     .dw     Voice8+E2,Mid+Eighth
C6C5 8FFF0002         (       monkey.asm):00010                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00011                 
                      (       monkey.asm):00012                     ; 22:2  Voice    Note   Vol   Dur
C6C9 51C50700         (       monkey.asm):00013                     .dw     Voice5+B3,Mid+None
C6CD 623B0700         (       monkey.asm):00014                     .dw     Voice6+G3,Mid+None
C6D1 72A70700         (       monkey.asm):00015                     .dw     Voice7+E3,Mid+None
C6D5 854D0708         (       monkey.asm):00016                     .dw     Voice8+E2,Mid+Sixteenth
C6D9 5FFF0000         (       monkey.asm):00017                     .dw     Voice5+XX,Off+None
C6DD 6FFF0000         (       monkey.asm):00018                     .dw     Voice6+XX,Off+None
C6E1 7FFF0000         (       monkey.asm):00019                     .dw     Voice7+XX,Off+None
C6E5 8FFF0002         (       monkey.asm):00020                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00021                 
                      (       monkey.asm):00022                     ; 22:3  Voice    Note   Vol   Dur
C6E9 51C50700         (       monkey.asm):00023                     .dw     Voice5+B3,Mid+None
C6ED 623B0700         (       monkey.asm):00024                     .dw     Voice6+G3,Mid+None
C6F1 72A70700         (       monkey.asm):00025                     .dw     Voice7+E3,Mid+None
C6F5 854D0708         (       monkey.asm):00026                     .dw     Voice8+E2,Mid+Sixteenth
C6F9 5FFF0000         (       monkey.asm):00027                     .dw     Voice5+XX,Off+None
C6FD 6FFF0000         (       monkey.asm):00028                     .dw     Voice6+XX,Off+None
C701 7FFF0000         (       monkey.asm):00029                     .dw     Voice7+XX,Off+None
C705 8FFF0010         (       monkey.asm):00030                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):00031                 
                      (       monkey.asm):00032                     ; 22:4  Voice    Note   Vol   Dur
C709 51C50700         (       monkey.asm):00033                     .dw     Voice5+B3,Mid+None
C70D 623B0700         (       monkey.asm):00034                     .dw     Voice6+G3,Mid+None
C711 72A70708         (       monkey.asm):00035                     .dw     Voice7+E3,Mid+Sixteenth
C715 5FFF0000         (       monkey.asm):00036                     .dw     Voice5+XX,Off+None
C719 6FFF0000         (       monkey.asm):00037                     .dw     Voice6+XX,Off+None
C71D 7FFF0000         (       monkey.asm):00038                     .dw     Voice7+XX,Off+None
C721 8FFF0002         (       monkey.asm):00039                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00040                 
                      (       monkey.asm):00041                     ; 22:5  Voice    Note   Vol   Dur
C725 51C50700         (       monkey.asm):00042                     .dw     Voice5+B3,Mid+None
C729 623B0700         (       monkey.asm):00043                     .dw     Voice6+G3,Mid+None
C72D 72A70700         (       monkey.asm):00044                     .dw     Voice7+E3,Mid+None
C731 854D0708         (       monkey.asm):00045                     .dw     Voice8+E2,Mid+Sixteenth
C735 5FFF0000         (       monkey.asm):00046                     .dw     Voice5+XX,Off+None
C739 6FFF0000         (       monkey.asm):00047                     .dw     Voice6+XX,Off+None
C73D 7FFF0010         (       monkey.asm):00048                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):00049                 
                      (       monkey.asm):00050                     ; 22:6  Voice    Note   Vol   Dur
C741 51FC0700         (       monkey.asm):00051                     .dw     Voice5+A3,Mid+None
C745 625D0700         (       monkey.asm):00052                     .dw     Voice6+Fs3,Mid+None
C749 72FA0700         (       monkey.asm):00053                     .dw     Voice7+D3,Mid+None
C74D 85F40708         (       monkey.asm):00054                     .dw     Voice8+D2,Mid+Sixteenth
C751 5FFF0000         (       monkey.asm):00055                     .dw     Voice5+XX,Off+None
C755 6FFF0000         (       monkey.asm):00056                     .dw     Voice6+XX,Off+None
C759 7FFF0000         (       monkey.asm):00057                     .dw     Voice7+XX,Off+None
C75D 8FFF0002         (       monkey.asm):00058                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00059                 
                      (       monkey.asm):00060                     ; 22:7  Voice    Note   Vol   Dur
C761 51FC0700         (       monkey.asm):00061                     .dw     Voice5+A3,Mid+None
C765 625D0700         (       monkey.asm):00062                     .dw     Voice6+Fs3,Mid+None
C769 72FA0700         (       monkey.asm):00063                     .dw     Voice7+D3,Mid+None
C76D 85F40708         (       monkey.asm):00064                     .dw     Voice8+D2,Mid+Sixteenth
C771 5FFF0000         (       monkey.asm):00065                     .dw     Voice5+XX,Off+None
C775 6FFF0000         (       monkey.asm):00066                     .dw     Voice6+XX,Off+None
C779 7FFF0000         (       monkey.asm):00067                     .dw     Voice7+XX,Off+None
C77D 8FFF0002         (       monkey.asm):00068                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00069                 
                      (       monkey.asm):00070                     ; 23:1  Voice    Note   Vol   Dur
C781 854D0710         (       monkey.asm):00071                     .dw     Voice8+E2,Mid+Eighth
C785 8FFF0002         (       monkey.asm):00072                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00073                 
                      (       monkey.asm):00074                     ; 23:2  Voice    Note   Vol   Dur
C789 51C50700         (       monkey.asm):00075                     .dw     Voice5+B3,Mid+None
C78D 623B0700         (       monkey.asm):00076                     .dw     Voice6+G3,Mid+None
C791 72A70700         (       monkey.asm):00077                     .dw     Voice7+E3,Mid+None
C795 854D0708         (       monkey.asm):00078                     .dw     Voice8+E2,Mid+Sixteenth
C799 5FFF0000         (       monkey.asm):00079                     .dw     Voice5+XX,Off+None
C79D 6FFF0000         (       monkey.asm):00080                     .dw     Voice6+XX,Off+None
C7A1 7FFF0000         (       monkey.asm):00081                     .dw     Voice7+XX,Off+None
C7A5 8FFF0002         (       monkey.asm):00082                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00083                 
                      (       monkey.asm):00084                     ; 23:3  Voice    Note   Vol   Dur
C7A9 51C50700         (       monkey.asm):00085                     .dw     Voice5+B3,Mid+None
C7AD 623B0700         (       monkey.asm):00086                     .dw     Voice6+G3,Mid+None
C7B1 72A70700         (       monkey.asm):00087                     .dw     Voice7+E3,Mid+None
C7B5 854D0708         (       monkey.asm):00088                     .dw     Voice8+E2,Mid+Sixteenth
C7B9 5FFF0000         (       monkey.asm):00089                     .dw     Voice5+XX,Off+None
C7BD 6FFF0000         (       monkey.asm):00090                     .dw     Voice6+XX,Off+None
C7C1 7FFF0000         (       monkey.asm):00091                     .dw     Voice7+XX,Off+None
C7C5 8FFF0010         (       monkey.asm):00092                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):00093                 
                      (       monkey.asm):00094                     ; 23:4  Voice    Note   Vol   Dur
C7C9 51C50700         (       monkey.asm):00095                     .dw     Voice5+B3,Mid+None
C7CD 623B0700         (       monkey.asm):00096                     .dw     Voice6+G3,Mid+None
C7D1 72A70708         (       monkey.asm):00097                     .dw     Voice7+E3,Mid+Sixteenth
C7D5 5FFF0000         (       monkey.asm):00098                     .dw     Voice5+XX,Off+None
C7D9 6FFF0000         (       monkey.asm):00099                     .dw     Voice6+XX,Off+None
C7DD 7FFF0002         (       monkey.asm):00100                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00101                 
                      (       monkey.asm):00102                     ; 23:5  Voice    Note   Vol   Dur
C7E1 51C50700         (       monkey.asm):00103                     .dw     Voice5+B3,Mid+None
C7E5 623B0700         (       monkey.asm):00104                     .dw     Voice6+G3,Mid+None
C7E9 72A70708         (       monkey.asm):00105                     .dw     Voice7+E3,Mid+Sixteenth
C7ED 5FFF0000         (       monkey.asm):00106                     .dw     Voice5+XX,Off+None
C7F1 6FFF0000         (       monkey.asm):00107                     .dw     Voice6+XX,Off+None
C7F5 7FFF0002         (       monkey.asm):00108                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00109                 
                      (       monkey.asm):00110                     ; 23:6  Voice    Note   Vol   Dur
C7F9 85F40710         (       monkey.asm):00111                     .dw     Voice8+D2,Mid+Eighth
C7FD 8FFF0002         (       monkey.asm):00112                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00113                 
                      (       monkey.asm):00114                     ; 23:7  Voice    Note   Vol   Dur
C801 51FC0700         (       monkey.asm):00115                     .dw     Voice5+A3,Mid+None
C805 625D0700         (       monkey.asm):00116                     .dw     Voice6+Fs3,Mid+None
C809 72FA0700         (       monkey.asm):00117                     .dw     Voice7+D3,Mid+None
C80D 85F40708         (       monkey.asm):00118                     .dw     Voice8+D2,Mid+Sixteenth
C811 5FFF0000         (       monkey.asm):00119                     .dw     Voice5+XX,Off+None
C815 6FFF0000         (       monkey.asm):00120                     .dw     Voice6+XX,Off+None
C819 7FFF0000         (       monkey.asm):00121                     .dw     Voice7+XX,Off+None
C81D 8FFF0002         (       monkey.asm):00122                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00123                 
                      (       monkey.asm):00124                     ; 23:8  Voice    Note   Vol   Dur
C821 51FC0700         (       monkey.asm):00125                     .dw     Voice5+A3,Mid+None
C825 625D0700         (       monkey.asm):00126                     .dw     Voice6+Fs3,Mid+None
C829 72FA0700         (       monkey.asm):00127                     .dw     Voice7+D3,Mid+None
C82D 85F40708         (       monkey.asm):00128                     .dw     Voice8+D2,Mid+Sixteenth
C831 5FFF0000         (       monkey.asm):00129                     .dw     Voice5+XX,Off+None
C835 6FFF0000         (       monkey.asm):00130                     .dw     Voice6+XX,Off+None
C839 7FFF0000         (       monkey.asm):00131                     .dw     Voice7+XX,Off+None
C83D 8FFF0002         (       monkey.asm):00132                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00133                 
                      (       monkey.asm):00134                     ; 23:9  Voice    Note   Vol   Dur
C841 83F90708         (       monkey.asm):00135                     .dw     Voice8+A2,Mid+Sixteenth
C845 8FFF0002         (       monkey.asm):00136                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00137                 
                      (       monkey.asm):00138                     ; 23:10 Voice    Note   Vol   Dur
C849 854D0708         (       monkey.asm):00139                     .dw     Voice8+E2,Mid+Sixteenth
C84D 8FFF0002         (       monkey.asm):00140                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00141                 
                      (       monkey.asm):00142                     ; 23:11 Voice    Note   Vol   Dur
C851 51C50700         (       monkey.asm):00143                     .dw     Voice5+B3,Mid+None
C855 623B0700         (       monkey.asm):00144                     .dw     Voice6+G3,Mid+None
C859 72A70708         (       monkey.asm):00145                     .dw     Voice7+E3,Mid+Sixteenth
C85D 5FFF0000         (       monkey.asm):00146                     .dw     Voice5+XX,Off+None
C861 6FFF0000         (       monkey.asm):00147                     .dw     Voice6+XX,Off+None
C865 7FFF0002         (       monkey.asm):00148                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00149                 
                      (       monkey.asm):00150                     ; 23:12 Voice    Note   Vol   Dur
C869 51C50700         (       monkey.asm):00151                     .dw     Voice5+B3,Mid+None
C86D 623B0700         (       monkey.asm):00152                     .dw     Voice6+G3,Mid+None
C871 72A70700         (       monkey.asm):00153                     .dw     Voice7+E3,Mid+None
C875 854D0708         (       monkey.asm):00154                     .dw     Voice8+E2,Mid+Sixteenth
C879 5FFF0000         (       monkey.asm):00155                     .dw     Voice5+XX,Off+None
C87D 6FFF0000         (       monkey.asm):00156                     .dw     Voice6+XX,Off+None
C881 7FFF0000         (       monkey.asm):00157                     .dw     Voice7+XX,Off+None
C885 8FFF0002         (       monkey.asm):00158                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00159                 
                      (       monkey.asm):00160                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00161                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00162                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00163                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00164                     
                      (       monkey.asm):00165                     ; 24:1  Voice    Note   Vol   Dur
C889 10AA0700         (       monkey.asm):00166                     .dw     Voice1+E5,Mid+None
C88D 31530710         (       monkey.asm):00167                     .dw     Voice3+E4,Mid+Eighth
C891 1FFF0000         (       monkey.asm):00168                     .dw     Voice1+XX,Off+None
C895 3FFF0002         (       monkey.asm):00169                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00170                 
                      (       monkey.asm):00171                     ; 24:2  Voice    Note   Vol   Dur
C899 10AA0700         (       monkey.asm):00172                     .dw     Voice1+E5,Mid+None
C89D 31530700         (       monkey.asm):00173                     .dw     Voice3+E4,Mid+None
C8A1 51C50700         (       monkey.asm):00174                     .dw     Voice5+B3,Mid+None
C8A5 623B0700         (       monkey.asm):00175                     .dw     Voice6+G3,Mid+None
C8A9 72A70708         (       monkey.asm):00176                     .dw     Voice7+E3,Mid+Sixteenth
C8AD 1FFF0000         (       monkey.asm):00177                     .dw     Voice1+XX,Off+None
C8B1 3FFF0000         (       monkey.asm):00178                     .dw     Voice3+XX,Off+None
C8B5 5FFF0000         (       monkey.asm):00179                     .dw     Voice5+XX,Off+None
C8B9 6FFF0000         (       monkey.asm):00180                     .dw     Voice6+XX,Off+None
C8BD 7FFF0002         (       monkey.asm):00181                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00182                 
                      (       monkey.asm):00183                     ; 24:3  Voice    Note   Vol   Dur
                      (       monkey.asm):00184                 
C8C1 108F0700         (       monkey.asm):00185                     .dw     Voice1+G5,Mid+None
C8C5 311D0700         (       monkey.asm):00186                     .dw     Voice3+G4,Mid+None
C8C9 51C50700         (       monkey.asm):00187                     .dw     Voice5+B3,Mid+None
C8CD 623B0700         (       monkey.asm):00188                     .dw     Voice6+G3,Mid+None
C8D1 72A70708         (       monkey.asm):00189                     .dw     Voice7+E3,Mid+Sixteenth
C8D5 1FFF0000         (       monkey.asm):00190                     .dw     Voice1+XX,Off+None
C8D9 3FFF0000         (       monkey.asm):00191                     .dw     Voice3+XX,Off+None
C8DD 5FFF0000         (       monkey.asm):00192                     .dw     Voice5+XX,Off+None
C8E1 6FFF0000         (       monkey.asm):00193                     .dw     Voice6+XX,Off+None
C8E5 7FFF0002         (       monkey.asm):00194                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00195                 
                      (       monkey.asm):00196                     ; 24:4  Voice    Note   Vol   Dur
C8E9 10970700         (       monkey.asm):00197                     .dw     Voice1+Fs5,Mid+None
C8ED 312E0708         (       monkey.asm):00198                     .dw     Voice3+Fs4,Mid+Sixteenth
C8F1 1FFF0000         (       monkey.asm):00199                     .dw     Voice1+XX,Off+None
C8F5 3FFF0002         (       monkey.asm):00200                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00201                 
                      (       monkey.asm):00202                     ; 24:5  Voice    Note   Vol   Dur
C8F9 10AA0700         (       monkey.asm):00203                     .dw     Voice1+E5,Mid+None
C8FD 31530708         (       monkey.asm):00204                     .dw     Voice3+E4,Mid+Sixteenth
C901 1FFF0000         (       monkey.asm):00205                     .dw     Voice1+XX,Off+None
C905 3FFF0002         (       monkey.asm):00206                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00207                 
                      (       monkey.asm):00208                     ; 24:6  Voice    Note   Vol   Dur
C909 10BE0700         (       monkey.asm):00209                     .dw     Voice1+D5,Mid+None
C90D 317D0700         (       monkey.asm):00210                     .dw     Voice3+D4,Mid+None
C911 51FC0700         (       monkey.asm):00211                     .dw     Voice5+A3,Mid+None
C915 625D0700         (       monkey.asm):00212                     .dw     Voice6+Fs3,Mid+None
C919 72FA0700         (       monkey.asm):00213                     .dw     Voice7+D3,Mid+None
C91D 85F40708         (       monkey.asm):00214                     .dw     Voice8+D2,Mid+Sixteenth
C921 5FFF0000         (       monkey.asm):00215                     .dw     Voice5+XX,Off+None
C925 6FFF0000         (       monkey.asm):00216                     .dw     Voice6+XX,Off+None
C929 7FFF0000         (       monkey.asm):00217                     .dw     Voice7+XX,Off+None
C92D 8FFF0002         (       monkey.asm):00218                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00219                 
                      (       monkey.asm):00220                     ; 24:7  Voice    Note   Vol   Dur
C931 51FC0700         (       monkey.asm):00221                     .dw     Voice5+A3,Mid+None
C935 625D0700         (       monkey.asm):00222                     .dw     Voice6+Fs3,Mid+None
C939 72FA0700         (       monkey.asm):00223                     .dw     Voice7+D3,Mid+None
C93D 85F40708         (       monkey.asm):00224                     .dw     Voice8+D2,Mid+Sixteenth
C941 1FFF0000         (       monkey.asm):00225                     .dw     Voice1+XX,Off+None
C945 3FFF0000         (       monkey.asm):00226                     .dw     Voice3+XX,Off+None
C949 5FFF0000         (       monkey.asm):00227                     .dw     Voice5+XX,Off+None
C94D 6FFF0000         (       monkey.asm):00228                     .dw     Voice6+XX,Off+None
C951 7FFF0000         (       monkey.asm):00229                     .dw     Voice7+XX,Off+None
C955 8FFF0002         (       monkey.asm):00230                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00231                 
                      (       monkey.asm):00232                     ; 24:8  Voice    Note   Vol   Dur
C959 10AA0700         (       monkey.asm):00233                     .dw     Voice1+E5,Mid+None
C95D 31530700         (       monkey.asm):00234                     .dw     Voice3+E4,Mid+None
C961 86AE0710         (       monkey.asm):00235                     .dw     Voice8+C2,Mid+Eighth
C965 8FFF0002         (       monkey.asm):00236                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00237                 
                      (       monkey.asm):00238                     ; 24:9  Voice    Note   Vol   Dur
C969 523B0700         (       monkey.asm):00239                     .dw     Voice5+G3,Mid+None
C96D 62A70700         (       monkey.asm):00240                     .dw     Voice6+E3,Mid+None
C971 73570700         (       monkey.asm):00241                     .dw     Voice7+C3,Mid+None
C975 86AE0708         (       monkey.asm):00242                     .dw     Voice8+C2,Mid+Sixteenth
C979 5FFF0000         (       monkey.asm):00243                     .dw     Voice5+XX,Off+None
C97D 6FFF0000         (       monkey.asm):00244                     .dw     Voice6+XX,Off+None
C981 7FFF0000         (       monkey.asm):00245                     .dw     Voice7+XX,Off+None
C985 8FFF0002         (       monkey.asm):00246                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00247                 
                      (       monkey.asm):00248                     ; 24:10 Voice    Note   Vol   Dur
C989 523B0700         (       monkey.asm):00249                     .dw     Voice5+G3,Mid+None
C98D 62A70700         (       monkey.asm):00250                     .dw     Voice6+E3,Mid+None
C991 73570700         (       monkey.asm):00251                     .dw     Voice7+C3,Mid+None
C995 86AE0708         (       monkey.asm):00252                     .dw     Voice8+C2,Mid+Sixteenth
C999 1FFF0000         (       monkey.asm):00253                     .dw     Voice1+XX,Off+None
C99D 3FFF0000         (       monkey.asm):00254                     .dw     Voice3+XX,Off+None
C9A1 5FFF0000         (       monkey.asm):00255                     .dw     Voice5+XX,Off+None
C9A5 6FFF0000         (       monkey.asm):00256                     .dw     Voice6+XX,Off+None
C9A9 7FFF0000         (       monkey.asm):00257                     .dw     Voice7+XX,Off+None
C9AD 8FFF0002         (       monkey.asm):00258                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00259                 
                      (       monkey.asm):00260                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00261                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00262                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00263                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00264                 
                      (       monkey.asm):00265                     ; 25:1  Voice    Note   Vol   Dur
C9B1 84750710         (       monkey.asm):00266                     .dw     Voice8+G2,Mid+Eighth
C9B5 8FFF0002         (       monkey.asm):00267                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00268                 
                      (       monkey.asm):00269                     ; 25:2  Voice    Note   Vol   Dur
C9B9 10BE0700         (       monkey.asm):00270                     .dw     Voice1+D5,Mid+None
C9BD 317D0700         (       monkey.asm):00271                     .dw     Voice3+D4,Mid+None
C9C1 523B0700         (       monkey.asm):00272                     .dw     Voice5+G3,Mid+None
C9C5 62FA0700         (       monkey.asm):00273                     .dw     Voice6+D3,Mid+None
C9C9 71C50700         (       monkey.asm):00274                     .dw     Voice7+B3,Mid+None
C9CD 84750708         (       monkey.asm):00275                     .dw     Voice8+G2,Mid+Sixteenth
C9D1 5FFF0000         (       monkey.asm):00276                     .dw     Voice5+XX,Off+None
C9D5 6FFF0000         (       monkey.asm):00277                     .dw     Voice6+XX,Off+None
C9D9 7FFF0000         (       monkey.asm):00278                     .dw     Voice7+XX,Off+None
C9DD 8FFF0002         (       monkey.asm):00279                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00280                 
                      (       monkey.asm):00281                     ; 25:3  Voice    Note   Vol   Dur
C9E1 523B0700         (       monkey.asm):00282                     .dw     Voice5+G3,Mid+None
C9E5 62FA0700         (       monkey.asm):00283                     .dw     Voice6+D3,Mid+None
C9E9 71C50700         (       monkey.asm):00284                     .dw     Voice7+B3,Mid+None
C9ED 84750708         (       monkey.asm):00285                     .dw     Voice8+G2,Mid+Sixteenth
C9F1 1FFF0000         (       monkey.asm):00286                     .dw     Voice1+XX,Off+None
C9F5 3FFF0000         (       monkey.asm):00287                     .dw     Voice3+XX,Off+None
C9F9 5FFF0000         (       monkey.asm):00288                     .dw     Voice5+XX,Off+None
C9FD 6FFF0000         (       monkey.asm):00289                     .dw     Voice6+XX,Off+None
CA01 7FFF0000         (       monkey.asm):00290                     .dw     Voice7+XX,Off+None
CA05 8FFF0002         (       monkey.asm):00291                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00292                 
                      (       monkey.asm):00293                     ; 25:4  Voice    Note   Vol   Dur
CA09 10BE0700         (       monkey.asm):00294                     .dw     Voice1+D5,Mid+None
CA0D 317D0708         (       monkey.asm):00295                     .dw     Voice3+D4,Mid+Sixteenth
CA11 1FFF0000         (       monkey.asm):00296                     .dw     Voice1+XX,Off+None
CA15 3FFF0002         (       monkey.asm):00297                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00298                 
                      (       monkey.asm):00299                     ; 25:5  Voice    Note   Vol   Dur
CA19 10D60700         (       monkey.asm):00300                     .dw     Voice1+C5,Mid+None
CA1D 31AC0708         (       monkey.asm):00301                     .dw     Voice3+C4,Mid+Sixteenth
CA21 1FFF0000         (       monkey.asm):00302                     .dw     Voice1+XX,Off+None
CA25 3FFF0002         (       monkey.asm):00303                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00304                     
                      (       monkey.asm):00305                     ; 25:6  Voice    Note   Vol   Dur
CA29 10E20700         (       monkey.asm):00306                     .dw     Voice1+B4,Mid+None
CA2D 31C50700         (       monkey.asm):00307                     .dw     Voice3+B3,Mid+None
CA31 523B0700         (       monkey.asm):00308                     .dw     Voice5+G3,Mid+None
CA35 62FA0700         (       monkey.asm):00309                     .dw     Voice6+D3,Mid+None
CA39 71C50708         (       monkey.asm):00310                     .dw     Voice7+B3,Mid+Sixteenth
CA3D 1FFF0000         (       monkey.asm):00311                     .dw     Voice1+XX,Off+None
CA41 3FFF0000         (       monkey.asm):00312                     .dw     Voice3+XX,Off+None
CA45 5FFF0000         (       monkey.asm):00313                     .dw     Voice5+XX,Off+None
CA49 6FFF0000         (       monkey.asm):00314                     .dw     Voice6+XX,Off+None
CA4D 7FFF0002         (       monkey.asm):00315                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00316                 
                      (       monkey.asm):00317                     ; 25:7  Voice    Note   Vol   Dur
CA51 10BE0700         (       monkey.asm):00318                     .dw     Voice1+D5,Mid+None
CA55 317D0700         (       monkey.asm):00319                     .dw     Voice3+D4,Mid+None
CA59 523B0700         (       monkey.asm):00320                     .dw     Voice5+G3,Mid+None
CA5D 62FA0700         (       monkey.asm):00321                     .dw     Voice6+D3,Mid+None
CA61 71C50708         (       monkey.asm):00322                     .dw     Voice7+B3,Mid+Sixteenth
CA65 1FFF0000         (       monkey.asm):00323                     .dw     Voice1+XX,Off+None
CA69 3FFF0000         (       monkey.asm):00324                     .dw     Voice3+XX,Off+None
CA6D 5FFF0000         (       monkey.asm):00325                     .dw     Voice5+XX,Off+None
CA71 6FFF0000         (       monkey.asm):00326                     .dw     Voice6+XX,Off+None
CA75 7FFF0002         (       monkey.asm):00327                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00328                 
                      (       monkey.asm):00329                     ; 25:8  Voice    Note   Vol   Dur
CA79 10D60700         (       monkey.asm):00330                     .dw     Voice1+C5,Mid+None
CA7D 31AC0710         (       monkey.asm):00331                     .dw     Voice3+C4,Mid+Eighth
CA81 1FFF0000         (       monkey.asm):00332                     .dw     Voice1+XX,Off+None
CA85 3FFF0002         (       monkey.asm):00333                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00334                 
                      (       monkey.asm):00335                     ; 25:9  Voice    Note   Vol   Dur
CA89 10D60700         (       monkey.asm):00336                     .dw     Voice1+C5,Mid+None
CA8D 31AC0700         (       monkey.asm):00337                     .dw     Voice3+C4,Mid+None
CA91 51FC0700         (       monkey.asm):00338                     .dw     Voice5+A3,Mid+None
CA95 62A70700         (       monkey.asm):00339                     .dw     Voice6+E3,Mid+None
CA99 73570700         (       monkey.asm):00340                     .dw     Voice7+C3,Mid+None
CA9D 83F90708         (       monkey.asm):00341                     .dw     Voice8+A2,Mid+Sixteenth
CAA1 5FFF0000         (       monkey.asm):00342                     .dw     Voice5+XX,Off+None
CAA5 6FFF0000         (       monkey.asm):00343                     .dw     Voice6+XX,Off+None
CAA9 7FFF0000         (       monkey.asm):00344                     .dw     Voice7+XX,Off+None
CAAD 8FFF0002         (       monkey.asm):00345                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00346                 
                      (       monkey.asm):00347                     ; 25:10 Voice    Note   Vol   Dur
CAB1 51FC0700         (       monkey.asm):00348                     .dw     Voice5+A3,Mid+None
CAB5 62A70700         (       monkey.asm):00349                     .dw     Voice6+E3,Mid+None
CAB9 73570700         (       monkey.asm):00350                     .dw     Voice7+C3,Mid+None
CABD 83F90708         (       monkey.asm):00351                     .dw     Voice8+A2,Mid+Sixteenth
CAC1 1FFF0000         (       monkey.asm):00352                     .dw     Voice1+XX,Off+None
CAC5 3FFF0000         (       monkey.asm):00353                     .dw     Voice3+XX,Off+None
CAC9 5FFF0000         (       monkey.asm):00354                     .dw     Voice5+XX,Off+None
CACD 6FFF0000         (       monkey.asm):00355                     .dw     Voice6+XX,Off+None
CAD1 7FFF0000         (       monkey.asm):00356                     .dw     Voice7+XX,Off+None
CAD5 8FFF0002         (       monkey.asm):00357                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00358                 
                      (       monkey.asm):00359                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00360                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00361                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00362                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00363                 
                      (       monkey.asm):00364                     ; 26:1  Voice    Note   Vol   Dur
CAD9 10E20700         (       monkey.asm):00365                     .dw     Voice1+B4,Mid+None
CADD 31C50700         (       monkey.asm):00366                     .dw     Voice3+B3,Mid+None
CAE1 854D0710         (       monkey.asm):00367                     .dw     Voice8+E2,Mid+Eighth
CAE5 8FFF0002         (       monkey.asm):00368                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00369                 
                      (       monkey.asm):00370                     ; 26:2  Voice    Note   Vol   Dur
CAE9 51C50700         (       monkey.asm):00371                     .dw     Voice5+B3,Mid+None
CAED 623B0700         (       monkey.asm):00372                     .dw     Voice6+G3,Mid+None
CAF1 72A70700         (       monkey.asm):00373                     .dw     Voice7+E3,Mid+None
CAF5 854D0708         (       monkey.asm):00374                     .dw     Voice8+E2,Mid+Sixteenth
CAF9 5FFF0000         (       monkey.asm):00375                     .dw     Voice5+XX,Off+None
CAFD 6FFF0000         (       monkey.asm):00376                     .dw     Voice6+XX,Off+None
CB01 7FFF0000         (       monkey.asm):00377                     .dw     Voice7+XX,Off+None
CB05 8FFF0002         (       monkey.asm):00378                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00379                 
                      (       monkey.asm):00380                     ; 26:3  Voice    Note   Vol   Dur
CB09 51C50700         (       monkey.asm):00381                     .dw     Voice5+B3,Mid+None
CB0D 623B0700         (       monkey.asm):00382                     .dw     Voice6+G3,Mid+None
CB11 72A70700         (       monkey.asm):00383                     .dw     Voice7+E3,Mid+None
CB15 854D0708         (       monkey.asm):00384                     .dw     Voice8+E2,Mid+Sixteenth
CB19 1FFF0000         (       monkey.asm):00385                     .dw     Voice1+XX,Off+None
CB1D 3FFF0000         (       monkey.asm):00386                     .dw     Voice3+XX,Off+None
CB21 5FFF0000         (       monkey.asm):00387                     .dw     Voice5+XX,Off+None
CB25 6FFF0000         (       monkey.asm):00388                     .dw     Voice6+XX,Off+None
CB29 7FFF0000         (       monkey.asm):00389                     .dw     Voice7+XX,Off+None
CB2D 8FFF0010         (       monkey.asm):00390                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):00391                 
                      (       monkey.asm):00392                     ; 26:4  Voice    Note   Vol   Dur
CB31 10AA0700         (       monkey.asm):00393                     .dw     Voice1+E5,Mid+None
CB35 31530700         (       monkey.asm):00394                     .dw     Voice3+E4,Mid+None
CB39 51C50700         (       monkey.asm):00395                     .dw     Voice5+B3,Mid+None
CB3D 623B0700         (       monkey.asm):00396                     .dw     Voice6+G3,Mid+None
CB41 72A70708         (       monkey.asm):00397                     .dw     Voice7+E3,Mid+Sixteenth
CB45 5FFF0000         (       monkey.asm):00398                     .dw     Voice5+XX,Off+None
CB49 6FFF0000         (       monkey.asm):00399                     .dw     Voice6+XX,Off+None
CB4D 7FFF0002         (       monkey.asm):00400                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00401                 
                      (       monkey.asm):00402                     ; 26:5  Voice    Note   Vol   Dur
CB51 51C50700         (       monkey.asm):00403                     .dw     Voice5+B3,Mid+None
CB55 623B0700         (       monkey.asm):00404                     .dw     Voice6+G3,Mid+None
CB59 72A70708         (       monkey.asm):00405                     .dw     Voice7+E3,Mid+Sixteenth
CB5D 1FFF0000         (       monkey.asm):00406                     .dw     Voice1+XX,Off+None
CB61 3FFF0000         (       monkey.asm):00407                     .dw     Voice3+XX,Off+None
CB65 5FFF0000         (       monkey.asm):00408                     .dw     Voice5+XX,Off+None
CB69 6FFF0000         (       monkey.asm):00409                     .dw     Voice6+XX,Off+None
CB6D 7FFF0002         (       monkey.asm):00410                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00411                 
                      (       monkey.asm):00412                     ; 26:6  Voice    Note   Vol   Dur
CB71 10AA0700         (       monkey.asm):00413                     .dw     Voice1+E5,Mid+None
CB75 31530710         (       monkey.asm):00414                     .dw     Voice3+E4,Mid+Eighth
                      (       monkey.asm):00415                 
                      (       monkey.asm):00416                     ; 26:7  Voice    Note   Vol   Dur
CB79 51C50700         (       monkey.asm):00417                     .dw     Voice5+B3,Mid+None
CB7D 623B0700         (       monkey.asm):00418                     .dw     Voice6+G3,Mid+None
CB81 72A70708         (       monkey.asm):00419                     .dw     Voice7+E3,Mid+Sixteenth
CB85 5FFF0000         (       monkey.asm):00420                     .dw     Voice5+XX,Off+None
CB89 6FFF0000         (       monkey.asm):00421                     .dw     Voice6+XX,Off+None
CB8D 7FFF0002         (       monkey.asm):00422                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00423                 
                      (       monkey.asm):00424                     ; 26:8  Voice    Note   Vol   Dur
CB91 108F0700         (       monkey.asm):00425                     .dw     Voice1+G5,Mid+None
CB95 311D0700         (       monkey.asm):00426                     .dw     Voice3+G4,Mid+None
CB99 51C50700         (       monkey.asm):00427                     .dw     Voice5+B3,Mid+None
CB9D 623B0700         (       monkey.asm):00428                     .dw     Voice6+G3,Mid+None
CBA1 72A70708         (       monkey.asm):00429                     .dw     Voice7+E3,Mid+Sixteenth
CBA5 1FFF0000         (       monkey.asm):00430                     .dw     Voice1+XX,Off+None
CBA9 3FFF0000         (       monkey.asm):00431                     .dw     Voice3+XX,Off+None
CBAD 5FFF0000         (       monkey.asm):00432                     .dw     Voice5+XX,Off+None
CBB1 6FFF0000         (       monkey.asm):00433                     .dw     Voice6+XX,Off+None
CBB5 7FFF0002         (       monkey.asm):00434                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00435                 
                      (       monkey.asm):00436                     ; 26:9  Voice    Note   Vol   Dur
CBB9 10970700         (       monkey.asm):00437                     .dw     Voice1+Fs5,Mid+None
CBBD 312E0700         (       monkey.asm):00438                     .dw     Voice3+Fs4,Mid+None
CBC1 82FA0708         (       monkey.asm):00439                     .dw     Voice8+D3,Mid+Sixteenth
CBC5 1FFF0000         (       monkey.asm):00440                     .dw     Voice1+XX,Off+None
CBC9 3FFF0002         (       monkey.asm):00441                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00442                 
                      (       monkey.asm):00443                     ; 26:10 Voice    Note   Vol   Dur
CBCD 10AA0700         (       monkey.asm):00444                     .dw     Voice1+E5,Mid+None
CBD1 31530708         (       monkey.asm):00445                     .dw     Voice3+E4,Mid+Sixteenth
CBD5 1FFF0000         (       monkey.asm):00446                     .dw     Voice1+XX,Off+None
CBD9 3FFF0000         (       monkey.asm):00447                     .dw     Voice3+XX,Off+None
CBDD 8FFF0002         (       monkey.asm):00448                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00449                 
                      (       monkey.asm):00450                     ; 26:11 Voice    Note   Vol   Dur
CBE1 10BE0700         (       monkey.asm):00451                     .dw     Voice1+D5,Mid+None
CBE5 317D0700         (       monkey.asm):00452                     .dw     Voice3+D4,Mid+None
CBE9 51FC0700         (       monkey.asm):00453                     .dw     Voice5+A3,Mid+None
CBED 625D0700         (       monkey.asm):00454                     .dw     Voice6+Fs3,Mid+None
CBF1 72FA0700         (       monkey.asm):00455                     .dw     Voice7+D3,Mid+None
CBF5 82FA0708         (       monkey.asm):00456                     .dw     Voice8+D3,Mid+Sixteenth
CBF9 5FFF0000         (       monkey.asm):00457                     .dw     Voice5+XX,Off+None
CBFD 6FFF0000         (       monkey.asm):00458                     .dw     Voice6+XX,Off+None
CC01 7FFF0000         (       monkey.asm):00459                     .dw     Voice7+XX,Off+None
CC05 8FFF0002         (       monkey.asm):00460                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00461                 
                      (       monkey.asm):00462                     ; 26:12 Voice    Note   Vol   Dur
CC09 51FC0700         (       monkey.asm):00463                     .dw     Voice5+A3,Mid+None
CC0D 625D0700         (       monkey.asm):00464                     .dw     Voice6+Fs3,Mid+None
CC11 72FA0700         (       monkey.asm):00465                     .dw     Voice7+D3,Mid+None
CC15 82FA0708         (       monkey.asm):00466                     .dw     Voice8+D3,Mid+Sixteenth
CC19 1FFF0000         (       monkey.asm):00467                     .dw     Voice1+XX,Off+None
CC1D 3FFF0000         (       monkey.asm):00468                     .dw     Voice3+XX,Off+None
CC21 5FFF0000         (       monkey.asm):00469                     .dw     Voice5+XX,Off+None
CC25 6FFF0000         (       monkey.asm):00470                     .dw     Voice6+XX,Off+None
CC29 7FFF0000         (       monkey.asm):00471                     .dw     Voice7+XX,Off+None
CC2D 8FFF0002         (       monkey.asm):00472                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00473                 
                      (       monkey.asm):00474                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00475                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00476                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00477                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00478                 
                      (       monkey.asm):00479                     ; 27:1  Voice    Note   Vol   Dur
CC31 10AA0700         (       monkey.asm):00480                     .dw     Voice1+E5,Mid+None
CC35 31530700         (       monkey.asm):00481                     .dw     Voice3+E4,Mid+None
CC39 83570710         (       monkey.asm):00482                     .dw     Voice8+C3,Mid+Eighth
CC3D 8FFF0002         (       monkey.asm):00483                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00484                 
                      (       monkey.asm):00485                     ; 27:2  Voice    Note   Vol   Dur
CC41 523B0700         (       monkey.asm):00486                     .dw     Voice5+G3,Mid+None
CC45 62A70700         (       monkey.asm):00487                     .dw     Voice6+E3,Mid+None
CC49 73570700         (       monkey.asm):00488                     .dw     Voice7+C3,Mid+None
CC4D 854D0708         (       monkey.asm):00489                     .dw     Voice8+E2,Mid+Sixteenth
CC51 5FFF0000         (       monkey.asm):00490                     .dw     Voice5+XX,Off+None
CC55 6FFF0000         (       monkey.asm):00491                     .dw     Voice6+XX,Off+None
CC59 7FFF0000         (       monkey.asm):00492                     .dw     Voice7+XX,Off+None
CC5D 8FFF0002         (       monkey.asm):00493                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00494                 
                      (       monkey.asm):00495                     ; 27:3  Voice    Note   Vol   Dur
CC61 523B0700         (       monkey.asm):00496                     .dw     Voice5+G3,Mid+None
CC65 62A70700         (       monkey.asm):00497                     .dw     Voice6+E3,Mid+None
CC69 73570700         (       monkey.asm):00498                     .dw     Voice7+C3,Mid+None
CC6D 83570708         (       monkey.asm):00499                     .dw     Voice8+C3,Mid+Sixteenth
CC71 1FFF0000         (       monkey.asm):00500                     .dw     Voice1+XX,Off+None
CC75 3FFF0000         (       monkey.asm):00501                     .dw     Voice3+XX,Off+None
CC79 5FFF0000         (       monkey.asm):00502                     .dw     Voice5+XX,Off+None
CC7D 6FFF0000         (       monkey.asm):00503                     .dw     Voice6+XX,Off+None
CC81 7FFF0000         (       monkey.asm):00504                     .dw     Voice7+XX,Off+None
CC85 8FFF0010         (       monkey.asm):00505                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):00506                 
                      (       monkey.asm):00507                     ; 27:4  Voice    Note   Vol   Dur
CC89 523B0700         (       monkey.asm):00508                     .dw     Voice5+G3,Mid+None
CC8D 62A70700         (       monkey.asm):00509                     .dw     Voice6+E3,Mid+None
CC91 73570708         (       monkey.asm):00510                     .dw     Voice7+C3,Mid+Sixteenth
CC95 5FFF0000         (       monkey.asm):00511                     .dw     Voice5+XX,Off+None
CC99 6FFF0000         (       monkey.asm):00512                     .dw     Voice6+XX,Off+None
CC9D 7FFF0002         (       monkey.asm):00513                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00514                 
                      (       monkey.asm):00515                     ; 27:5  Voice    Note   Vol   Dur
CCA1 10970700         (       monkey.asm):00516                     .dw     Voice1+Fs5,Mid+None
CCA5 312E0700         (       monkey.asm):00517                     .dw     Voice3+Fs4,Mid+None
CCA9 523B0700         (       monkey.asm):00518                     .dw     Voice5+G3,Mid+None
CCAD 62A70700         (       monkey.asm):00519                     .dw     Voice6+E3,Mid+None
CCB1 73570708         (       monkey.asm):00520                     .dw     Voice7+C3,Mid+Sixteenth
CCB5 1FFF0000         (       monkey.asm):00521                     .dw     Voice1+XX,Off+None
CCB9 3FFF0000         (       monkey.asm):00522                     .dw     Voice3+XX,Off+None
CCBD 5FFF0000         (       monkey.asm):00523                     .dw     Voice5+XX,Off+None
CCC1 6FFF0000         (       monkey.asm):00524                     .dw     Voice6+XX,Off+None
CCC5 7FFF0002         (       monkey.asm):00525                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00526                 
                      (       monkey.asm):00527                     ; 27:6  Voice    Note   Vol   Dur
CCC9 108F0700         (       monkey.asm):00528                     .dw     Voice1+G5,Mid+None
CCCD 311D0700         (       monkey.asm):00529                     .dw     Voice3+G4,Mid+None
CCD1 84750708         (       monkey.asm):00530                     .dw     Voice8+G2,Mid+Sixteenth
CCD5 8FFF0002         (       monkey.asm):00531                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00532                 
                      (       monkey.asm):00533                     ; 27:7  Voice    Note   Vol   Dur
CCD9 84750708         (       monkey.asm):00534                     .dw     Voice8+G2,Mid+Sixteenth
CCDD 1FFF0000         (       monkey.asm):00535                     .dw     Voice1+XX,Off+None
CCE1 3FFF0000         (       monkey.asm):00536                     .dw     Voice3+XX,Off+None
CCE5 8FFF0002         (       monkey.asm):00537                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00538                 
                      (       monkey.asm):00539                     ; 27:8  Voice    Note   Vol   Dur
CCE9 108F0700         (       monkey.asm):00540                     .dw     Voice1+G5,Mid+None
CCED 311D0700         (       monkey.asm):00541                     .dw     Voice3+G4,Mid+None
CCF1 523B0700         (       monkey.asm):00542                     .dw     Voice5+G3,Mid+None
CCF5 62FA0700         (       monkey.asm):00543                     .dw     Voice6+D3,Mid+None
CCF9 71C50708         (       monkey.asm):00544                     .dw     Voice7+B3,Mid+Sixteenth
CCFD 5FFF0000         (       monkey.asm):00545                     .dw     Voice5+XX,Off+None
CD01 6FFF0000         (       monkey.asm):00546                     .dw     Voice6+XX,Off+None
CD05 7FFF0002         (       monkey.asm):00547                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00548                 
                      (       monkey.asm):00549                     ; 27:9  Voice    Note   Vol   Dur
CD09 523B0700         (       monkey.asm):00550                     .dw     Voice5+G3,Mid+None
CD0D 62FA0700         (       monkey.asm):00551                     .dw     Voice6+D3,Mid+None
CD11 71C50700         (       monkey.asm):00552                     .dw     Voice7+B3,Mid+None
CD15 84750708         (       monkey.asm):00553                     .dw     Voice8+G2,Mid+Sixteenth
CD19 1FFF0000         (       monkey.asm):00554                     .dw     Voice1+XX,Off+None
CD1D 3FFF0000         (       monkey.asm):00555                     .dw     Voice3+XX,Off+None
CD21 5FFF0000         (       monkey.asm):00556                     .dw     Voice5+XX,Off+None
CD25 6FFF0000         (       monkey.asm):00557                     .dw     Voice6+XX,Off+None
CD29 7FFF0000         (       monkey.asm):00558                     .dw     Voice7+XX,Off+None
CD2D 8FFF0002         (       monkey.asm):00559                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00560                 
                      (       monkey.asm):00561                     ; 27:10 Voice    Note   Vol   Dur
CD31 107F0700         (       monkey.asm):00562                     .dw     Voice1+A5,Mid+None
CD35 30FE0700         (       monkey.asm):00563                     .dw     Voice3+A4,Mid+None
CD39 83F90708         (       monkey.asm):00564                     .dw     Voice8+A2,Mid+Sixteenth
CD3D 8FFF0008         (       monkey.asm):00565                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):00566                 
                      (       monkey.asm):00567                     ; 27:11 Voice    Note   Vol   Dur
CD41 51FC0700         (       monkey.asm):00568                     .dw     Voice5+A3,Mid+None
CD45 62A70700         (       monkey.asm):00569                     .dw     Voice6+E3,Mid+None
CD49 73570700         (       monkey.asm):00570                     .dw     Voice7+C3,Mid+None
CD4D 83F90708         (       monkey.asm):00571                     .dw     Voice8+A2,Mid+Sixteenth
CD51 5FFF0000         (       monkey.asm):00572                     .dw     Voice5+XX,Off+None
CD55 6FFF0000         (       monkey.asm):00573                     .dw     Voice6+XX,Off+None
CD59 7FFF0002         (       monkey.asm):00574                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00575                 
                      (       monkey.asm):00576                     ; 27:12 Voice    Note   Vol   Dur
CD5D 51FC0700         (       monkey.asm):00577                     .dw     Voice5+A3,Mid+None
CD61 62A70700         (       monkey.asm):00578                     .dw     Voice6+E3,Mid+None
CD65 73570708         (       monkey.asm):00579                     .dw     Voice7+C3,Mid+Sixteenth
CD69 1FFF0000         (       monkey.asm):00580                     .dw     Voice1+XX,Off+None
CD6D 3FFF0000         (       monkey.asm):00581                     .dw     Voice3+XX,Off+None
CD71 5FFF0000         (       monkey.asm):00582                     .dw     Voice5+XX,Off+None
CD75 6FFF0000         (       monkey.asm):00583                     .dw     Voice6+XX,Off+None
CD79 7FFF0000         (       monkey.asm):00584                     .dw     Voice7+XX,Off+None
CD7D 8FFF0002         (       monkey.asm):00585                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00586                 
                      (       monkey.asm):00587                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00588                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00589                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00590                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00591                 
                      (       monkey.asm):00592                     ; 28:1  Voice    Note   Vol   Dur
CD81 10970700         (       monkey.asm):00593                     .dw     Voice1+Fs5,Mid+None
CD85 312E0710         (       monkey.asm):00594                     .dw     Voice3+Fs4,Mid+Eighth
                      (       monkey.asm):00595                 
                      (       monkey.asm):00596                     ; 28:2  Voice    Note   Vol   Dur
CD89 525D0700         (       monkey.asm):00597                     .dw     Voice5+Fs3,Mid+None
CD8D 62FA0700         (       monkey.asm):00598                     .dw     Voice6+D3,Mid+None
CD91 71FC0708         (       monkey.asm):00599                     .dw     Voice7+A3,Mid+Sixteenth
CD95 1FFF0000         (       monkey.asm):00600                     .dw     Voice1+XX,Off+None
CD99 3FFF0000         (       monkey.asm):00601                     .dw     Voice3+XX,Off+None
CD9D 5FFF0000         (       monkey.asm):00602                     .dw     Voice5+XX,Off+None
CDA1 6FFF0000         (       monkey.asm):00603                     .dw     Voice6+XX,Off+None
CDA5 7FFF0002         (       monkey.asm):00604                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00605                 
                      (       monkey.asm):00606                     ; 28:3  Voice    Note   Vol   Dur
CDA9 108F0700         (       monkey.asm):00607                     .dw     Voice1+G5,Mid+None
CDAD 311D0700         (       monkey.asm):00608                     .dw     Voice3+G4,Mid+None
CDB1 525D0700         (       monkey.asm):00609                     .dw     Voice5+Fs3,Mid+None
CDB5 62FA0700         (       monkey.asm):00610                     .dw     Voice6+D3,Mid+None
CDB9 71FC0708         (       monkey.asm):00611                     .dw     Voice7+A3,Mid+Sixteenth
CDBD 1FFF0000         (       monkey.asm):00612                     .dw     Voice1+XX,Off+None
CDC1 3FFF0000         (       monkey.asm):00613                     .dw     Voice3+XX,Off+None
CDC5 5FFF0000         (       monkey.asm):00614                     .dw     Voice5+XX,Off+None
CDC9 6FFF0000         (       monkey.asm):00615                     .dw     Voice6+XX,Off+None
CDCD 7FFF0002         (       monkey.asm):00616                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00617                 
                      (       monkey.asm):00618                     ; 28:4  Voice    Note   Vol   Dur
CDD1 10970700         (       monkey.asm):00619                     .dw     Voice1+Fs5,Mid+None
CDD5 312E0708         (       monkey.asm):00620                     .dw     Voice3+Fs4,Mid+Sixteenth
CDD9 1FFF0000         (       monkey.asm):00621                     .dw     Voice1+XX,Off+None
CDDD 3FFF0002         (       monkey.asm):00622                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00623                 
                      (       monkey.asm):00624                     ; 28:5  Voice    Note   Vol   Dur
CDE1 10AA0700         (       monkey.asm):00625                     .dw     Voice1+E5,Mid+None
CDE5 31530708         (       monkey.asm):00626                     .dw     Voice3+E4,Mid+Sixteenth
CDE9 1FFF0000         (       monkey.asm):00627                     .dw     Voice1+XX,Off+None
CDED 3FFF0002         (       monkey.asm):00628                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00629                 
                      (       monkey.asm):00630                     ; 28:6  Voice    Note   Vol   Dur
CDF1 10BE0700         (       monkey.asm):00631                     .dw     Voice1+D5,Mid+None
CDF5 317D0700         (       monkey.asm):00632                     .dw     Voice3+D4,Mid+None
CDF9 525D0700         (       monkey.asm):00633                     .dw     Voice5+Fs3,Mid+None
CDFD 62FA0700         (       monkey.asm):00634                     .dw     Voice6+D3,Mid+None
CE01 71FC0708         (       monkey.asm):00635                     .dw     Voice7+A3,Mid+Sixteenth
CE05 1FFF0000         (       monkey.asm):00636                     .dw     Voice1+XX,Off+None
CE09 3FFF0000         (       monkey.asm):00637                     .dw     Voice3+XX,Off+None
CE0D 5FFF0000         (       monkey.asm):00638                     .dw     Voice5+XX,Off+None
CE11 6FFF0000         (       monkey.asm):00639                     .dw     Voice6+XX,Off+None
CE15 7FFF0002         (       monkey.asm):00640                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00641                 
                      (       monkey.asm):00642                     ; 28:7  Voice    Note   Vol   Dur
CE19 10970700         (       monkey.asm):00643                     .dw     Voice1+Fs5,Mid+None
CE1D 312E0700         (       monkey.asm):00644                     .dw     Voice3+Fs4,Mid+None
CE21 525D0700         (       monkey.asm):00645                     .dw     Voice5+Fs3,Mid+None
CE25 62FA0700         (       monkey.asm):00646                     .dw     Voice6+D3,Mid+None
CE29 71FC0708         (       monkey.asm):00647                     .dw     Voice7+A3,Mid+Sixteenth
CE2D 1FFF0000         (       monkey.asm):00648                     .dw     Voice1+XX,Off+None
CE31 3FFF0000         (       monkey.asm):00649                     .dw     Voice3+XX,Off+None
CE35 5FFF0000         (       monkey.asm):00650                     .dw     Voice5+XX,Off+None
CE39 6FFF0000         (       monkey.asm):00651                     .dw     Voice6+XX,Off+None
CE3D 7FFF0002         (       monkey.asm):00652                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00653                 
                      (       monkey.asm):00654                     ; 28:8  Voice    Note   Vol   Dur
CE41 108F0700         (       monkey.asm):00655                     .dw     Voice1+G5,Mid+None
CE45 311D0700         (       monkey.asm):00656                     .dw     Voice3+G4,Mid+None
CE49 823B0708         (       monkey.asm):00657                     .dw     Voice8+G3,Mid+Sixteenth
CE4D 8FFF0002         (       monkey.asm):00658                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00659                 
                      (       monkey.asm):00660                     ; 28:9  Voice    Note   Vol   Dur
CE51 823B0708         (       monkey.asm):00661                     .dw     Voice8+G3,Mid+Sixteenth
CE55 1FFF0000         (       monkey.asm):00662                     .dw     Voice1+XX,Off+None
CE59 3FFF0000         (       monkey.asm):00663                     .dw     Voice3+XX,Off+None
CE5D 8FFF0002         (       monkey.asm):00664                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00665                 
                      (       monkey.asm):00666                     ; 28:10 Voice    Note   Vol   Dur
CE61 108F0700         (       monkey.asm):00667                     .dw     Voice1+G5,Mid+None
CE65 311D0700         (       monkey.asm):00668                     .dw     Voice3+G4,Mid+None
CE69 523B0700         (       monkey.asm):00669                     .dw     Voice5+G3,Mid+None
CE6D 62FA0700         (       monkey.asm):00670                     .dw     Voice6+D3,Mid+None
CE71 71C50708         (       monkey.asm):00671                     .dw     Voice7+B3,Mid+Sixteenth
CE75 5FFF0000         (       monkey.asm):00672                     .dw     Voice5+XX,Off+None
CE79 6FFF0000         (       monkey.asm):00673                     .dw     Voice6+XX,Off+None
CE7D 7FFF0002         (       monkey.asm):00674                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00675                 
                      (       monkey.asm):00676                     ; 28:11 Voice    Note   Vol   Dur
CE81 523B0700         (       monkey.asm):00677                     .dw     Voice5+G3,Mid+None
CE85 62FA0700         (       monkey.asm):00678                     .dw     Voice6+D3,Mid+None
CE89 71C50700         (       monkey.asm):00679                     .dw     Voice7+B3,Mid+None
CE8D 823B0708         (       monkey.asm):00680                     .dw     Voice8+G3,Mid+Sixteenth
CE91 1FFF0000         (       monkey.asm):00681                     .dw     Voice1+XX,Off+None
CE95 3FFF0000         (       monkey.asm):00682                     .dw     Voice3+XX,Off+None
CE99 5FFF0000         (       monkey.asm):00683                     .dw     Voice5+XX,Off+None
CE9D 6FFF0000         (       monkey.asm):00684                     .dw     Voice6+XX,Off+None
CEA1 7FFF0000         (       monkey.asm):00685                     .dw     Voice7+XX,Off+None
CEA5 8FFF0002         (       monkey.asm):00686                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00687                 
                      (       monkey.asm):00688                     ; 28:12 Voice    Note   Vol   Dur
CEA9 10970700         (       monkey.asm):00689                     .dw     Voice1+Fs5,Mid+None
CEAD 312E0700         (       monkey.asm):00690                     .dw     Voice3+Fs4,Mid+None
CEB1 82CF0708         (       monkey.asm):00691                     .dw     Voice8+Eb3,Mid+Sixteenth
CEB5 8FFF0008         (       monkey.asm):00692                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):00693                 
                      (       monkey.asm):00694                     ; 28:13 Voice    Note   Vol   Dur
CEB9 525D0700         (       monkey.asm):00695                     .dw     Voice5+Fs3,Mid+None
CEBD 62CF0700         (       monkey.asm):00696                     .dw     Voice6+Ds3,Mid+None
CEC1 71C50700         (       monkey.asm):00697                     .dw     Voice7+B3,Mid+None
CEC5 82CF0708         (       monkey.asm):00698                     .dw     Voice8+Eb3,Mid+Sixteenth
CEC9 5FFF0700         (       monkey.asm):00699                     .dw     Voice5+XX,Mid+None
CECD 6FFF0700         (       monkey.asm):00700                     .dw     Voice6+XX,Mid+None
CED1 7FFF0700         (       monkey.asm):00701                     .dw     Voice7+XX,Mid+None
CED5 8FFF0702         (       monkey.asm):00702                     .dw     Voice8+XX,Mid+Pause
                      (       monkey.asm):00703                 
                      (       monkey.asm):00704                     ; 28:14 Voice    Note   Vol   Dur
CED9 525D0700         (       monkey.asm):00705                     .dw     Voice5+Fs3,Mid+None
CEDD 62CF0700         (       monkey.asm):00706                     .dw     Voice6+Ds3,Mid+None
CEE1 71C50700         (       monkey.asm):00707                     .dw     Voice7+B3,Mid+None
CEE5 82CF0708         (       monkey.asm):00708                     .dw     Voice8+Eb3,Mid+Sixteenth
CEE9 1FFF0000         (       monkey.asm):00709                     .dw     Voice1+XX,Off+None
CEED 3FFF0000         (       monkey.asm):00710                     .dw     Voice3+XX,Off+None
CEF1 5FFF0000         (       monkey.asm):00711                     .dw     Voice5+XX,Off+None
CEF5 6FFF0000         (       monkey.asm):00712                     .dw     Voice6+XX,Off+None
CEF9 7FFF0000         (       monkey.asm):00713                     .dw     Voice7+XX,Off+None
CEFD 8FFF0002         (       monkey.asm):00714                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00715                 
                      (       monkey.asm):00716                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00717                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00718                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00719                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00720                 
                      (       monkey.asm):00721                     ; 29:1  Voice    Note   Vol   Dur
CF01 10AA0700         (       monkey.asm):00722                     .dw     Voice1+E5,Mid+None
CF05 31530700         (       monkey.asm):00723                     .dw     Voice3+E4,Mid+None
CF09 854D0708         (       monkey.asm):00724                     .dw     Voice8+E2,Mid+Sixteenth
CF0D 8FFF0002         (       monkey.asm):00725                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00726                     
                      (       monkey.asm):00727                     ; 29:2  Voice    Note   Vol   Dur
CF11 854D0708         (       monkey.asm):00728                     .dw     Voice8+E2,Mid+Sixteenth
CF15 8FFF0002         (       monkey.asm):00729                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00730                 
                      (       monkey.asm):00731                     ; 29:3  Voice    Note   Vol   Dur
CF19 523B0700         (       monkey.asm):00732                     .dw     Voice5+G3,Mid+None
CF1D 62A70700         (       monkey.asm):00733                     .dw     Voice6+E3,Mid+None
CF21 71C50708         (       monkey.asm):00734                     .dw     Voice7+B3,Mid+Sixteenth
CF25 1FFF0000         (       monkey.asm):00735                     .dw     Voice1+XX,Off+None
CF29 3FFF0000         (       monkey.asm):00736                     .dw     Voice3+XX,Off+None
CF2D 5FFF0000         (       monkey.asm):00737                     .dw     Voice5+XX,Off+None
CF31 6FFF0000         (       monkey.asm):00738                     .dw     Voice6+XX,Off+None
CF35 7FFF0002         (       monkey.asm):00739                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00740                 
                      (       monkey.asm):00741                     ; 29:4  Voice    Note   Vol   Dur
CF39 108F0700         (       monkey.asm):00742                     .dw     Voice1+G5,Mid+None
CF3D 311D0700         (       monkey.asm):00743                     .dw     Voice3+G4,Mid+None
CF41 523B0700         (       monkey.asm):00744                     .dw     Voice5+G3,Mid+None
CF45 62A70700         (       monkey.asm):00745                     .dw     Voice6+E3,Mid+None
CF49 71C50708         (       monkey.asm):00746                     .dw     Voice7+B3,Mid+Sixteenth
CF4D 1FFF0000         (       monkey.asm):00747                     .dw     Voice1+XX,Off+None
CF51 3FFF0000         (       monkey.asm):00748                     .dw     Voice3+XX,Off+None
CF55 5FFF0000         (       monkey.asm):00749                     .dw     Voice5+XX,Off+None
CF59 6FFF0000         (       monkey.asm):00750                     .dw     Voice6+XX,Off+None
CF5D 7FFF0002         (       monkey.asm):00751                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00752                 
                      (       monkey.asm):00753                     ; 29:5  Voice    Note   Vol   Dur
CF61 10970700         (       monkey.asm):00754                     .dw     Voice1+Fs5,Mid+None
CF65 312E0708         (       monkey.asm):00755                     .dw     Voice3+Fs4,Mid+Sixteenth
CF69 1FFF0000         (       monkey.asm):00756                     .dw     Voice1+XX,Off+None
CF6D 3FFF0002         (       monkey.asm):00757                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00758                 
                      (       monkey.asm):00759                     ; 29:6  Voice    Note   Vol   Dur
CF71 10AA0700         (       monkey.asm):00760                     .dw     Voice1+E5,Mid+None
CF75 31530708         (       monkey.asm):00761                     .dw     Voice3+E4,Mid+Sixteenth
CF79 1FFF0000         (       monkey.asm):00762                     .dw     Voice1+XX,Off+None
CF7D 3FFF0002         (       monkey.asm):00763                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00764                 
                      (       monkey.asm):00765                     ; 29:7  Voice    Note   Vol   Dur
CF81 10BE0700         (       monkey.asm):00766                     .dw     Voice1+D5,Mid+None
CF85 317D0700         (       monkey.asm):00767                     .dw     Voice3+D4,Mid+None
CF89 525D0700         (       monkey.asm):00768                     .dw     Voice5+Fs3,Mid+None
CF8D 62FA0700         (       monkey.asm):00769                     .dw     Voice6+D3,Mid+None
CF91 71FC0708         (       monkey.asm):00770                     .dw     Voice7+A3,Mid+Sixteenth
CF95 1FFF0000         (       monkey.asm):00771                     .dw     Voice1+XX,Off+None
CF99 3FFF0000         (       monkey.asm):00772                     .dw     Voice3+XX,Off+None
CF9D 5FFF0000         (       monkey.asm):00773                     .dw     Voice5+XX,Off+None
CFA1 6FFF0000         (       monkey.asm):00774                     .dw     Voice6+XX,Off+None
CFA5 7FFF0002         (       monkey.asm):00775                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00776                 
                      (       monkey.asm):00777                     ; 29:8  Voice    Note   Vol   Dur
CFA9 10970700         (       monkey.asm):00778                     .dw     Voice1+Fs5,Mid+None
CFAD 312E0700         (       monkey.asm):00779                     .dw     Voice3+Fs4,Mid+None
CFB1 525D0700         (       monkey.asm):00780                     .dw     Voice5+Fs3,Mid+None
CFB5 62FA0700         (       monkey.asm):00781                     .dw     Voice6+D3,Mid+None
CFB9 71FC0708         (       monkey.asm):00782                     .dw     Voice7+A3,Mid+Sixteenth
CFBD 1FFF0000         (       monkey.asm):00783                     .dw     Voice1+XX,Off+None
CFC1 3FFF0000         (       monkey.asm):00784                     .dw     Voice3+XX,Off+None
CFC5 5FFF0000         (       monkey.asm):00785                     .dw     Voice5+XX,Off+None
CFC9 6FFF0000         (       monkey.asm):00786                     .dw     Voice6+XX,Off+None
CFCD 7FFF0002         (       monkey.asm):00787                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00788                 
                      (       monkey.asm):00789                     ; 29:9  Voice    Note   Vol   Dur
CFD1 108F0700         (       monkey.asm):00790                     .dw     Voice1+G5,Mid+None
CFD5 311D0700         (       monkey.asm):00791                     .dw     Voice3+G4,Mid+None
CFD9 88EB0708         (       monkey.asm):00792                     .dw     Voice8+G1,Mid+Sixteenth
CFDD 8FFF0002         (       monkey.asm):00793                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00794                 
                      (       monkey.asm):00795                     ; 29:10 Voice    Note   Vol   Dur
CFE1 88EB0708         (       monkey.asm):00796                     .dw     Voice8+G1,Mid+Sixteenth
CFE5 1FFF0000         (       monkey.asm):00797                     .dw     Voice1+XX,Off+None
CFE9 3FFF0000         (       monkey.asm):00798                     .dw     Voice3+XX,Off+None
CFED 8FFF0002         (       monkey.asm):00799                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00800                 
                      (       monkey.asm):00801                     ; 29:11 Voice    Note   Vol   Dur
CFF1 108F0700         (       monkey.asm):00802                     .dw     Voice1+G5,Mid+None
CFF5 311D0700         (       monkey.asm):00803                     .dw     Voice3+G4,Mid+None
CFF9 523B0700         (       monkey.asm):00804                     .dw     Voice5+G3,Mid+None
CFFD 62FA0700         (       monkey.asm):00805                     .dw     Voice6+D3,Mid+None
D001 71C50708         (       monkey.asm):00806                     .dw     Voice7+B3,Mid+Sixteenth
D005 5FFF0000         (       monkey.asm):00807                     .dw     Voice5+XX,Off+None
D009 6FFF0000         (       monkey.asm):00808                     .dw     Voice6+XX,Off+None
D00D 7FFF0002         (       monkey.asm):00809                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00810                 
                      (       monkey.asm):00811                     ; 29:12 Voice    Note   Vol   Dur
D011 523B0700         (       monkey.asm):00812                     .dw     Voice5+G3,Mid+None
D015 62FA0700         (       monkey.asm):00813                     .dw     Voice6+D3,Mid+None
D019 71C50700         (       monkey.asm):00814                     .dw     Voice7+B3,Mid+None
D01D 88EB0708         (       monkey.asm):00815                     .dw     Voice8+G1,Mid+Sixteenth
D021 1FFF0000         (       monkey.asm):00816                     .dw     Voice1+XX,Off+None
D025 3FFF0000         (       monkey.asm):00817                     .dw     Voice3+XX,Off+None
D029 5FFF0000         (       monkey.asm):00818                     .dw     Voice5+XX,Off+None
D02D 6FFF0000         (       monkey.asm):00819                     .dw     Voice6+XX,Off+None
D031 7FFF0000         (       monkey.asm):00820                     .dw     Voice7+XX,Off+None
D035 8FFF0002         (       monkey.asm):00821                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00822                 
                      (       monkey.asm):00823                     ; 29:13 Voice    Note   Vol   Dur
D039 10970700         (       monkey.asm):00824                     .dw     Voice1+Fs5,Mid+None
D03D 312E0700         (       monkey.asm):00825                     .dw     Voice3+Fs4,Mid+None
D041 87140708         (       monkey.asm):00826                     .dw     Voice8+B1,Mid+Sixteenth
D045 8FFF0008         (       monkey.asm):00827                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):00828                 
                      (       monkey.asm):00829                     ; 29:14 Voice    Note   Vol   Dur
D049 525D0700         (       monkey.asm):00830                     .dw     Voice5+Fs3,Mid+None
D04D 62CF0700         (       monkey.asm):00831                     .dw     Voice6+Ds3,Mid+None
D051 71C50700         (       monkey.asm):00832                     .dw     Voice7+B3,Mid+None
D055 87140708         (       monkey.asm):00833                     .dw     Voice8+B1,Mid+Sixteenth
D059 5FFF0700         (       monkey.asm):00834                     .dw     Voice5+XX,Mid+None
D05D 6FFF0700         (       monkey.asm):00835                     .dw     Voice6+XX,Mid+None
D061 7FFF0700         (       monkey.asm):00836                     .dw     Voice7+XX,Mid+None
D065 8FFF0702         (       monkey.asm):00837                     .dw     Voice8+XX,Mid+Pause
                      (       monkey.asm):00838                 
                      (       monkey.asm):00839                     ; 29:15 Voice    Note   Vol   Dur
D069 525D0700         (       monkey.asm):00840                     .dw     Voice5+Fs3,Mid+None
D06D 62CF0700         (       monkey.asm):00841                     .dw     Voice6+Ds3,Mid+None
D071 71C50700         (       monkey.asm):00842                     .dw     Voice7+B3,Mid+None
D075 87140708         (       monkey.asm):00843                     .dw     Voice8+B1,Mid+Sixteenth
D079 1FFF0000         (       monkey.asm):00844                     .dw     Voice1+XX,Off+None
D07D 3FFF0000         (       monkey.asm):00845                     .dw     Voice3+XX,Off+None
D081 5FFF0000         (       monkey.asm):00846                     .dw     Voice5+XX,Off+None
D085 6FFF0000         (       monkey.asm):00847                     .dw     Voice6+XX,Off+None
D089 7FFF0000         (       monkey.asm):00848                     .dw     Voice7+XX,Off+None
D08D 8FFF0002         (       monkey.asm):00849                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00850                 
                      (       monkey.asm):00851                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00852                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00853                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00854                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00855                 
                      (       monkey.asm):00856                     ; 30:1  Voice    Note   Vol   Dur
D091 10AA0700         (       monkey.asm):00857                     .dw     Voice1+E5,Mid+None
D095 31530700         (       monkey.asm):00858                     .dw     Voice3+E4,Mid+None
D099 854D0708         (       monkey.asm):00859                     .dw     Voice8+E2,Mid+Sixteenth
D09D 8FFF0002         (       monkey.asm):00860                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00861                     
                      (       monkey.asm):00862                     ; 30:2  Voice    Note   Vol   Dur
D0A1 854D0708         (       monkey.asm):00863                     .dw     Voice8+E2,Mid+Sixteenth
D0A5 8FFF0002         (       monkey.asm):00864                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00865                 
                      (       monkey.asm):00866                     ; 30:3  Voice    Note   Vol   Dur
D0A9 523B0700         (       monkey.asm):00867                     .dw     Voice5+G3,Mid+None
D0AD 62A70700         (       monkey.asm):00868                     .dw     Voice6+E3,Mid+None
D0B1 71C50708         (       monkey.asm):00869                     .dw     Voice7+B3,Mid+Sixteenth
D0B5 1FFF0000         (       monkey.asm):00870                     .dw     Voice1+XX,Off+None
D0B9 3FFF0000         (       monkey.asm):00871                     .dw     Voice3+XX,Off+None
D0BD 5FFF0000         (       monkey.asm):00872                     .dw     Voice5+XX,Off+None
D0C1 6FFF0000         (       monkey.asm):00873                     .dw     Voice6+XX,Off+None
D0C5 7FFF0002         (       monkey.asm):00874                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00875                 
                      (       monkey.asm):00876                     ; 30:4  Voice    Note   Vol   Dur
D0C9 108F0700         (       monkey.asm):00877                     .dw     Voice1+G5,Mid+None
D0CD 311D0700         (       monkey.asm):00878                     .dw     Voice3+G4,Mid+None
D0D1 523B0700         (       monkey.asm):00879                     .dw     Voice5+G3,Mid+None
D0D5 62A70700         (       monkey.asm):00880                     .dw     Voice6+E3,Mid+None
D0D9 71C50708         (       monkey.asm):00881                     .dw     Voice7+B3,Mid+Sixteenth
D0DD 1FFF0000         (       monkey.asm):00882                     .dw     Voice1+XX,Off+None
D0E1 3FFF0000         (       monkey.asm):00883                     .dw     Voice3+XX,Off+None
D0E5 5FFF0000         (       monkey.asm):00884                     .dw     Voice5+XX,Off+None
D0E9 6FFF0000         (       monkey.asm):00885                     .dw     Voice6+XX,Off+None
D0ED 7FFF0002         (       monkey.asm):00886                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00887                 
                      (       monkey.asm):00888                     ; 30:5  Voice    Note   Vol   Dur
D0F1 10970700         (       monkey.asm):00889                     .dw     Voice1+Fs5,Mid+None
D0F5 312E0708         (       monkey.asm):00890                     .dw     Voice3+Fs4,Mid+Sixteenth
D0F9 1FFF0000         (       monkey.asm):00891                     .dw     Voice1+XX,Off+None
D0FD 3FFF0002         (       monkey.asm):00892                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00893                 
                      (       monkey.asm):00894                     ; 30:6  Voice    Note   Vol   Dur
D101 10AA0700         (       monkey.asm):00895                     .dw     Voice1+E5,Mid+None
D105 31530708         (       monkey.asm):00896                     .dw     Voice3+E4,Mid+Sixteenth
D109 1FFF0000         (       monkey.asm):00897                     .dw     Voice1+XX,Off+None
D10D 3FFF0002         (       monkey.asm):00898                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00899                 
                      (       monkey.asm):00900                     ; 30:7  Voice    Note   Vol   Dur
D111 10BE0700         (       monkey.asm):00901                     .dw     Voice1+D5,Mid+None
D115 317D0700         (       monkey.asm):00902                     .dw     Voice3+D4,Mid+None
D119 525D0700         (       monkey.asm):00903                     .dw     Voice5+Fs3,Mid+None
D11D 62FA0700         (       monkey.asm):00904                     .dw     Voice6+D3,Mid+None
D121 71FC0708         (       monkey.asm):00905                     .dw     Voice7+A3,Mid+Sixteenth
D125 5FFF0000         (       monkey.asm):00906                     .dw     Voice5+XX,Off+None
D129 6FFF0000         (       monkey.asm):00907                     .dw     Voice6+XX,Off+None
D12D 7FFF0002         (       monkey.asm):00908                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00909                 
                      (       monkey.asm):00910                     ; 30:8  Voice    Note   Vol   Dur
D131 525D0700         (       monkey.asm):00911                     .dw     Voice5+Fs3,Mid+None
D135 62FA0700         (       monkey.asm):00912                     .dw     Voice6+D3,Mid+None
D139 71FC0708         (       monkey.asm):00913                     .dw     Voice7+A3,Mid+Sixteenth
D13D 1FFF0000         (       monkey.asm):00914                     .dw     Voice1+XX,Off+None
D141 3FFF0000         (       monkey.asm):00915                     .dw     Voice3+XX,Off+None
D145 5FFF0000         (       monkey.asm):00916                     .dw     Voice5+XX,Off+None
D149 6FFF0000         (       monkey.asm):00917                     .dw     Voice6+XX,Off+None
D14D 7FFF0002         (       monkey.asm):00918                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00919                 
                      (       monkey.asm):00920                     ; 30:9  Voice    Note   Vol   Dur
D151 10AA0700         (       monkey.asm):00921                     .dw     Voice1+E5,Mid+None
D155 31530700         (       monkey.asm):00922                     .dw     Voice3+E4,Mid+None
D159 86AE0708         (       monkey.asm):00923                     .dw     Voice8+C2,Mid+Sixteenth
D15D 8FFF0002         (       monkey.asm):00924                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00925                 
                      (       monkey.asm):00926                     ; 30:10 Voice    Note   Vol   Dur
D161 86AE0708         (       monkey.asm):00927                     .dw     Voice8+C2,Mid+Sixteenth
D165 1FFF0000         (       monkey.asm):00928                     .dw     Voice1+XX,Off+None
D169 3FFF0002         (       monkey.asm):00929                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):00930                 
                      (       monkey.asm):00931                     ; 30:11 Voice    Note   Vol   Dur
D16D 10AA0700         (       monkey.asm):00932                     .dw     Voice1+E5,Mid+None
D171 31530700         (       monkey.asm):00933                     .dw     Voice3+E4,Mid+None
D175 523B0700         (       monkey.asm):00934                     .dw     Voice5+G3,Mid+None
D179 62A70700         (       monkey.asm):00935                     .dw     Voice6+E3,Mid+None
D17D 73570708         (       monkey.asm):00936                     .dw     Voice7+C3,Mid+Sixteenth
D181 5FFF0000         (       monkey.asm):00937                     .dw     Voice5+XX,Off+None
D185 6FFF0000         (       monkey.asm):00938                     .dw     Voice6+XX,Off+None
D189 7FFF0000         (       monkey.asm):00939                     .dw     Voice7+XX,Off+None
D18D 8FFF0002         (       monkey.asm):00940                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00941                 
                      (       monkey.asm):00942                     ; 30:12 Voice    Note   Vol   Dur
D191 523B0700         (       monkey.asm):00943                     .dw     Voice5+G3,Mid+None
D195 62A70700         (       monkey.asm):00944                     .dw     Voice6+E3,Mid+None
D199 73570700         (       monkey.asm):00945                     .dw     Voice7+C3,Mid+None
D19D 86AE0708         (       monkey.asm):00946                     .dw     Voice8+C2,Mid+Sixteenth
D1A1 1FFF0000         (       monkey.asm):00947                     .dw     Voice1+XX,Off+None
D1A5 3FFF0000         (       monkey.asm):00948                     .dw     Voice3+XX,Off+None
D1A9 5FFF0000         (       monkey.asm):00949                     .dw     Voice5+XX,Off+None
D1AD 6FFF0000         (       monkey.asm):00950                     .dw     Voice6+XX,Off+None
D1B1 7FFF0000         (       monkey.asm):00951                     .dw     Voice7+XX,Off+None
D1B5 8FFF0002         (       monkey.asm):00952                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):00953                 
                      (       monkey.asm):00954                     ; 30:13 Voice    Note   Vol   Dur
D1B9 10AA0700         (       monkey.asm):00955                     .dw     Voice1+E5,Mid+None
D1BD 31530700         (       monkey.asm):00956                     .dw     Voice3+E4,Mid+None
D1C1 86AE0710         (       monkey.asm):00957                     .dw     Voice8+C2,Mid+Eighth
                      (       monkey.asm):00958                     
                      (       monkey.asm):00959                     ; 30:14 Voice    Note   Vol   Dur
D1C5 523B0700         (       monkey.asm):00960                     .dw     Voice5+G3,Mid+None
D1C9 62A70700         (       monkey.asm):00961                     .dw     Voice6+E3,Mid+None
D1CD 73570708         (       monkey.asm):00962                     .dw     Voice7+C3,Mid+Sixteenth
D1D1 5FFF0000         (       monkey.asm):00963                     .dw     Voice5+XX,Off+None
D1D5 6FFF0000         (       monkey.asm):00964                     .dw     Voice6+XX,Off+None
D1D9 7FFF0002         (       monkey.asm):00965                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00966                     
                      (       monkey.asm):00967                     ; 30:15 Voice    Note   Vol   Dur
D1DD 523B0700         (       monkey.asm):00968                     .dw     Voice5+G3,Mid+None
D1E1 62A70700         (       monkey.asm):00969                     .dw     Voice6+E3,Mid+None
D1E5 73570708         (       monkey.asm):00970                     .dw     Voice7+C3,Mid+Sixteenth
D1E9 1FFF0000         (       monkey.asm):00971                     .dw     Voice1+XX,Off+None
D1ED 3FFF0000         (       monkey.asm):00972                     .dw     Voice3+XX,Off+None
D1F1 5FFF0000         (       monkey.asm):00973                     .dw     Voice5+XX,Off+None
D1F5 6FFF0000         (       monkey.asm):00974                     .dw     Voice6+XX,Off+None
D1F9 7FFF0000         (       monkey.asm):00975                     .dw     Voice7+XX,Off+None
D1FD 8FFF0010         (       monkey.asm):00976                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):00977                     
                      (       monkey.asm):00978                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):00979                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):00980                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):00981                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):00982                 
                      (       monkey.asm):00983                     ; 31:1  Voice    Note   Vol   Dur
D201 10AA0700         (       monkey.asm):00984                     .dw     Voice1+E5,Mid+None
D205 31530700         (       monkey.asm):00985                     .dw     Voice3+E4,Mid+None
D209 523B0700         (       monkey.asm):00986                     .dw     Voice5+G3,Mid+None
D20D 62A70700         (       monkey.asm):00987                     .dw     Voice6+E3,Mid+None
D211 73570708         (       monkey.asm):00988                     .dw     Voice7+C3,Mid+Sixteenth
D215 5FFF0000         (       monkey.asm):00989                     .dw     Voice5+XX,Off+None
D219 6FFF0000         (       monkey.asm):00990                     .dw     Voice6+XX,Off+None
D21D 7FFF0002         (       monkey.asm):00991                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):00992                     
                      (       monkey.asm):00993                     ; 31:2  Voice    Note   Vol   Dur
D221 523B0700         (       monkey.asm):00994                     .dw     Voice5+G3,Mid+None
D225 62A70700         (       monkey.asm):00995                     .dw     Voice6+E3,Mid+None
D229 73570708         (       monkey.asm):00996                     .dw     Voice7+C3,Mid+Sixteenth
D22D 1FFF0000         (       monkey.asm):00997                     .dw     Voice1+XX,Off+None
D231 3FFF0000         (       monkey.asm):00998                     .dw     Voice3+XX,Off+None
D235 5FFF0000         (       monkey.asm):00999                     .dw     Voice5+XX,Off+None
D239 6FFF0000         (       monkey.asm):01000                     .dw     Voice6+XX,Off+None
D23D 7FFF0000         (       monkey.asm):01001                     .dw     Voice7+XX,Off+None
D241 8FFF0002         (       monkey.asm):01002                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01003                     
                      (       monkey.asm):01004                     ; 31:3  Voice    Note   Vol   Dur
D245 10BE0700         (       monkey.asm):01005                     .dw     Voice1+D5,Mid+None
D249 317D0700         (       monkey.asm):01006                     .dw     Voice3+D4,Mid+None
D24D 84750708         (       monkey.asm):01007                     .dw     Voice8+G2,Mid+Sixteenth
D251 1FFF0000         (       monkey.asm):01008                     .dw     Voice1+XX,Off+None
D255 3FFF0000         (       monkey.asm):01009                     .dw     Voice3+XX,Off+None
D259 8FFF0002         (       monkey.asm):01010                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01011                     
                      (       monkey.asm):01012                     ; 31:4  Voice    Note   Vol   Dur
D25D 10D60700         (       monkey.asm):01013                     .dw     Voice1+C5,Mid+None
D261 31AC0700         (       monkey.asm):01014                     .dw     Voice3+C4,Mid+None
D265 84750708         (       monkey.asm):01015                     .dw     Voice8+G2,Mid+Sixteenth
D269 1FFF0000         (       monkey.asm):01016                     .dw     Voice1+XX,Off+None
D26D 3FFF0002         (       monkey.asm):01017                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01018                     
                      (       monkey.asm):01019                     ; 31:5  Voice    Note   Vol   Dur
D271 10E20700         (       monkey.asm):01020                     .dw     Voice1+B4,Mid+None
D275 31C50700         (       monkey.asm):01021                     .dw     Voice3+B3,Mid+None
D279 523B0700         (       monkey.asm):01022                     .dw     Voice5+G3,Mid+None
D27D 62FA0700         (       monkey.asm):01023                     .dw     Voice6+D3,Mid+None
D281 71C50708         (       monkey.asm):01024                     .dw     Voice7+B3,Mid+Sixteenth
D285 1FFF0000         (       monkey.asm):01025                     .dw     Voice1+XX,Off+None
D289 3FFF0000         (       monkey.asm):01026                     .dw     Voice3+XX,Off+None
D28D 5FFF0000         (       monkey.asm):01027                     .dw     Voice5+XX,Off+None
D291 6FFF0000         (       monkey.asm):01028                     .dw     Voice6+XX,Off+None
D295 7FFF0000         (       monkey.asm):01029                     .dw     Voice7+XX,Off+None
D299 8FFF0002         (       monkey.asm):01030                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01031                     
                      (       monkey.asm):01032                     ; 31:6  Voice    Note   Vol   Dur
D29D 10BE0700         (       monkey.asm):01033                     .dw     Voice1+D5,Mid+None
D2A1 317D0700         (       monkey.asm):01034                     .dw     Voice3+D4,Mid+None
D2A5 523B0700         (       monkey.asm):01035                     .dw     Voice5+G3,Mid+None
D2A9 62FA0700         (       monkey.asm):01036                     .dw     Voice6+D3,Mid+None
D2AD 71C50700         (       monkey.asm):01037                     .dw     Voice7+B3,Mid+None
D2B1 84750708         (       monkey.asm):01038                     .dw     Voice8+G2,Mid+Sixteenth
D2B5 1FFF0000         (       monkey.asm):01039                     .dw     Voice1+XX,Off+None
D2B9 3FFF0000         (       monkey.asm):01040                     .dw     Voice3+XX,Off+None
D2BD 5FFF0000         (       monkey.asm):01041                     .dw     Voice5+XX,Off+None
D2C1 6FFF0000         (       monkey.asm):01042                     .dw     Voice6+XX,Off+None
D2C5 7FFF0000         (       monkey.asm):01043                     .dw     Voice7+XX,Off+None
D2C9 8FFF0002         (       monkey.asm):01044                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01045                     
                      (       monkey.asm):01046                     ; 31:7  Voice    Note   Vol   Dur
D2CD 10D60700         (       monkey.asm):01047                     .dw     Voice1+C5,Mid+None
D2D1 31AC0700         (       monkey.asm):01048                     .dw     Voice3+C4,Mid+None
D2D5 83F90710         (       monkey.asm):01049                     .dw     Voice8+A2,Mid+Eighth
D2D9 1FFF0000         (       monkey.asm):01050                     .dw     Voice1+XX,Off+None
D2DD 3FFF0000         (       monkey.asm):01051                     .dw     Voice3+XX,Off+None
D2E1 8FFF0002         (       monkey.asm):01052                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01053                     
                      (       monkey.asm):01054                     ; 31:8  Voice    Note   Vol   Dur
D2E5 10D60700         (       monkey.asm):01055                     .dw     Voice1+C5,Mid+None
D2E9 31AC0700         (       monkey.asm):01056                     .dw     Voice3+C4,Mid+None
D2ED 51FC0700         (       monkey.asm):01057                     .dw     Voice5+A3,Mid+None
D2F1 62A70700         (       monkey.asm):01058                     .dw     Voice6+E3,Mid+None
D2F5 73570700         (       monkey.asm):01059                     .dw     Voice7+C3,Mid+None
D2F9 83F90708         (       monkey.asm):01060                     .dw     Voice8+A2,Mid+Sixteenth
D2FD 5FFF0000         (       monkey.asm):01061                     .dw     Voice5+XX,Off+None
D301 6FFF0000         (       monkey.asm):01062                     .dw     Voice6+XX,Off+None
D305 7FFF0002         (       monkey.asm):01063                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01064                     
                      (       monkey.asm):01065                     ; 31:9  Voice    Note   Vol   Dur
D309 51FC0700         (       monkey.asm):01066                     .dw     Voice5+A3,Mid+None
D30D 62A70700         (       monkey.asm):01067                     .dw     Voice6+E3,Mid+None
D311 73570708         (       monkey.asm):01068                     .dw     Voice7+C3,Mid+Sixteenth
D315 1FFF0000         (       monkey.asm):01069                     .dw     Voice1+XX,Off+None
D319 3FFF0000         (       monkey.asm):01070                     .dw     Voice3+XX,Off+None
D31D 5FFF0000         (       monkey.asm):01071                     .dw     Voice5+XX,Off+None
D321 6FFF0000         (       monkey.asm):01072                     .dw     Voice6+XX,Off+None
D325 7FFF0000         (       monkey.asm):01073                     .dw     Voice7+XX,Off+None
D329 8FFF0002         (       monkey.asm):01074                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01075                     
                      (       monkey.asm):01076                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01077                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01078                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01079                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01080                 
                      (       monkey.asm):01081                     ; 32:1  Voice    Note   Vol   Dur
D32D 10E20700         (       monkey.asm):01082                     .dw     Voice1+B4,Mid+None
D331 31C50700         (       monkey.asm):01083                     .dw     Voice3+B3,Mid+None
D335 8A9B0710         (       monkey.asm):01084                     .dw     Voice8+E1,Mid+Eighth
D339 8FFF0002         (       monkey.asm):01085                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01086                     
                      (       monkey.asm):01087                     ; 32:2  Voice    Note   Vol   Dur
D33D 51C50700         (       monkey.asm):01088                     .dw     Voice5+B3,Mid+None
D341 623B0700         (       monkey.asm):01089                     .dw     Voice6+G3,Mid+None
D345 72A70700         (       monkey.asm):01090                     .dw     Voice7+E3,Mid+None
D349 8A9B0708         (       monkey.asm):01091                     .dw     Voice8+E1,Mid+Sixteenth
D34D 5FFF0000         (       monkey.asm):01092                     .dw     Voice5+XX,Off+None
D351 6FFF0000         (       monkey.asm):01093                     .dw     Voice6+XX,Off+None
D355 7FFF0000         (       monkey.asm):01094                     .dw     Voice7+XX,Off+None
D359 8FFF0002         (       monkey.asm):01095                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01096                     
                      (       monkey.asm):01097                     ; 32:3  Voice    Note   Vol   Dur
D35D 51C50700         (       monkey.asm):01098                     .dw     Voice5+B3,Mid+None
D361 623B0700         (       monkey.asm):01099                     .dw     Voice6+G3,Mid+None
D365 72A70700         (       monkey.asm):01100                     .dw     Voice7+E3,Mid+None
D369 8A9B0708         (       monkey.asm):01101                     .dw     Voice8+E1,Mid+Sixteenth
D36D 1FFF0000         (       monkey.asm):01102                     .dw     Voice1+XX,Off+None
D371 3FFF0000         (       monkey.asm):01103                     .dw     Voice3+XX,Off+None
D375 5FFF0000         (       monkey.asm):01104                     .dw     Voice5+XX,Off+None
D379 6FFF0000         (       monkey.asm):01105                     .dw     Voice6+XX,Off+None
D37D 7FFF0000         (       monkey.asm):01106                     .dw     Voice7+XX,Off+None
D381 8FFF0010         (       monkey.asm):01107                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):01108                     
                      (       monkey.asm):01109                     ; 32:4  Voice    Note   Vol   Dur
D385 51C50700         (       monkey.asm):01110                     .dw     Voice5+B3,Mid+None
D389 623B0700         (       monkey.asm):01111                     .dw     Voice6+G3,Mid+None
D38D 72A70708         (       monkey.asm):01112                     .dw     Voice7+E3,Mid+Sixteenth
D391 5FFF0000         (       monkey.asm):01113                     .dw     Voice5+XX,Off+None
D395 6FFF0000         (       monkey.asm):01114                     .dw     Voice6+XX,Off+None
D399 7FFF0002         (       monkey.asm):01115                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01116                     
                      (       monkey.asm):01117                     ; 32:5  Voice    Note   Vol   Dur
D39D 51C50700         (       monkey.asm):01118                     .dw     Voice5+B3,Mid+None
D3A1 623B0700         (       monkey.asm):01119                     .dw     Voice6+G3,Mid+None
D3A5 72A70708         (       monkey.asm):01120                     .dw     Voice7+E3,Mid+Sixteenth
D3A9 5FFF0000         (       monkey.asm):01121                     .dw     Voice5+XX,Off+None
D3AD 6FFF0000         (       monkey.asm):01122                     .dw     Voice6+XX,Off+None
D3B1 7FFF0010         (       monkey.asm):01123                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01124                     
                      (       monkey.asm):01125                     ; 32:6  Voice    Note   Vol   Dur
D3B5 51FC0700         (       monkey.asm):01126                     .dw     Voice5+A3,Mid+None
D3B9 625D0700         (       monkey.asm):01127                     .dw     Voice6+Fs3,Mid+None
D3BD 72FA0700         (       monkey.asm):01128                     .dw     Voice7+D3,Mid+None
D3C1 85F40708         (       monkey.asm):01129                     .dw     Voice8+D2,Mid+Sixteenth
D3C5 5FFF0000         (       monkey.asm):01130                     .dw     Voice5+XX,Off+None
D3C9 6FFF0000         (       monkey.asm):01131                     .dw     Voice6+XX,Off+None
D3CD 7FFF0000         (       monkey.asm):01132                     .dw     Voice7+XX,Off+None
D3D1 8FFF0002         (       monkey.asm):01133                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01134                     
                      (       monkey.asm):01135                     ; 32:7  Voice    Note   Vol   Dur
D3D5 51FC0700         (       monkey.asm):01136                     .dw     Voice5+A3,Mid+None
D3D9 625D0700         (       monkey.asm):01137                     .dw     Voice6+Fs3,Mid+None
D3DD 72FA0700         (       monkey.asm):01138                     .dw     Voice7+D3,Mid+None
D3E1 85F40708         (       monkey.asm):01139                     .dw     Voice8+D2,Mid+Sixteenth
D3E5 5FFF0000         (       monkey.asm):01140                     .dw     Voice5+XX,Off+None
D3E9 6FFF0000         (       monkey.asm):01141                     .dw     Voice6+XX,Off+None
D3ED 7FFF0000         (       monkey.asm):01142                     .dw     Voice7+XX,Off+None
D3F1 8FFF0002         (       monkey.asm):01143                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01144                     
                      (       monkey.asm):01145                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01146                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01147                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01148                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01149                 
                      (       monkey.asm):01150                     ; 33:1  Voice    Note   Vol   Dur
D3F5 854D0710         (       monkey.asm):01151                     .dw     Voice8+E2,Mid+Eighth
D3F9 8FFF0002         (       monkey.asm):01152                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01153                     
                      (       monkey.asm):01154                     ; 33:2  Voice    Note   Vol   Dur
D3FD 51C50700         (       monkey.asm):01155                     .dw     Voice5+B3,Mid+None
D401 623B0700         (       monkey.asm):01156                     .dw     Voice6+G3,Mid+None
D405 72A70700         (       monkey.asm):01157                     .dw     Voice7+E3,Mid+None  
D409 854D0708         (       monkey.asm):01158                     .dw     Voice8+E2,Mid+Sixteenth
D40D 5FFF0000         (       monkey.asm):01159                     .dw     Voice5+XX,Off+None
D411 6FFF0000         (       monkey.asm):01160                     .dw     Voice6+XX,Off+None
D415 7FFF0000         (       monkey.asm):01161                     .dw     Voice7+XX,Off+None
D419 8FFF0002         (       monkey.asm):01162                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01163                     
                      (       monkey.asm):01164                     ; 33:3  Voice    Note   Vol   Dur
D41D 51C50700         (       monkey.asm):01165                     .dw     Voice5+B3,Mid+None
D421 623B0700         (       monkey.asm):01166                     .dw     Voice6+G3,Mid+None
D425 72A70700         (       monkey.asm):01167                     .dw     Voice7+E3,Mid+None  
D429 854D0708         (       monkey.asm):01168                     .dw     Voice8+E2,Mid+Sixteenth
D42D 5FFF0000         (       monkey.asm):01169                     .dw     Voice5+XX,Off+None
D431 6FFF0000         (       monkey.asm):01170                     .dw     Voice6+XX,Off+None
D435 7FFF0000         (       monkey.asm):01171                     .dw     Voice7+XX,Off+None
D439 8FFF0010         (       monkey.asm):01172                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):01173                     
                      (       monkey.asm):01174                     ; 33:4  Voice    Note   Vol   Dur
D43D 51C50700         (       monkey.asm):01175                     .dw     Voice5+B3,Mid+None
D441 623B0700         (       monkey.asm):01176                     .dw     Voice6+G3,Mid+None
D445 72A70708         (       monkey.asm):01177                     .dw     Voice7+E3,Mid+Sixteenth 
D449 5FFF0000         (       monkey.asm):01178                     .dw     Voice5+XX,Off+None
D44D 6FFF0000         (       monkey.asm):01179                     .dw     Voice6+XX,Off+None
D451 7FFF0002         (       monkey.asm):01180                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01181                     
                      (       monkey.asm):01182                     ; 33:5  Voice    Note   Vol   Dur
D455 51C50700         (       monkey.asm):01183                     .dw     Voice5+B3,Mid+None
D459 623B0700         (       monkey.asm):01184                     .dw     Voice6+G3,Mid+None
D45D 72A70708         (       monkey.asm):01185                     .dw     Voice7+E3,Mid+Sixteenth 
D461 5FFF0000         (       monkey.asm):01186                     .dw     Voice5+XX,Off+None
D465 6FFF0000         (       monkey.asm):01187                     .dw     Voice6+XX,Off+None
D469 7FFF0002         (       monkey.asm):01188                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01189                     
                      (       monkey.asm):01190                     ; 33:6  Voice    Note   Vol   Dur
D46D 10E20700         (       monkey.asm):01191                     .dw     Voice1+B4,Mid+None
D471 31C50700         (       monkey.asm):01192                     .dw     Voice3+B3,Mid+None
D475 85F40710         (       monkey.asm):01193                     .dw     Voice8+D2,Mid+Eighth
D479 8FFF0002         (       monkey.asm):01194                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01195                     
                      (       monkey.asm):01196                     ; 33:7  Voice    Note   Vol   Dur
D47D 10BE0700         (       monkey.asm):01197                     .dw     Voice1+D5,Mid+None
D481 317D0700         (       monkey.asm):01198                     .dw     Voice3+D4,Mid+None
D485 51FC0700         (       monkey.asm):01199                     .dw     Voice5+A3,Mid+None
D489 625D0700         (       monkey.asm):01200                     .dw     Voice6+Fs3,Mid+None
D48D 72FA0700         (       monkey.asm):01201                     .dw     Voice7+D3,Mid+None  
D491 85F40708         (       monkey.asm):01202                     .dw     Voice8+D2,Mid+Sixteenth
D495 5FFF0000         (       monkey.asm):01203                     .dw     Voice5+XX,Off+None
D499 6FFF0000         (       monkey.asm):01204                     .dw     Voice6+XX,Off+None
D49D 7FFF0000         (       monkey.asm):01205                     .dw     Voice7+XX,Off+None
D4A1 8FFF0002         (       monkey.asm):01206                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01207                     
                      (       monkey.asm):01208                     ; 33:8  Voice    Note   Vol   Dur
D4A5 51FC0700         (       monkey.asm):01209                     .dw     Voice5+A3,Mid+None
D4A9 625D0700         (       monkey.asm):01210                     .dw     Voice6+Fs3,Mid+None
D4AD 72FA0700         (       monkey.asm):01211                     .dw     Voice7+D3,Mid+None  
D4B1 85F40708         (       monkey.asm):01212                     .dw     Voice8+D2,Mid+Sixteenth
D4B5 1FFF0000         (       monkey.asm):01213                     .dw     Voice1+XX,Off+None
D4B9 3FFF0000         (       monkey.asm):01214                     .dw     Voice3+XX,Off+None
D4BD 5FFF0000         (       monkey.asm):01215                     .dw     Voice5+XX,Off+None
D4C1 6FFF0000         (       monkey.asm):01216                     .dw     Voice6+XX,Off+None
D4C5 7FFF0000         (       monkey.asm):01217                     .dw     Voice7+XX,Off+None
D4C9 8FFF0002         (       monkey.asm):01218                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01219                     
                      (       monkey.asm):01220                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01221                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01222                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01223                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01224                 
                      (       monkey.asm):01225                     ; 34:1  Voice    Note   Vol   Dur
D4CD 106B0700         (       monkey.asm):01226                     .dw     Voice1+C6,Mid+None
D4D1 20AA0700         (       monkey.asm):01227                     .dw     Voice2+E5,Mid+None
D4D5 30D60700         (       monkey.asm):01228                     .dw     Voice3+C5,Mid+None
D4D9 41530700         (       monkey.asm):01229                     .dw     Voice4+E4,Mid+None
D4DD 86AE0710         (       monkey.asm):01230                     .dw     Voice8+C2,Mid+Eighth
D4E1 1FFF0000         (       monkey.asm):01231                     .dw     Voice1+XX,Off+None
D4E5 3FFF0000         (       monkey.asm):01232                     .dw     Voice3+XX,Off+None
D4E9 8FFF0002         (       monkey.asm):01233                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01234                     
                      (       monkey.asm):01235                     ; 34:2  Voice    Note   Vol   Dur
D4ED 108F0700         (       monkey.asm):01236                     .dw     Voice1+G5,Mid+None
D4F1 311D0700         (       monkey.asm):01237                     .dw     Voice3+G4,Mid+None
D4F5 523B0700         (       monkey.asm):01238                     .dw     Voice5+G3,Mid+None
D4F9 62A70700         (       monkey.asm):01239                     .dw     Voice6+E3,Mid+None
D4FD 73570700         (       monkey.asm):01240                     .dw     Voice7+C3,Mid+None  
D501 86AE0708         (       monkey.asm):01241                     .dw     Voice8+C2,Mid+Sixteenth
D505 5FFF0000         (       monkey.asm):01242                     .dw     Voice5+XX,Off+None
D509 6FFF0000         (       monkey.asm):01243                     .dw     Voice6+XX,Off+None
D50D 7FFF0000         (       monkey.asm):01244                     .dw     Voice7+XX,Off+None
D511 8FFF0002         (       monkey.asm):01245                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01246                     
                      (       monkey.asm):01247                     ; 34:3  Voice    Note   Vol   Dur
D515 523B0700         (       monkey.asm):01248                     .dw     Voice5+G3,Mid+None
D519 62A70700         (       monkey.asm):01249                     .dw     Voice6+E3,Mid+None
D51D 73570700         (       monkey.asm):01250                     .dw     Voice7+C3,Mid+None
D521 86AE0708         (       monkey.asm):01251                     .dw     Voice8+C2,Mid+Sixteenth
D525 1FFF0000         (       monkey.asm):01252                     .dw     Voice1+XX,Off+None
D529 3FFF0000         (       monkey.asm):01253                     .dw     Voice3+XX,Off+None
D52D 5FFF0000         (       monkey.asm):01254                     .dw     Voice5+XX,Off+None
D531 6FFF0000         (       monkey.asm):01255                     .dw     Voice6+XX,Off+None
D535 7FFF0000         (       monkey.asm):01256                     .dw     Voice7+XX,Off+None
D539 8FFF0002         (       monkey.asm):01257                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01258                     
                      (       monkey.asm):01259                     ; 34:4  Voice    Note   Vol   Dur
D53D 108F0700         (       monkey.asm):01260                     .dw     Voice1+G5,Mid+None
D541 311D0710         (       monkey.asm):01261                     .dw     Voice3+G4,Mid+Eighth
                      (       monkey.asm):01262                 
                      (       monkey.asm):01263                     ; 34:5  Voice    Note   Vol   Dur
D545 523B0700         (       monkey.asm):01264                     .dw     Voice5+G3,Mid+None
D549 62A70700         (       monkey.asm):01265                     .dw     Voice6+E3,Mid+None
D54D 73570708         (       monkey.asm):01266                     .dw     Voice7+C3,Mid+Sixteenth
D551 5FFF0000         (       monkey.asm):01267                     .dw     Voice5+XX,Off+None
D555 6FFF0000         (       monkey.asm):01268                     .dw     Voice6+XX,Off+None
D559 7FFF0002         (       monkey.asm):01269                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01270                 
                      (       monkey.asm):01271                     ; 34:6  Voice    Note   Vol   Dur
D55D 523B0700         (       monkey.asm):01272                     .dw     Voice5+G3,Mid+None
D561 62A70700         (       monkey.asm):01273                     .dw     Voice6+E3,Mid+None
D565 73570708         (       monkey.asm):01274                     .dw     Voice7+C3,Mid+Sixteenth
D569 1FFF0000         (       monkey.asm):01275                     .dw     Voice1+XX,Off+None
D56D 2FFF0000         (       monkey.asm):01276                     .dw     Voice2+XX,Off+None
D571 3FFF0000         (       monkey.asm):01277                     .dw     Voice3+XX,Off+None
D575 4FFF0000         (       monkey.asm):01278                     .dw     Voice4+XX,Off+None
D579 5FFF0000         (       monkey.asm):01279                     .dw     Voice5+XX,Off+None
D57D 6FFF0000         (       monkey.asm):01280                     .dw     Voice6+XX,Off+None
D581 7FFF0002         (       monkey.asm):01281                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01282                 
                      (       monkey.asm):01283                     ; 34:7  Voice    Note   Vol   Dur
D585 106B0700         (       monkey.asm):01284                     .dw     Voice1+C6,Mid+None
D589 20D60700         (       monkey.asm):01285                     .dw     Voice2+C5,Mid+None
D58D 30D60700         (       monkey.asm):01286                     .dw     Voice3+C5,Mid+None
D591 41AC0708         (       monkey.asm):01287                     .dw     Voice4+C4,Mid+Sixteenth
D595 1FFF0000         (       monkey.asm):01288                     .dw     Voice1+XX,Off+None
D599 3FFF0002         (       monkey.asm):01289                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01290                 
                      (       monkey.asm):01291                     ; 34:8  Voice    Note   Vol   Dur
D59D 10710700         (       monkey.asm):01292                     .dw     Voice1+B5,Mid+None
D5A1 30E20708         (       monkey.asm):01293                     .dw     Voice3+B4,Mid+Sixteenth
D5A5 1FFF0000         (       monkey.asm):01294                     .dw     Voice1+XX,Off+None
D5A9 3FFF0002         (       monkey.asm):01295                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01296                 
                      (       monkey.asm):01297                     ; 34:9  Voice    Note   Vol   Dur
D5AD 107F0700         (       monkey.asm):01298                     .dw     Voice1+A5,Mid+None
D5B1 30FE0700         (       monkey.asm):01299                     .dw     Voice3+A4,Mid+None
D5B5 523B0700         (       monkey.asm):01300                     .dw     Voice5+G3,Mid+None
D5B9 62A70700         (       monkey.asm):01301                     .dw     Voice6+E3,Mid+None
D5BD 73570708         (       monkey.asm):01302                     .dw     Voice7+C3,Mid+Sixteenth
D5C1 1FFF0000         (       monkey.asm):01303                     .dw     Voice1+XX,Off+None
D5C5 3FFF0000         (       monkey.asm):01304                     .dw     Voice3+XX,Off+None
D5C9 5FFF0000         (       monkey.asm):01305                     .dw     Voice5+XX,Off+None
D5CD 6FFF0000         (       monkey.asm):01306                     .dw     Voice6+XX,Off+None
D5D1 7FFF0002         (       monkey.asm):01307                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01308                 
                      (       monkey.asm):01309                     ; 34:10 Voice    Note   Vol   Dur
D5D5 106B0700         (       monkey.asm):01310                     .dw     Voice1+C6,Mid+None
D5D9 30D60700         (       monkey.asm):01311                     .dw     Voice3+C5,Mid+None
D5DD 523B0700         (       monkey.asm):01312                     .dw     Voice5+G3,Mid+None
D5E1 62A70700         (       monkey.asm):01313                     .dw     Voice6+E3,Mid+None
D5E5 73570708         (       monkey.asm):01314                     .dw     Voice7+C3,Mid+Sixteenth
D5E9 1FFF0000         (       monkey.asm):01315                     .dw     Voice1+XX,Off+None
D5ED 2FFF0000         (       monkey.asm):01316                     .dw     Voice2+XX,Off+None
D5F1 3FFF0000         (       monkey.asm):01317                     .dw     Voice3+XX,Off+None
D5F5 4FFF0000         (       monkey.asm):01318                     .dw     Voice4+XX,Off+None
D5F9 5FFF0000         (       monkey.asm):01319                     .dw     Voice5+XX,Off+None
D5FD 6FFF0000         (       monkey.asm):01320                     .dw     Voice6+XX,Off+None
D601 7FFF0002         (       monkey.asm):01321                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01322                 
                      (       monkey.asm):01323                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01324                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01325                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01326                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01327                 
                      (       monkey.asm):01328                     ; 35:1  Voice    Note   Vol   Dur
D605 10710700         (       monkey.asm):01329                     .dw     Voice1+B5,Mid+None
D609 20BE0700         (       monkey.asm):01330                     .dw     Voice2+D5,Mid+None
D60D 30E20700         (       monkey.asm):01331                     .dw     Voice3+B4,Mid+None
D611 417D0710         (       monkey.asm):01332                     .dw     Voice4+D4,Mid+Eighth
D615 1FFF0000         (       monkey.asm):01333                     .dw     Voice1+XX,Off+None
D619 3FFF0002         (       monkey.asm):01334                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01335                 
                      (       monkey.asm):01336                     ; 35:2  Voice    Note   Vol   Dur
D61D 108F0700         (       monkey.asm):01337                     .dw     Voice1+G5,Mid+None
D621 311D0700         (       monkey.asm):01338                     .dw     Voice3+G4,Mid+None
D625 523B0700         (       monkey.asm):01339                     .dw     Voice5+G3,Mid+None
D629 62FA0700         (       monkey.asm):01340                     .dw     Voice6+D3,Mid+None
D62D 71C50700         (       monkey.asm):01341                     .dw     Voice7+B3,Mid+None
D631 88EB0708         (       monkey.asm):01342                     .dw     Voice8+G1,Mid+Sixteenth
D635 5FFF0000         (       monkey.asm):01343                     .dw     Voice5+XX,Off+None
D639 6FFF0000         (       monkey.asm):01344                     .dw     Voice6+XX,Off+None
D63D 7FFF0000         (       monkey.asm):01345                     .dw     Voice7+XX,Off+None
D641 8FFF0002         (       monkey.asm):01346                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01347                 
                      (       monkey.asm):01348                     ; 35:3  Voice    Note   Vol   Dur
D645 523B0700         (       monkey.asm):01349                     .dw     Voice5+G3,Mid+None
D649 62FA0700         (       monkey.asm):01350                     .dw     Voice6+D3,Mid+None
D64D 71C50700         (       monkey.asm):01351                     .dw     Voice7+B3,Mid+None
D651 88EB0708         (       monkey.asm):01352                     .dw     Voice8+G1,Mid+Sixteenth
D655 1FFF0000         (       monkey.asm):01353                     .dw     Voice1+XX,Off+None
D659 3FFF0000         (       monkey.asm):01354                     .dw     Voice3+XX,Off+None
D65D 5FFF0000         (       monkey.asm):01355                     .dw     Voice5+XX,Off+None
D661 6FFF0000         (       monkey.asm):01356                     .dw     Voice6+XX,Off+None
D665 7FFF0000         (       monkey.asm):01357                     .dw     Voice7+XX,Off+None
D669 8FFF0002         (       monkey.asm):01358                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01359                 
                      (       monkey.asm):01360                     ; 35:4  Voice    Note   Vol   Dur
D66D 108F0700         (       monkey.asm):01361                     .dw     Voice1+G5,Mid+None
D671 311D0700         (       monkey.asm):01362                     .dw     Voice3+G4,Mid+None
D675 87140710         (       monkey.asm):01363                     .dw     Voice8+B1,Mid+Eighth
D679 8FFF0002         (       monkey.asm):01364                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01365                 
                      (       monkey.asm):01366                     ; 35:5  Voice    Note   Vol   Dur
D67D 523B0700         (       monkey.asm):01367                     .dw     Voice5+G3,Mid+None
D681 62FA0700         (       monkey.asm):01368                     .dw     Voice6+D3,Mid+None
D685 71C50700         (       monkey.asm):01369                     .dw     Voice7+B3,Mid+None
D689 85F40708         (       monkey.asm):01370                     .dw     Voice8+D2,Mid+Sixteenth
D68D 5FFF0000         (       monkey.asm):01371                     .dw     Voice5+XX,Off+None
D691 6FFF0000         (       monkey.asm):01372                     .dw     Voice6+XX,Off+None
D695 7FFF0000         (       monkey.asm):01373                     .dw     Voice7+XX,Off+None
                      (       monkey.asm):01374                 
                      (       monkey.asm):01375                     ; 35:6  Voice    Note   Vol   Dur
D699 523B0700         (       monkey.asm):01376                     .dw     Voice5+G3,Mid+None
D69D 62FA0700         (       monkey.asm):01377                     .dw     Voice6+D3,Mid+None
D6A1 71C50708         (       monkey.asm):01378                     .dw     Voice7+B3,Mid+Sixteenth
D6A5 1FFF0000         (       monkey.asm):01379                     .dw     Voice1+XX,Off+None
D6A9 2FFF0000         (       monkey.asm):01380                     .dw     Voice2+XX,Off+None
D6AD 3FFF0000         (       monkey.asm):01381                     .dw     Voice3+XX,Off+None
D6B1 4FFF0000         (       monkey.asm):01382                     .dw     Voice4+XX,Off+None
D6B5 5FFF0000         (       monkey.asm):01383                     .dw     Voice5+XX,Off+None
D6B9 6FFF0000         (       monkey.asm):01384                     .dw     Voice6+XX,Off+None
D6BD 7FFF0000         (       monkey.asm):01385                     .dw     Voice7+XX,Off+None
D6C1 8FFF0002         (       monkey.asm):01386                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01387                 
                      (       monkey.asm):01388                     ; 35:7  Voice    Note   Vol   Dur
D6C5 20710700         (       monkey.asm):01389                     .dw     Voice2+B5,Mid+None
D6C9 40E20710         (       monkey.asm):01390                     .dw     Voice4+B4,Mid+Eighth
                      (       monkey.asm):01391                 
                      (       monkey.asm):01392                     ; 35:8  Voice    Note   Vol   Dur
D6CD 108F0700         (       monkey.asm):01393                     .dw     Voice1+G5,Mid+None
D6D1 311D0700         (       monkey.asm):01394                     .dw     Voice3+G4,Mid+None
D6D5 523B0700         (       monkey.asm):01395                     .dw     Voice5+G3,Mid+None
D6D9 62FA0700         (       monkey.asm):01396                     .dw     Voice6+D3,Mid+None
D6DD 71C50708         (       monkey.asm):01397                     .dw     Voice7+B3,Mid+Sixteenth
D6E1 5FFF0000         (       monkey.asm):01398                     .dw     Voice5+XX,Off+None
D6E5 6FFF0000         (       monkey.asm):01399                     .dw     Voice6+XX,Off+None
D6E9 7FFF0002         (       monkey.asm):01400                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01401                 
                      (       monkey.asm):01402                     ; 35:9  Voice    Note   Vol   Dur
D6ED 523B0700         (       monkey.asm):01403                     .dw     Voice5+G3,Mid+None
D6F1 62FA0700         (       monkey.asm):01404                     .dw     Voice6+D3,Mid+None
D6F5 71C50708         (       monkey.asm):01405                     .dw     Voice7+B3,Mid+Sixteenth
D6F9 1FFF0000         (       monkey.asm):01406                     .dw     Voice1+XX,Off+None
D6FD 2FFF0000         (       monkey.asm):01407                     .dw     Voice2+XX,Off+None
D701 3FFF0000         (       monkey.asm):01408                     .dw     Voice3+XX,Off+None
D705 4FFF0000         (       monkey.asm):01409                     .dw     Voice4+XX,Off+None
D709 5FFF0000         (       monkey.asm):01410                     .dw     Voice5+XX,Off+None
D70D 6FFF0000         (       monkey.asm):01411                     .dw     Voice6+XX,Off+None
D711 7FFF0000         (       monkey.asm):01412                     .dw     Voice7+XX,Off+None
D715 8FFF0002         (       monkey.asm):01413                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01414                 
                      (       monkey.asm):01415                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01416                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01417                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01418                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01419                 
                      (       monkey.asm):01420                     ; 36:1  Voice    Note   Vol   Dur
D719 107F0700         (       monkey.asm):01421                     .dw     Voice1+A5,Mid+None
D71D 20D60700         (       monkey.asm):01422                     .dw     Voice2+C5,Mid+None
D721 30FE0700         (       monkey.asm):01423                     .dw     Voice3+A4,Mid+None
D725 41AC0710         (       monkey.asm):01424                     .dw     Voice4+C4,Mid+Eighth
D729 1FFF0000         (       monkey.asm):01425                     .dw     Voice1+XX,Off+None
D72D 3FFF0002         (       monkey.asm):01426                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01427                     
                      (       monkey.asm):01428                     ; 36:2  Voice    Note   Vol   Dur
D731 10BE0700         (       monkey.asm):01429                     .dw     Voice1+D5,Mid+None
D735 317D0700         (       monkey.asm):01430                     .dw     Voice3+D4,Mid+None
D739 51FC0700         (       monkey.asm):01431                     .dw     Voice5+A3,Mid+None
D73D 625D0700         (       monkey.asm):01432                     .dw     Voice6+Fs3,Mid+None
D741 72FA0700         (       monkey.asm):01433                     .dw     Voice7+D3,Mid+None  
D745 8BE70708         (       monkey.asm):01434                     .dw     Voice8+D1,Mid+Sixteenth
D749 5FFF0000         (       monkey.asm):01435                     .dw     Voice5+XX,Off+None
D74D 6FFF0000         (       monkey.asm):01436                     .dw     Voice6+XX,Off+None
D751 7FFF0000         (       monkey.asm):01437                     .dw     Voice7+XX,Off+None
D755 8FFF0002         (       monkey.asm):01438                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01439                     
                      (       monkey.asm):01440                     ; 36:3  Voice    Note   Vol   Dur
D759 51FC0700         (       monkey.asm):01441                     .dw     Voice5+A3,Mid+None
D75D 625D0700         (       monkey.asm):01442                     .dw     Voice6+Fs3,Mid+None
D761 72FA0700         (       monkey.asm):01443                     .dw     Voice7+D3,Mid+None
D765 8BE70708         (       monkey.asm):01444                     .dw     Voice8+D1,Mid+Sixteenth
D769 1FFF0000         (       monkey.asm):01445                     .dw     Voice1+XX,Off+None
D76D 3FFF0000         (       monkey.asm):01446                     .dw     Voice3+XX,Off+None
D771 5FFF0000         (       monkey.asm):01447                     .dw     Voice5+XX,Off+None
D775 6FFF0000         (       monkey.asm):01448                     .dw     Voice6+XX,Off+None
D779 7FFF0000         (       monkey.asm):01449                     .dw     Voice7+XX,Off+None
D77D 8FFF0002         (       monkey.asm):01450                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01451                     
                      (       monkey.asm):01452                     ; 36:4  Voice    Note   Vol   Dur
D781 10BE0700         (       monkey.asm):01453                     .dw     Voice1+D5,Mid+None
D785 317D0700         (       monkey.asm):01454                     .dw     Voice3+D4,Mid+None
D789 89730710         (       monkey.asm):01455                     .dw     Voice8+Fs1,Mid+Eighth
D78D 8FFF0002         (       monkey.asm):01456                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01457                 
                      (       monkey.asm):01458                     ; 36:5  Voice    Note   Vol   Dur
D791 51FC0700         (       monkey.asm):01459                     .dw     Voice5+A3,Mid+None
D795 625D0700         (       monkey.asm):01460                     .dw     Voice6+Fs3,Mid+None
D799 72FA0700         (       monkey.asm):01461                     .dw     Voice7+D3,Mid+None  
D79D 87F20708         (       monkey.asm):01462                     .dw     Voice8+A1,Mid+Sixteenth
D7A1 5FFF0000         (       monkey.asm):01463                     .dw     Voice5+XX,Off+None
D7A5 6FFF0000         (       monkey.asm):01464                     .dw     Voice6+XX,Off+None
D7A9 7FFF0002         (       monkey.asm):01465                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01466                 
                      (       monkey.asm):01467                     ; 36:6  Voice    Note   Vol   Dur
D7AD 107F0700         (       monkey.asm):01468                     .dw     Voice1+A5,Mid+None
D7B1 30FE0700         (       monkey.asm):01469                     .dw     Voice3+A4,Mid+None
D7B5 51FC0700         (       monkey.asm):01470                     .dw     Voice5+A3,Mid+None
D7B9 625D0700         (       monkey.asm):01471                     .dw     Voice6+Fs3,Mid+None
D7BD 72FA0708         (       monkey.asm):01472                     .dw     Voice7+D3,Mid+Sixteenth
D7C1 1FFF0000         (       monkey.asm):01473                     .dw     Voice1+XX,Off+None
D7C5 2FFF0000         (       monkey.asm):01474                     .dw     Voice2+XX,Off+None
D7C9 3FFF0000         (       monkey.asm):01475                     .dw     Voice3+XX,Off+None
D7CD 4FFF0000         (       monkey.asm):01476                     .dw     Voice4+XX,Off+None
D7D1 5FFF0000         (       monkey.asm):01477                     .dw     Voice5+XX,Off+None
D7D5 6FFF0000         (       monkey.asm):01478                     .dw     Voice6+XX,Off+None
D7D9 7FFF0002         (       monkey.asm):01479                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01480                 
                      (       monkey.asm):01481                     ; 36:7  Voice    Note   Vol   Dur
D7DD 10710700         (       monkey.asm):01482                     .dw     Voice1+B5,Mid+None
D7E1 20BE0700         (       monkey.asm):01483                     .dw     Voice2+D5,Mid+None
D7E5 30E20700         (       monkey.asm):01484                     .dw     Voice3+B4,Mid+None
D7E9 417D0700         (       monkey.asm):01485                     .dw     Voice4+D4,Mid+None
D7ED 85F40708         (       monkey.asm):01486                     .dw     Voice8+D2,Mid+Sixteenth
D7F1 1FFF0000         (       monkey.asm):01487                     .dw     Voice1+XX,Off+None
D7F5 3FFF0002         (       monkey.asm):01488                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01489                 
                      (       monkey.asm):01490                     ; 36:8  Voice    Note   Vol   Dur
D7F9 107F0700         (       monkey.asm):01491                     .dw     Voice1+A5,Mid+None
D7FD 30FE0708         (       monkey.asm):01492                     .dw     Voice3+A4,Mid+Sixteenth
D801 1FFF0000         (       monkey.asm):01493                     .dw     Voice1+XX,Off+None
D805 3FFF0002         (       monkey.asm):01494                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01495                 
                      (       monkey.asm):01496                     ; 36:9  Voice    Note   Vol   Dur
D809 108F0700         (       monkey.asm):01497                     .dw     Voice1+G5,Mid+None
D80D 311D0700         (       monkey.asm):01498                     .dw     Voice3+G4,Mid+None
D811 51FC0700         (       monkey.asm):01499                     .dw     Voice5+A3,Mid+None
D815 625D0700         (       monkey.asm):01500                     .dw     Voice6+Fs3,Mid+None
D819 72FA0708         (       monkey.asm):01501                     .dw     Voice7+D3,Mid+Sixteenth
D81D 1FFF0000         (       monkey.asm):01502                     .dw     Voice1+XX,Off+None
D821 3FFF0000         (       monkey.asm):01503                     .dw     Voice3+XX,Off+None
D825 5FFF0000         (       monkey.asm):01504                     .dw     Voice5+XX,Off+None
D829 6FFF0000         (       monkey.asm):01505                     .dw     Voice6+XX,Off+None
D82D 7FFF0002         (       monkey.asm):01506                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01507                 
                      (       monkey.asm):01508                     ; 36:10 Voice    Note   Vol   Dur
D831 107F0700         (       monkey.asm):01509                     .dw     Voice1+A5,Mid+None
D835 30FE0700         (       monkey.asm):01510                     .dw     Voice3+A4,Mid+None
D839 51FC0700         (       monkey.asm):01511                     .dw     Voice5+A3,Mid+None
D83D 625D0700         (       monkey.asm):01512                     .dw     Voice6+Fs3,Mid+None
D841 72FA0708         (       monkey.asm):01513                     .dw     Voice7+D3,Mid+Sixteenth
D845 1FFF0000         (       monkey.asm):01514                     .dw     Voice1+XX,Off+None
D849 2FFF0000         (       monkey.asm):01515                     .dw     Voice2+XX,Off+None
D84D 3FFF0000         (       monkey.asm):01516                     .dw     Voice3+XX,Off+None
D851 4FFF0000         (       monkey.asm):01517                     .dw     Voice4+XX,Off+None
D855 5FFF0000         (       monkey.asm):01518                     .dw     Voice5+XX,Off+None
D859 6FFF0000         (       monkey.asm):01519                     .dw     Voice6+XX,Off+None
D85D 7FFF0000         (       monkey.asm):01520                     .dw     Voice7+XX,Off+None
D861 8FFF0002         (       monkey.asm):01521                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01522                 
                      (       monkey.asm):01523                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01524                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01525                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01526                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01527                 
                      (       monkey.asm):01528                     ; 37:1  Voice    Note   Vol   Dur
D865 10710700         (       monkey.asm):01529                     .dw     Voice1+B5,Mid+None
D869 20E20700         (       monkey.asm):01530                     .dw     Voice2+B4,Mid+None
D86D 30E20700         (       monkey.asm):01531                     .dw     Voice3+B4,Mid+None
D871 41C50700         (       monkey.asm):01532                     .dw     Voice4+B3,Mid+None
D875 854D0708         (       monkey.asm):01533                     .dw     Voice8+E2,Mid+Sixteenth
D879 8FFF0002         (       monkey.asm):01534                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01535                 
                      (       monkey.asm):01536                     ; 37:2  Voice    Note   Vol   Dur
D87D 854D0708         (       monkey.asm):01537                     .dw     Voice8+E2,Mid+Sixteenth
D881 1FFF0000         (       monkey.asm):01538                     .dw     Voice1+XX,Off+None
D885 2FFF0000         (       monkey.asm):01539                     .dw     Voice2+XX,Off+None
D889 3FFF0000         (       monkey.asm):01540                     .dw     Voice3+XX,Off+None
D88D 4FFF0000         (       monkey.asm):01541                     .dw     Voice4+XX,Off+None
D891 8FFF0002         (       monkey.asm):01542                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01543                 
                      (       monkey.asm):01544                     ; 37:3  Voice    Note   Vol   Dur
D895 108F0700         (       monkey.asm):01545                     .dw     Voice1+G5,Mid+None
D899 311D0700         (       monkey.asm):01546                     .dw     Voice3+G4,Mid+None
D89D 523B0700         (       monkey.asm):01547                     .dw     Voice5+G3,Mid+None
D8A1 62A70700         (       monkey.asm):01548                     .dw     Voice6+E3,Mid+None
D8A5 738A0700         (       monkey.asm):01549                     .dw     Voice7+B2,Mid+None
D8A9 854D0708         (       monkey.asm):01550                     .dw     Voice8+E2,Mid+Sixteenth
D8AD 5FFF0000         (       monkey.asm):01551                     .dw     Voice5+XX,Off+None
D8B1 6FFF0000         (       monkey.asm):01552                     .dw     Voice6+XX,Off+None
D8B5 7FFF0002         (       monkey.asm):01553                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01554                 
                      (       monkey.asm):01555                     ; 37:4  Voice    Note   Vol   Dur
D8B9 523B0700         (       monkey.asm):01556                     .dw     Voice5+G3,Mid+None
D8BD 62A70700         (       monkey.asm):01557                     .dw     Voice6+E3,Mid+None
D8C1 738A0708         (       monkey.asm):01558                     .dw     Voice7+B2,Mid+Sixteenth
D8C5 1FFF0000         (       monkey.asm):01559                     .dw     Voice1+XX,Off+None
D8C9 3FFF0000         (       monkey.asm):01560                     .dw     Voice3+XX,Off+None
D8CD 5FFF0000         (       monkey.asm):01561                     .dw     Voice5+XX,Off+None
D8D1 6FFF0000         (       monkey.asm):01562                     .dw     Voice6+XX,Off+None
D8D5 7FFF0000         (       monkey.asm):01563                     .dw     Voice7+XX,Off+None
D8D9 8FFF0002         (       monkey.asm):01564                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01565                 
                      (       monkey.asm):01566                     ; 37:5  Voice    Note   Vol   Dur
D8DD 108F0700         (       monkey.asm):01567                     .dw     Voice1+G5,Mid+None
D8E1 311D0700         (       monkey.asm):01568                     .dw     Voice3+G4,Mid+None
D8E5 87140710         (       monkey.asm):01569                     .dw     Voice8+B1,Mid+Eighth
D8E9 1FFF0000         (       monkey.asm):01570                     .dw     Voice1+XX,Off+None
D8ED 3FFF0000         (       monkey.asm):01571                     .dw     Voice3+XX,Off+None
D8F1 8FFF0002         (       monkey.asm):01572                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01573                 
                      (       monkey.asm):01574                     ; 37:6  Voice    Note   Vol   Dur
D8F5 10AA0700         (       monkey.asm):01575                     .dw     Voice1+E5,Mid+None
D8F9 31530700         (       monkey.asm):01576                     .dw     Voice3+E4,Mid+None
D8FD 523B0700         (       monkey.asm):01577                     .dw     Voice5+G3,Mid+None
D901 62A70700         (       monkey.asm):01578                     .dw     Voice6+E3,Mid+None
D905 738A0700         (       monkey.asm):01579                     .dw     Voice7+B2,Mid+None
D909 88EB0708         (       monkey.asm):01580                     .dw     Voice8+G1,Mid+Sixteenth
D90D 5FFF0000         (       monkey.asm):01581                     .dw     Voice5+XX,Off+None
D911 6FFF0000         (       monkey.asm):01582                     .dw     Voice6+XX,Off+None
D915 7FFF0002         (       monkey.asm):01583                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01584                 
                      (       monkey.asm):01585                     ; 37:7  Voice    Note   Vol   Dur
D919 523B0700         (       monkey.asm):01586                     .dw     Voice5+G3,Mid+None
D91D 62A70700         (       monkey.asm):01587                     .dw     Voice6+E3,Mid+None
D921 738A0708         (       monkey.asm):01588                     .dw     Voice7+B2,Mid+Sixteenth
D925 1FFF0000         (       monkey.asm):01589                     .dw     Voice1+XX,Off+None
D929 2FFF0000         (       monkey.asm):01590                     .dw     Voice2+XX,Off+None
D92D 3FFF0000         (       monkey.asm):01591                     .dw     Voice3+XX,Off+None
D931 4FFF0000         (       monkey.asm):01592                     .dw     Voice4+XX,Off+None
D935 5FFF0000         (       monkey.asm):01593                     .dw     Voice5+XX,Off+None
D939 6FFF0000         (       monkey.asm):01594                     .dw     Voice6+XX,Off+None
D93D 7FFF0000         (       monkey.asm):01595                     .dw     Voice7+XX,Off+None
D941 8FFF0002         (       monkey.asm):01596                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01597                 
                      (       monkey.asm):01598                     ; 37:8  Voice    Note   Vol   Dur
D945 10AA0700         (       monkey.asm):01599                     .dw     Voice1+E5,Mid+None
D949 31530700         (       monkey.asm):01600                     .dw     Voice3+E4,Mid+None
D94D 8A9B0710         (       monkey.asm):01601                     .dw     Voice8+E1,Mid+Eighth
                      (       monkey.asm):01602                 
                      (       monkey.asm):01603                     ; 37:9  Voice    Note   Vol   Dur
D951 523B0700         (       monkey.asm):01604                     .dw     Voice5+G3,Mid+None
D955 62A70700         (       monkey.asm):01605                     .dw     Voice6+E3,Mid+None
D959 738A0708         (       monkey.asm):01606                     .dw     Voice7+B2,Mid+Sixteenth
D95D 5FFF0000         (       monkey.asm):01607                     .dw     Voice5+XX,Off+None
D961 6FFF0000         (       monkey.asm):01608                     .dw     Voice6+XX,Off+None
D965 7FFF0002         (       monkey.asm):01609                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01610                 
                      (       monkey.asm):01611                     ; 37:10 Voice    Note   Vol   Dur
D969 523B0700         (       monkey.asm):01612                     .dw     Voice5+G3,Mid+None
D96D 62A70700         (       monkey.asm):01613                     .dw     Voice6+E3,Mid+None
D971 738A0708         (       monkey.asm):01614                     .dw     Voice7+B2,Mid+Sixteenth
D975 1FFF0000         (       monkey.asm):01615                     .dw     Voice1+XX,Off+None
D979 3FFF0000         (       monkey.asm):01616                     .dw     Voice3+XX,Off+None
D97D 5FFF0000         (       monkey.asm):01617                     .dw     Voice5+XX,Off+None
D981 6FFF0000         (       monkey.asm):01618                     .dw     Voice6+XX,Off+None
D985 7FFF0000         (       monkey.asm):01619                     .dw     Voice7+XX,Off+None
D989 8FFF0002         (       monkey.asm):01620                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01621                 
                      (       monkey.asm):01622                     ; 37:11 Voice    Note   Vol   Dur
D98D 112E0700         (       monkey.asm):01623                     .dw     Voice1+Fs4,Mid+None
D991 325D0710         (       monkey.asm):01624                     .dw     Voice3+Fs3,Mid+Eighth
D995 1FFF0000         (       monkey.asm):01625                     .dw     Voice1+XX,Off+None
D999 3FFF0002         (       monkey.asm):01626                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01627                 
                      (       monkey.asm):01628                     ; 37:12 Voice    Note   Vol   Dur
D99D 111D0700         (       monkey.asm):01629                     .dw     Voice1+G4,Mid+None
D9A1 323B0700         (       monkey.asm):01630                     .dw     Voice3+G3,Mid+None
D9A5 523B0700         (       monkey.asm):01631                     .dw     Voice5+G3,Mid+None
D9A9 62A70700         (       monkey.asm):01632                     .dw     Voice6+E3,Mid+None
D9AD 738A0700         (       monkey.asm):01633                     .dw     Voice7+B2,Mid+None
D9B1 8A9B0708         (       monkey.asm):01634                     .dw     Voice8+E1,Mid+Sixteenth
D9B5 5FFF0000         (       monkey.asm):01635                     .dw     Voice5+XX,Off+None
D9B9 6FFF0000         (       monkey.asm):01636                     .dw     Voice6+XX,Off+None
D9BD 7FFF0000         (       monkey.asm):01637                     .dw     Voice7+XX,Off+None
D9C1 8FFF0002         (       monkey.asm):01638                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01639                 
                      (       monkey.asm):01640                     ; 37:13 Voice    Note   Vol   Dur
D9C5 523B0700         (       monkey.asm):01641                     .dw     Voice5+G3,Mid+None
D9C9 62A70700         (       monkey.asm):01642                     .dw     Voice6+E3,Mid+None
D9CD 738A0700         (       monkey.asm):01643                     .dw     Voice7+B2,Mid+None
D9D1 8A9B0708         (       monkey.asm):01644                     .dw     Voice8+E1,Mid+Sixteenth
D9D5 1FFF0000         (       monkey.asm):01645                     .dw     Voice1+XX,Off+None
D9D9 3FFF0000         (       monkey.asm):01646                     .dw     Voice3+XX,Off+None
D9DD 5FFF0000         (       monkey.asm):01647                     .dw     Voice5+XX,Off+None
D9E1 6FFF0000         (       monkey.asm):01648                     .dw     Voice6+XX,Off+None
D9E5 7FFF0000         (       monkey.asm):01649                     .dw     Voice7+XX,Off+None
D9E9 8FFF0002         (       monkey.asm):01650                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01651                 
                      (       monkey.asm):01652                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01653                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01654                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01655                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01656                     
                      (       monkey.asm):01657                     ; 38:1  Voice    Note   Vol   Dur
D9ED 10FE0700         (       monkey.asm):01658                     .dw     Voice1+A4,Mid+None
D9F1 31FC0700         (       monkey.asm):01659                     .dw     Voice3+A3,Mid+None
D9F5 8A020710         (       monkey.asm):01660                     .dw     Voice8+F1,Mid+Eighth
D9F9 8FFF0002         (       monkey.asm):01661                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01662                     
                      (       monkey.asm):01663                     ; 38:2  Voice    Note   Vol   Dur
D9FD 51FC0700         (       monkey.asm):01664                     .dw     Voice5+A3,Mid+None
DA01 62A70700         (       monkey.asm):01665                     .dw     Voice6+E3,Mid+None
DA05 73570700         (       monkey.asm):01666                     .dw     Voice7+C3,Mid+None
DA09 87F20708         (       monkey.asm):01667                     .dw     Voice8+A1,Mid+Sixteenth
DA0D 5FFF0000         (       monkey.asm):01668                     .dw     Voice5+XX,Off+None
DA11 6FFF0000         (       monkey.asm):01669                     .dw     Voice6+XX,Off+None
DA15 7FFF0002         (       monkey.asm):01670                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01671                 
                      (       monkey.asm):01672                     ; 38:3  Voice    Note   Vol   Dur
DA19 51FC0700         (       monkey.asm):01673                     .dw     Voice5+A3,Mid+None
DA1D 62A70700         (       monkey.asm):01674                     .dw     Voice6+E3,Mid+None
DA21 73570708         (       monkey.asm):01675                     .dw     Voice7+C3,Mid+Sixteenth
DA25 5FFF0000         (       monkey.asm):01676                     .dw     Voice5+XX,Off+None
DA29 6FFF0000         (       monkey.asm):01677                     .dw     Voice6+XX,Off+None
DA2D 7FFF0000         (       monkey.asm):01678                     .dw     Voice7+XX,Off+None
DA31 8FFF0002         (       monkey.asm):01679                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01680                 
                      (       monkey.asm):01681                     ; 38:4  Voice    Note   Vol   Dur
DA35 86AE0710         (       monkey.asm):01682                     .dw     Voice8+C2,Mid+Eighth
DA39 8FFF0002         (       monkey.asm):01683                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01684                 
                      (       monkey.asm):01685                     ; 38:5  Voice    Note   Vol   Dur
DA3D 51FC0700         (       monkey.asm):01686                     .dw     Voice5+A3,Mid+None
DA41 62A70700         (       monkey.asm):01687                     .dw     Voice6+E3,Mid+None
DA45 73570708         (       monkey.asm):01688                     .dw     Voice7+C3,Mid+Sixteenth
DA49 5FFF0000         (       monkey.asm):01689                     .dw     Voice5+XX,Off+None
DA4D 6FFF0000         (       monkey.asm):01690                     .dw     Voice6+XX,Off+None
DA51 7FFF0002         (       monkey.asm):01691                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01692                 
                      (       monkey.asm):01693                     ; 38:6  Voice    Note   Vol   Dur
DA55 51FC0700         (       monkey.asm):01694                     .dw     Voice5+A3,Mid+None
DA59 62A70700         (       monkey.asm):01695                     .dw     Voice6+E3,Mid+None
DA5D 73570708         (       monkey.asm):01696                     .dw     Voice7+C3,Mid+Sixteenth
DA61 5FFF0000         (       monkey.asm):01697                     .dw     Voice5+XX,Off+None
DA65 6FFF0000         (       monkey.asm):01698                     .dw     Voice6+XX,Off+None
DA69 7FFF0010         (       monkey.asm):01699                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01700                 
                      (       monkey.asm):01701                     ; 38:7  Voice    Note   Vol   Dur
DA6D 51FC0700         (       monkey.asm):01702                     .dw     Voice5+A3,Mid+None
DA71 62A70700         (       monkey.asm):01703                     .dw     Voice6+E3,Mid+None
DA75 73570708         (       monkey.asm):01704                     .dw     Voice7+C3,Mid+Sixteenth
DA79 5FFF0000         (       monkey.asm):01705                     .dw     Voice5+XX,Off+None
DA7D 6FFF0000         (       monkey.asm):01706                     .dw     Voice6+XX,Off+None
DA81 7FFF0002         (       monkey.asm):01707                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01708                 
                      (       monkey.asm):01709                     ; 38:8  Voice    Note   Vol   Dur
DA85 51FC0700         (       monkey.asm):01710                     .dw     Voice5+A3,Mid+None
DA89 62A70700         (       monkey.asm):01711                     .dw     Voice6+E3,Mid+None
DA8D 73570708         (       monkey.asm):01712                     .dw     Voice7+C3,Mid+Sixteenth
DA91 5FFF0000         (       monkey.asm):01713                     .dw     Voice5+XX,Off+None
DA95 6FFF0000         (       monkey.asm):01714                     .dw     Voice6+XX,Off+None
DA99 7FFF0010         (       monkey.asm):01715                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01716                 
                      (       monkey.asm):01717                     ; 38:9  Voice    Note   Vol   Dur
DA9D 51FC0700         (       monkey.asm):01718                     .dw     Voice5+A3,Mid+None
DAA1 62A70700         (       monkey.asm):01719                     .dw     Voice6+E3,Mid+None
DAA5 73570700         (       monkey.asm):01720                     .dw     Voice7+C3,Mid+None
DAA9 85010708         (       monkey.asm):01721                     .dw     Voice8+F2,Mid+Sixteenth
DAAD 5FFF0000         (       monkey.asm):01722                     .dw     Voice5+XX,Off+None
DAB1 6FFF0000         (       monkey.asm):01723                     .dw     Voice6+XX,Off+None
DAB5 7FFF0000         (       monkey.asm):01724                     .dw     Voice7+XX,Off+None
DAB9 8FFF0002         (       monkey.asm):01725                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01726                 
                      (       monkey.asm):01727                     ; 38:10 Voice    Note   Vol   Dur
DABD 51FC0700         (       monkey.asm):01728                     .dw     Voice5+A3,Mid+None
DAC1 62A70700         (       monkey.asm):01729                     .dw     Voice6+E3,Mid+None
DAC5 73570700         (       monkey.asm):01730                     .dw     Voice7+C3,Mid+None
DAC9 85010708         (       monkey.asm):01731                     .dw     Voice8+F2,Mid+Sixteenth
DACD 1FFF0000         (       monkey.asm):01732                     .dw     Voice1+XX,Off+None
DAD1 3FFF0000         (       monkey.asm):01733                     .dw     Voice3+XX,Off+None
DAD5 5FFF0000         (       monkey.asm):01734                     .dw     Voice5+XX,Off+None
DAD9 6FFF0000         (       monkey.asm):01735                     .dw     Voice6+XX,Off+None
DADD 7FFF0000         (       monkey.asm):01736                     .dw     Voice7+XX,Off+None
DAE1 8FFF0002         (       monkey.asm):01737                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01738                 
                      (       monkey.asm):01739                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01740                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01741                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01742                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01743                     
                      (       monkey.asm):01744                     ; 39:1  Voice    Note   Vol   Dur
DAE5 111D0700         (       monkey.asm):01745                     .dw     Voice1+G4,Mid+None
DAE9 323B0700         (       monkey.asm):01746                     .dw     Voice3+G3,Mid+None
DAED 854D0710         (       monkey.asm):01747                     .dw     Voice8+E2,Mid+Eighth
DAF1 8FFF0002         (       monkey.asm):01748                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01749                 
                      (       monkey.asm):01750                     ; 39:2  Voice    Note   Vol   Dur
DAF5 523B0700         (       monkey.asm):01751                     .dw     Voice5+G3,Mid+None
DAF9 62A70700         (       monkey.asm):01752                     .dw     Voice6+E3,Mid+None
DAFD 738A0700         (       monkey.asm):01753                     .dw     Voice7+B2,Mid+None
DB01 87140708         (       monkey.asm):01754                     .dw     Voice8+B1,Mid+Sixteenth
DB05 5FFF0000         (       monkey.asm):01755                     .dw     Voice5+XX,Off+None
DB09 6FFF0000         (       monkey.asm):01756                     .dw     Voice6+XX,Off+None
DB0D 7FFF0002         (       monkey.asm):01757                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01758                 
                      (       monkey.asm):01759                     ; 39:3  Voice    Note   Vol   Dur
DB11 523B0700         (       monkey.asm):01760                     .dw     Voice5+G3,Mid+None
DB15 62A70700         (       monkey.asm):01761                     .dw     Voice6+E3,Mid+None
DB19 738A0708         (       monkey.asm):01762                     .dw     Voice7+B2,Mid+Sixteenth
DB1D 5FFF0000         (       monkey.asm):01763                     .dw     Voice5+XX,Off+None
DB21 6FFF0000         (       monkey.asm):01764                     .dw     Voice6+XX,Off+None
DB25 7FFF0000         (       monkey.asm):01765                     .dw     Voice7+XX,Off+None
DB29 8FFF0002         (       monkey.asm):01766                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01767                 
                      (       monkey.asm):01768                     ; 39:4  Voice    Note   Vol   Dur
DB2D 88EB0710         (       monkey.asm):01769                     .dw     Voice8+G1,Mid+Eighth
DB31 8FFF0002         (       monkey.asm):01770                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01771                 
                      (       monkey.asm):01772                     ; 39:5  Voice    Note   Vol   Dur
DB35 523B0700         (       monkey.asm):01773                     .dw     Voice5+G3,Mid+None
DB39 62A70700         (       monkey.asm):01774                     .dw     Voice6+E3,Mid+None
DB3D 738A0708         (       monkey.asm):01775                     .dw     Voice7+B2,Mid+Sixteenth
DB41 5FFF0000         (       monkey.asm):01776                     .dw     Voice5+XX,Off+None
DB45 6FFF0000         (       monkey.asm):01777                     .dw     Voice6+XX,Off+None
DB49 7FFF0002         (       monkey.asm):01778                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01779                 
                      (       monkey.asm):01780                     ; 39:6  Voice    Note   Vol   Dur
DB4D 523B0700         (       monkey.asm):01781                     .dw     Voice5+G3,Mid+None
DB51 62A70700         (       monkey.asm):01782                     .dw     Voice6+E3,Mid+None
DB55 738A0708         (       monkey.asm):01783                     .dw     Voice7+B2,Mid+Sixteenth
DB59 5FFF0000         (       monkey.asm):01784                     .dw     Voice5+XX,Off+None
DB5D 6FFF0000         (       monkey.asm):01785                     .dw     Voice6+XX,Off+None
DB61 7FFF0010         (       monkey.asm):01786                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01787                 
                      (       monkey.asm):01788                     ; 39:7  Voice    Note   Vol   Dur
DB65 523B0700         (       monkey.asm):01789                     .dw     Voice5+G3,Mid+None
DB69 62A70700         (       monkey.asm):01790                     .dw     Voice6+E3,Mid+None
DB6D 738A0708         (       monkey.asm):01791                     .dw     Voice7+B2,Mid+Sixteenth
DB71 5FFF0000         (       monkey.asm):01792                     .dw     Voice5+XX,Off+None
DB75 6FFF0000         (       monkey.asm):01793                     .dw     Voice6+XX,Off+None
DB79 7FFF0002         (       monkey.asm):01794                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01795                 
                      (       monkey.asm):01796                     ; 39:8  Voice    Note   Vol   Dur
DB7D 523B0700         (       monkey.asm):01797                     .dw     Voice5+G3,Mid+None
DB81 62A70700         (       monkey.asm):01798                     .dw     Voice6+E3,Mid+None
DB85 738A0708         (       monkey.asm):01799                     .dw     Voice7+B2,Mid+Sixteenth
DB89 5FFF0000         (       monkey.asm):01800                     .dw     Voice5+XX,Off+None
DB8D 6FFF0000         (       monkey.asm):01801                     .dw     Voice6+XX,Off+None
DB91 7FFF0010         (       monkey.asm):01802                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01803                 
                      (       monkey.asm):01804                     ; 39:9  Voice    Note   Vol   Dur
DB95 1FFF0000         (       monkey.asm):01805                     .dw     Voice1+XX,Off+None
DB99 3FFF0002         (       monkey.asm):01806                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):01807                     
                      (       monkey.asm):01808                     ; 39:10 Voice    Note   Vol   Dur
DB9D 112E0700         (       monkey.asm):01809                     .dw     Voice1+Fs4,Mid+None
DBA1 325D0700         (       monkey.asm):01810                     .dw     Voice3+Fs3,Mid+None 
DBA5 523B0700         (       monkey.asm):01811                     .dw     Voice5+G3,Mid+None
DBA9 62A70700         (       monkey.asm):01812                     .dw     Voice6+E3,Mid+None
DBAD 738A0700         (       monkey.asm):01813                     .dw     Voice7+B2,Mid+None
DBB1 88EB0708         (       monkey.asm):01814                     .dw     Voice8+G1,Mid+Sixteenth
DBB5 5FFF0000         (       monkey.asm):01815                     .dw     Voice5+XX,Off+None
DBB9 6FFF0000         (       monkey.asm):01816                     .dw     Voice6+XX,Off+None
DBBD 7FFF0000         (       monkey.asm):01817                     .dw     Voice7+XX,Off+None
DBC1 8FFF0002         (       monkey.asm):01818                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01819                 
                      (       monkey.asm):01820                     ; 39:11 Voice    Note   Vol   Dur
DBC5 523B0700         (       monkey.asm):01821                     .dw     Voice5+G3,Mid+None
DBC9 62A70700         (       monkey.asm):01822                     .dw     Voice6+E3,Mid+None
DBCD 738A0700         (       monkey.asm):01823                     .dw     Voice7+B2,Mid+None
DBD1 88EB0708         (       monkey.asm):01824                     .dw     Voice8+G1,Mid+Sixteenth
DBD5 1FFF0000         (       monkey.asm):01825                     .dw     Voice1+XX,Off+None
DBD9 3FFF0000         (       monkey.asm):01826                     .dw     Voice3+XX,Off+None
DBDD 5FFF0000         (       monkey.asm):01827                     .dw     Voice5+XX,Off+None
DBE1 6FFF0000         (       monkey.asm):01828                     .dw     Voice6+XX,Off+None
DBE5 7FFF0000         (       monkey.asm):01829                     .dw     Voice7+XX,Off+None
DBE9 8FFF0002         (       monkey.asm):01830                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01831                 
                      (       monkey.asm):01832                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01833                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01834                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01835                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01836                     
                      (       monkey.asm):01837                     ; 40:1  Voice    Note   Vol   Dur
DBED 111D0700         (       monkey.asm):01838                     .dw     Voice1+G4,Mid+None
DBF1 323B0700         (       monkey.asm):01839                     .dw     Voice3+G3,Mid+None
DBF5 86AE0710         (       monkey.asm):01840                     .dw     Voice8+C2,Mid+Eighth
DBF9 8FFF0002         (       monkey.asm):01841                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01842                 
                      (       monkey.asm):01843                     ; 40:2  Voice    Note   Vol   Dur
DBFD 523B0700         (       monkey.asm):01844                     .dw     Voice5+G3,Mid+None
DC01 62A70700         (       monkey.asm):01845                     .dw     Voice6+E3,Mid+None
DC05 73570700         (       monkey.asm):01846                     .dw     Voice7+C3,Mid+None
DC09 859E0708         (       monkey.asm):01847                     .dw     Voice8+Eb2,Mid+Sixteenth
DC0D 5FFF0000         (       monkey.asm):01848                     .dw     Voice5+XX,Off+None
DC11 6FFF0000         (       monkey.asm):01849                     .dw     Voice6+XX,Off+None
DC15 7FFF0002         (       monkey.asm):01850                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01851                 
                      (       monkey.asm):01852                     ; 40:3  Voice    Note   Vol   Dur
DC19 523B0700         (       monkey.asm):01853                     .dw     Voice5+G3,Mid+None
DC1D 62A70700         (       monkey.asm):01854                     .dw     Voice6+E3,Mid+None
DC21 73570708         (       monkey.asm):01855                     .dw     Voice7+C3,Mid+Sixteenth
DC25 5FFF0000         (       monkey.asm):01856                     .dw     Voice5+XX,Off+None
DC29 6FFF0000         (       monkey.asm):01857                     .dw     Voice6+XX,Off+None
DC2D 7FFF0000         (       monkey.asm):01858                     .dw     Voice7+XX,Off+None
DC31 8FFF0002         (       monkey.asm):01859                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01860                 
                      (       monkey.asm):01861                     ; 40:4  Voice    Note   Vol   Dur
DC35 84750710         (       monkey.asm):01862                     .dw     Voice8+G2,Mid+Eighth
DC39 8FFF0002         (       monkey.asm):01863                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01864                 
                      (       monkey.asm):01865                     ; 40:5  Voice    Note   Vol   Dur
DC3D 523B0700         (       monkey.asm):01866                     .dw     Voice5+G3,Mid+None
DC41 62A70700         (       monkey.asm):01867                     .dw     Voice6+E3,Mid+None
DC45 73570708         (       monkey.asm):01868                     .dw     Voice7+C3,Mid+Sixteenth
DC49 5FFF0000         (       monkey.asm):01869                     .dw     Voice5+XX,Off+None
DC4D 6FFF0000         (       monkey.asm):01870                     .dw     Voice6+XX,Off+None
DC51 7FFF0002         (       monkey.asm):01871                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01872                 
                      (       monkey.asm):01873                     ; 40:6  Voice    Note   Vol   Dur
DC55 523B0700         (       monkey.asm):01874                     .dw     Voice5+G3,Mid+None
DC59 62A70700         (       monkey.asm):01875                     .dw     Voice6+E3,Mid+None
DC5D 73570708         (       monkey.asm):01876                     .dw     Voice7+C3,Mid+Sixteenth
DC61 1FFF0000         (       monkey.asm):01877                     .dw     Voice1+XX,Off+None
DC65 3FFF0000         (       monkey.asm):01878                     .dw     Voice3+XX,Off+None
DC69 5FFF0000         (       monkey.asm):01879                     .dw     Voice5+XX,Off+None
DC6D 6FFF0000         (       monkey.asm):01880                     .dw     Voice6+XX,Off+None
DC71 7FFF0002         (       monkey.asm):01881                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01882                 
                      (       monkey.asm):01883                     ; 40:7  Voice    Note   Vol   Dur
DC75 10D60700         (       monkey.asm):01884                     .dw     Voice1+C5,Mid+None
DC79 31AC0710         (       monkey.asm):01885                     .dw     Voice3+C4,Mid+Eighth
                      (       monkey.asm):01886                 
                      (       monkey.asm):01887                     ; 40:8  Voice    Note   Vol   Dur
DC7D 523B0700         (       monkey.asm):01888                     .dw     Voice5+G3,Mid+None
DC81 62A70700         (       monkey.asm):01889                     .dw     Voice6+E3,Mid+None
DC85 73570708         (       monkey.asm):01890                     .dw     Voice7+C3,Mid+Sixteenth
DC89 5FFF0000         (       monkey.asm):01891                     .dw     Voice5+XX,Off+None
DC8D 6FFF0000         (       monkey.asm):01892                     .dw     Voice6+XX,Off+None
DC91 7FFF0002         (       monkey.asm):01893                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01894                 
                      (       monkey.asm):01895                     ; 40:9  Voice    Note   Vol   Dur
DC95 523B0700         (       monkey.asm):01896                     .dw     Voice5+G3,Mid+None
DC99 62A70700         (       monkey.asm):01897                     .dw     Voice6+E3,Mid+None
DC9D 73570708         (       monkey.asm):01898                     .dw     Voice7+C3,Mid+Sixteenth
DCA1 5FFF0000         (       monkey.asm):01899                     .dw     Voice5+XX,Off+None
DCA5 6FFF0000         (       monkey.asm):01900                     .dw     Voice6+XX,Off+None
DCA9 7FFF0010         (       monkey.asm):01901                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01902                 
                      (       monkey.asm):01903                     ; 40:10 Voice    Note   Vol   Dur
DCAD 523B0700         (       monkey.asm):01904                     .dw     Voice5+G3,Mid+None
DCB1 62A70700         (       monkey.asm):01905                     .dw     Voice6+E3,Mid+None
DCB5 73570700         (       monkey.asm):01906                     .dw     Voice7+C3,Mid+None
DCB9 84750708         (       monkey.asm):01907                     .dw     Voice8+G2,Mid+Sixteenth
DCBD 5FFF0000         (       monkey.asm):01908                     .dw     Voice5+XX,Off+None
DCC1 6FFF0000         (       monkey.asm):01909                     .dw     Voice6+XX,Off+None
DCC5 7FFF0000         (       monkey.asm):01910                     .dw     Voice7+XX,Off+None
DCC9 8FFF0002         (       monkey.asm):01911                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01912                 
                      (       monkey.asm):01913                     ; 40:11 Voice    Note   Vol   Dur
DCCD 523B0700         (       monkey.asm):01914                     .dw     Voice5+G3,Mid+None
DCD1 62A70700         (       monkey.asm):01915                     .dw     Voice6+E3,Mid+None
DCD5 73570700         (       monkey.asm):01916                     .dw     Voice7+C3,Mid+None
DCD9 823B0708         (       monkey.asm):01917                     .dw     Voice8+G3,Mid+Sixteenth
DCDD 1FFF0000         (       monkey.asm):01918                     .dw     Voice1+XX,Off+None
DCE1 3FFF0000         (       monkey.asm):01919                     .dw     Voice3+XX,Off+None
DCE5 5FFF0000         (       monkey.asm):01920                     .dw     Voice5+XX,Off+None
DCE9 6FFF0000         (       monkey.asm):01921                     .dw     Voice6+XX,Off+None
DCED 7FFF0000         (       monkey.asm):01922                     .dw     Voice7+XX,Off+None
DCF1 8FFF0002         (       monkey.asm):01923                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01924                 
                      (       monkey.asm):01925                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):01926                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):01927                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):01928                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):01929                     
                      (       monkey.asm):01930                     ; 41:1  Voice    Note   Vol   Dur
DCF5 10BE0700         (       monkey.asm):01931                     .dw     Voice1+D5,Mid+None
DCF9 317D0700         (       monkey.asm):01932                     .dw     Voice3+D4,Mid+None
DCFD 84B90710         (       monkey.asm):01933                     .dw     Voice8+Fs2,Mid+Eighth
DD01 8FFF0002         (       monkey.asm):01934                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01935                 
                      (       monkey.asm):01936                     ; 41:2  Voice    Note   Vol   Dur
DD05 51FC0700         (       monkey.asm):01937                     .dw     Voice5+A3,Mid+None
DD09 625D0700         (       monkey.asm):01938                     .dw     Voice6+Fs3,Mid+None
DD0D 72FA0700         (       monkey.asm):01939                     .dw     Voice7+D3,Mid+None
DD11 85F40708         (       monkey.asm):01940                     .dw     Voice8+D2,Mid+Sixteenth
DD15 5FFF0000         (       monkey.asm):01941                     .dw     Voice5+XX,Off+None
DD19 6FFF0000         (       monkey.asm):01942                     .dw     Voice6+XX,Off+None
DD1D 7FFF0002         (       monkey.asm):01943                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01944                 
                      (       monkey.asm):01945                     ; 41:3  Voice    Note   Vol   Dur
DD21 51FC0700         (       monkey.asm):01946                     .dw     Voice5+A3,Mid+None
DD25 625D0700         (       monkey.asm):01947                     .dw     Voice6+Fs3,Mid+None
DD29 72FA0708         (       monkey.asm):01948                     .dw     Voice7+D3,Mid+Sixteenth
DD2D 5FFF0000         (       monkey.asm):01949                     .dw     Voice5+XX,Off+None
DD31 6FFF0000         (       monkey.asm):01950                     .dw     Voice6+XX,Off+None
DD35 7FFF0000         (       monkey.asm):01951                     .dw     Voice7+XX,Off+None
DD39 8FFF0002         (       monkey.asm):01952                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01953                 
                      (       monkey.asm):01954                     ; 41:4  Voice    Note   Vol   Dur
DD3D 87F20710         (       monkey.asm):01955                     .dw     Voice8+A1,Mid+Eighth
DD41 8FFF0002         (       monkey.asm):01956                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01957                 
                      (       monkey.asm):01958                     ; 41:5  Voice    Note   Vol   Dur
DD45 51FC0700         (       monkey.asm):01959                     .dw     Voice5+A3,Mid+None
DD49 625D0700         (       monkey.asm):01960                     .dw     Voice6+Fs3,Mid+None
DD4D 72FA0708         (       monkey.asm):01961                     .dw     Voice7+D3,Mid+Sixteenth
DD51 5FFF0000         (       monkey.asm):01962                     .dw     Voice5+XX,Off+None
DD55 6FFF0000         (       monkey.asm):01963                     .dw     Voice6+XX,Off+None
DD59 7FFF0002         (       monkey.asm):01964                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01965                 
                      (       monkey.asm):01966                     ; 41:6  Voice    Note   Vol   Dur
DD5D 51FC0700         (       monkey.asm):01967                     .dw     Voice5+A3,Mid+None
DD61 625D0700         (       monkey.asm):01968                     .dw     Voice6+Fs3,Mid+None
DD65 72FA0708         (       monkey.asm):01969                     .dw     Voice7+D3,Mid+Sixteenth
DD69 5FFF0000         (       monkey.asm):01970                     .dw     Voice5+XX,Off+None
DD6D 6FFF0000         (       monkey.asm):01971                     .dw     Voice6+XX,Off+None
DD71 7FFF0010         (       monkey.asm):01972                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01973                 
                      (       monkey.asm):01974                     ; 41:7  Voice    Note   Vol   Dur
DD75 51FC0700         (       monkey.asm):01975                     .dw     Voice5+A3,Mid+None
DD79 625D0700         (       monkey.asm):01976                     .dw     Voice6+Fs3,Mid+None
DD7D 72FA0708         (       monkey.asm):01977                     .dw     Voice7+D3,Mid+Sixteenth
DD81 5FFF0000         (       monkey.asm):01978                     .dw     Voice5+XX,Off+None
DD85 6FFF0000         (       monkey.asm):01979                     .dw     Voice6+XX,Off+None
DD89 7FFF0002         (       monkey.asm):01980                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):01981                 
                      (       monkey.asm):01982                     ; 41:8  Voice    Note   Vol   Dur
DD8D 51FC0700         (       monkey.asm):01983                     .dw     Voice5+A3,Mid+None
DD91 625D0700         (       monkey.asm):01984                     .dw     Voice6+Fs3,Mid+None
DD95 72FA0708         (       monkey.asm):01985                     .dw     Voice7+D3,Mid+Sixteenth
DD99 5FFF0000         (       monkey.asm):01986                     .dw     Voice5+XX,Off+None
DD9D 6FFF0000         (       monkey.asm):01987                     .dw     Voice6+XX,Off+None
DDA1 7FFF0010         (       monkey.asm):01988                     .dw     Voice7+XX,Off+Eighth
                      (       monkey.asm):01989                 
                      (       monkey.asm):01990                     ; 41:9  Voice    Note   Vol   Dur
DDA5 51FC0700         (       monkey.asm):01991                     .dw     Voice5+A3,Mid+None
DDA9 625D0700         (       monkey.asm):01992                     .dw     Voice6+Fs3,Mid+None
DDAD 72FA0700         (       monkey.asm):01993                     .dw     Voice7+D3,Mid+None
DDB1 85F40708         (       monkey.asm):01994                     .dw     Voice8+D2,Mid+Sixteenth
DDB5 5FFF0000         (       monkey.asm):01995                     .dw     Voice5+XX,Off+None
DDB9 6FFF0000         (       monkey.asm):01996                     .dw     Voice6+XX,Off+None
DDBD 7FFF0000         (       monkey.asm):01997                     .dw     Voice7+XX,Off+None
DDC1 8FFF0002         (       monkey.asm):01998                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):01999                 
                      (       monkey.asm):02000                     ; 41:10 Voice    Note   Vol   Dur
DDC5 51FC0700         (       monkey.asm):02001                     .dw     Voice5+A3,Mid+None
DDC9 625D0700         (       monkey.asm):02002                     .dw     Voice6+Fs3,Mid+None
DDCD 72FA0700         (       monkey.asm):02003                     .dw     Voice7+D3,Mid+None
DDD1 85F40708         (       monkey.asm):02004                     .dw     Voice8+D2,Mid+Sixteenth
DDD5 1FFF0000         (       monkey.asm):02005                     .dw     Voice1+XX,Off+None
DDD9 3FFF0000         (       monkey.asm):02006                     .dw     Voice3+XX,Off+None
DDDD 5FFF0000         (       monkey.asm):02007                     .dw     Voice5+XX,Off+None
DDE1 6FFF0000         (       monkey.asm):02008                     .dw     Voice6+XX,Off+None
DDE5 7FFF0000         (       monkey.asm):02009                     .dw     Voice7+XX,Off+None
DDE9 8FFF0002         (       monkey.asm):02010                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02011                 
                      (       monkey.asm):02012                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02013                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02014                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02015                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02016                 
                      (       monkey.asm):02017                     ; 42:1  Voice    Note   Vol   Dur
DDED 10AA0700         (       monkey.asm):02018                     .dw     Voice1+E5,Mid+None
DDF1 31530700         (       monkey.asm):02019                     .dw     Voice3+E4,Mid+None
DDF5 854D0708         (       monkey.asm):02020                     .dw     Voice8+E2,Mid+Sixteenth
DDF9 8FFF0008         (       monkey.asm):02021                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):02022                 
                      (       monkey.asm):02023                     ; 42:2  Voice    Note   Vol   Dur
DDFD 1FFF0000         (       monkey.asm):02024                     .dw     Voice1+XX,Off+None
DE01 3FFF0002         (       monkey.asm):02025                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02026                 
                      (       monkey.asm):02027                     ; 42:3  Voice    Note   Vol   Dur
DE05 10AA0700         (       monkey.asm):02028                     .dw     Voice1+E5,Mid+None
DE09 31530700         (       monkey.asm):02029                     .dw     Voice3+E4,Mid+None
DE0D 523B0700         (       monkey.asm):02030                     .dw     Voice5+G3,Mid+None
DE11 62A70700         (       monkey.asm):02031                     .dw     Voice6+E3,Mid+None
DE15 738A0700         (       monkey.asm):02032                     .dw     Voice7+B2,Mid+None
DE19 854D0708         (       monkey.asm):02033                     .dw     Voice8+E2,Mid+Sixteenth
DE1D 1FFF0000         (       monkey.asm):02034                     .dw     Voice1+XX,Off+None
DE21 3FFF0000         (       monkey.asm):02035                     .dw     Voice3+XX,Off+None
DE25 5FFF0000         (       monkey.asm):02036                     .dw     Voice5+XX,Off+None
DE29 6FFF0000         (       monkey.asm):02037                     .dw     Voice6+XX,Off+None
DE2D 7FFF0000         (       monkey.asm):02038                     .dw     Voice7+XX,Off+None
DE31 8FFF0002         (       monkey.asm):02039                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02040                 
                      (       monkey.asm):02041                     ; 42:4  Voice    Note   Vol   Dur
DE35 108F0700         (       monkey.asm):02042                     .dw     Voice1+G5,Mid+None
DE39 311D0700         (       monkey.asm):02043                     .dw     Voice3+G4,Mid+None
DE3D 523B0700         (       monkey.asm):02044                     .dw     Voice5+G3,Mid+None
DE41 62A70700         (       monkey.asm):02045                     .dw     Voice6+E3,Mid+None
DE45 738A0700         (       monkey.asm):02046                     .dw     Voice7+B2,Mid+None
DE49 854D0708         (       monkey.asm):02047                     .dw     Voice8+E2,Mid+Sixteenth
DE4D 1FFF0000         (       monkey.asm):02048                     .dw     Voice1+XX,Off+None
DE51 3FFF0000         (       monkey.asm):02049                     .dw     Voice3+XX,Off+None
DE55 5FFF0000         (       monkey.asm):02050                     .dw     Voice5+XX,Off+None
DE59 6FFF0000         (       monkey.asm):02051                     .dw     Voice6+XX,Off+None
DE5D 7FFF0000         (       monkey.asm):02052                     .dw     Voice7+XX,Off+None
DE61 8FFF0002         (       monkey.asm):02053                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02054                 
                      (       monkey.asm):02055                     ; 42:5  Voice    Note   Vol   Dur
DE65 10970700         (       monkey.asm):02056                     .dw     Voice1+Fs5,Mid+None
DE69 312E0708         (       monkey.asm):02057                     .dw     Voice3+Fs4,Mid+Sixteenth
DE6D 1FFF0000         (       monkey.asm):02058                     .dw     Voice1+XX,Off+None
DE71 3FFF0002         (       monkey.asm):02059                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02060                 
                      (       monkey.asm):02061                     ; 42:6  Voice    Note   Vol   Dur
DE75 10AA0700         (       monkey.asm):02062                     .dw     Voice1+E5,Mid+None
DE79 31530708         (       monkey.asm):02063                     .dw     Voice3+E4,Mid+Sixteenth
DE7D 1FFF0000         (       monkey.asm):02064                     .dw     Voice1+XX,Off+None
DE81 3FFF0002         (       monkey.asm):02065                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02066                 
                      (       monkey.asm):02067                     ; 42:7  Voice    Note   Vol   Dur
DE85 10BE0700         (       monkey.asm):02068                     .dw     Voice1+D5,Mid+None
DE89 317D0700         (       monkey.asm):02069                     .dw     Voice3+D4,Mid+None
DE8D 51FC0700         (       monkey.asm):02070                     .dw     Voice5+A3,Mid+None
DE91 625D0700         (       monkey.asm):02071                     .dw     Voice6+Fs3,Mid+None
DE95 72FA0700         (       monkey.asm):02072                     .dw     Voice7+D3,Mid+None
DE99 85F40708         (       monkey.asm):02073                     .dw     Voice8+D2,Mid+Sixteenth
DE9D 5FFF0000         (       monkey.asm):02074                     .dw     Voice5+XX,Off+None
DEA1 6FFF0000         (       monkey.asm):02075                     .dw     Voice6+XX,Off+None
DEA5 7FFF0000         (       monkey.asm):02076                     .dw     Voice7+XX,Off+None
DEA9 8FFF0002         (       monkey.asm):02077                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02078                 
                      (       monkey.asm):02079                     ; 42:8  Voice    Note   Vol   Dur
DEAD 51FC0700         (       monkey.asm):02080                     .dw     Voice5+A3,Mid+None
DEB1 625D0700         (       monkey.asm):02081                     .dw     Voice6+Fs3,Mid+None
DEB5 72FA0700         (       monkey.asm):02082                     .dw     Voice7+D3,Mid+None
DEB9 85F40708         (       monkey.asm):02083                     .dw     Voice8+D2,Mid+Sixteenth
DEBD 1FFF0000         (       monkey.asm):02084                     .dw     Voice1+XX,Off+None
DEC1 3FFF0000         (       monkey.asm):02085                     .dw     Voice3+XX,Off+None
DEC5 5FFF0000         (       monkey.asm):02086                     .dw     Voice5+XX,Off+None
DEC9 6FFF0000         (       monkey.asm):02087                     .dw     Voice6+XX,Off+None
DECD 7FFF0000         (       monkey.asm):02088                     .dw     Voice7+XX,Off+None
DED1 8FFF0002         (       monkey.asm):02089                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02090                 
                      (       monkey.asm):02091                     ; 42:9  Voice    Note   Vol   Dur
DED5 10AA0700         (       monkey.asm):02092                     .dw     Voice1+E5,Mid+None
DED9 31530700         (       monkey.asm):02093                     .dw     Voice3+E4,Mid+None
DEDD 86AE0708         (       monkey.asm):02094                     .dw     Voice8+C2,Mid+Sixteenth
DEE1 8FFF0002         (       monkey.asm):02095                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02096                 
                      (       monkey.asm):02097                     ; 42:10 Voice    Note   Vol   Dur
DEE5 86AE0708         (       monkey.asm):02098                     .dw     Voice8+C2,Mid+Sixteenth
DEE9 8FFF0002         (       monkey.asm):02099                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02100                 
                      (       monkey.asm):02101                     ; 42:11 Voice    Note   Vol   Dur
DEED 523B0700         (       monkey.asm):02102                     .dw     Voice5+G3,Mid+None
DEF1 62A70700         (       monkey.asm):02103                     .dw     Voice6+E3,Mid+None
DEF5 73570708         (       monkey.asm):02104                     .dw     Voice7+C3,Mid+Sixteenth
DEF9 5FFF0000         (       monkey.asm):02105                     .dw     Voice5+XX,Off+None
DEFD 6FFF0000         (       monkey.asm):02106                     .dw     Voice6+XX,Off+None
DF01 7FFF0002         (       monkey.asm):02107                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02108                 
                      (       monkey.asm):02109                     ; 42:12 Voice    Note   Vol   Dur
DF05 523B0700         (       monkey.asm):02110                     .dw     Voice5+G3,Mid+None
DF09 62A70700         (       monkey.asm):02111                     .dw     Voice6+E3,Mid+None
DF0D 73570700         (       monkey.asm):02112                     .dw     Voice7+C3,Mid+None
DF11 86AE0708         (       monkey.asm):02113                     .dw     Voice8+C2,Mid+Sixteenth
DF15 1FFF0000         (       monkey.asm):02114                     .dw     Voice1+XX,Off+None
DF19 3FFF0000         (       monkey.asm):02115                     .dw     Voice3+XX,Off+None
DF1D 5FFF0000         (       monkey.asm):02116                     .dw     Voice5+XX,Off+None
DF21 6FFF0000         (       monkey.asm):02117                     .dw     Voice6+XX,Off+None
DF25 7FFF0000         (       monkey.asm):02118                     .dw     Voice7+XX,Off+None
DF29 8FFF0002         (       monkey.asm):02119                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02120                 
                      (       monkey.asm):02121                     ; 42:13 Voice    Note   Vol   Dur
DF2D 88EB0708         (       monkey.asm):02122                     .dw     Voice8+G1,Mid+Sixteenth
DF31 8FFF0008         (       monkey.asm):02123                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):02124                     
                      (       monkey.asm):02125                     ; 42:14 Voice    Note   Vol   Dur
DF35 10BE0700         (       monkey.asm):02126                     .dw     Voice1+D5,Mid+None
DF39 317D0700         (       monkey.asm):02127                     .dw     Voice3+D4,Mid+None
DF3D 523B0700         (       monkey.asm):02128                     .dw     Voice5+G3,Mid+None
DF41 62A70700         (       monkey.asm):02129                     .dw     Voice6+E3,Mid+None
DF45 73570700         (       monkey.asm):02130                     .dw     Voice7+C3,Mid+None
DF49 88EB0708         (       monkey.asm):02131                     .dw     Voice8+G1,Mid+Sixteenth
DF4D 5FFF0000         (       monkey.asm):02132                     .dw     Voice5+XX,Off+None
DF51 6FFF0000         (       monkey.asm):02133                     .dw     Voice6+XX,Off+None
DF55 7FFF0000         (       monkey.asm):02134                     .dw     Voice7+XX,Off+None
DF59 8FFF0002         (       monkey.asm):02135                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02136                 
                      (       monkey.asm):02137                     ; 42:15 Voice    Note   Vol   Dur
                      (       monkey.asm):02138                 
DF5D 523B0700         (       monkey.asm):02139                     .dw     Voice5+G3,Mid+None
DF61 62A70700         (       monkey.asm):02140                     .dw     Voice6+E3,Mid+None
DF65 73570700         (       monkey.asm):02141                     .dw     Voice7+C3,Mid+None
DF69 88EB0708         (       monkey.asm):02142                     .dw     Voice8+G1,Mid+Sixteenth
DF6D 1FFF0000         (       monkey.asm):02143                     .dw     Voice1+XX,Off+None
DF71 3FFF0000         (       monkey.asm):02144                     .dw     Voice3+XX,Off+None
DF75 5FFF0000         (       monkey.asm):02145                     .dw     Voice5+XX,Off+None
DF79 6FFF0000         (       monkey.asm):02146                     .dw     Voice6+XX,Off+None
DF7D 7FFF0000         (       monkey.asm):02147                     .dw     Voice7+XX,Off+None
DF81 8FFF0002         (       monkey.asm):02148                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02149                 
                      (       monkey.asm):02150                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02151                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02152                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02153                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02154                 
                      (       monkey.asm):02155                     ; 43:1  Voice    Note   Vol   Dur
DF85 10BE0700         (       monkey.asm):02156                     .dw     Voice1+D5,Mid+None
DF89 317D0708         (       monkey.asm):02157                     .dw     Voice3+D4,Mid+Sixteenth
DF8D 1FFF0000         (       monkey.asm):02158                     .dw     Voice1+XX,Off+None
DF91 3FFF0002         (       monkey.asm):02159                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02160                 
                      (       monkey.asm):02161                     ; 43:2  Voice    Note   Vol   Dur
DF95 10D60700         (       monkey.asm):02162                     .dw     Voice1+C5,Mid+None
DF99 31AC0708         (       monkey.asm):02163                     .dw     Voice3+C4,Mid+Sixteenth
DF9D 1FFF0000         (       monkey.asm):02164                     .dw     Voice1+XX,Off+None
DFA1 3FFF0002         (       monkey.asm):02165                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02166                 
                      (       monkey.asm):02167                     ; 43:3  Voice    Note   Vol   Dur
DFA5 10E20700         (       monkey.asm):02168                     .dw     Voice1+B4,Mid+None
DFA9 31C50700         (       monkey.asm):02169                     .dw     Voice3+B3,Mid+None
DFAD 523B0700         (       monkey.asm):02170                     .dw     Voice5+G3,Mid+None
DFB1 62FA0700         (       monkey.asm):02171                     .dw     Voice6+D3,Mid+None
DFB5 738A0708         (       monkey.asm):02172                     .dw     Voice7+B2,Mid+Sixteenth
DFB9 1FFF0000         (       monkey.asm):02173                     .dw     Voice1+XX,Off+None
DFBD 3FFF0000         (       monkey.asm):02174                     .dw     Voice3+XX,Off+None
DFC1 5FFF0000         (       monkey.asm):02175                     .dw     Voice5+XX,Off+None
DFC5 6FFF0000         (       monkey.asm):02176                     .dw     Voice6+XX,Off+None
DFC9 7FFF0002         (       monkey.asm):02177                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02178                 
                      (       monkey.asm):02179                     ; 43:4  Voice    Note   Vol   Dur
DFCD 10BE0700         (       monkey.asm):02180                     .dw     Voice1+D5,Mid+None
DFD1 317D0700         (       monkey.asm):02181                     .dw     Voice3+D4,Mid+None
DFD5 523B0700         (       monkey.asm):02182                     .dw     Voice5+G3,Mid+None
DFD9 62FA0700         (       monkey.asm):02183                     .dw     Voice6+D3,Mid+None
DFDD 738A0708         (       monkey.asm):02184                     .dw     Voice7+B2,Mid+Sixteenth
DFE1 1FFF0000         (       monkey.asm):02185                     .dw     Voice1+XX,Off+None
DFE5 3FFF0000         (       monkey.asm):02186                     .dw     Voice3+XX,Off+None
DFE9 5FFF0000         (       monkey.asm):02187                     .dw     Voice5+XX,Off+None
DFED 6FFF0000         (       monkey.asm):02188                     .dw     Voice6+XX,Off+None
DFF1 7FFF0002         (       monkey.asm):02189                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02190                 
                      (       monkey.asm):02191                     ; 43:5  Voice    Note   Vol   Dur
DFF5 10D60700         (       monkey.asm):02192                     .dw     Voice1+C5,Mid+None
DFF9 31AC0700         (       monkey.asm):02193                     .dw     Voice3+C4,Mid+None
DFFD 87F20708         (       monkey.asm):02194                     .dw     Voice8+A1,Mid+Sixteenth
E001 8FFF0002         (       monkey.asm):02195                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02196                 
                      (       monkey.asm):02197                     ; 43:6  Voice    Note   Vol   Dur
E005 87F20708         (       monkey.asm):02198                     .dw     Voice8+A1,Mid+Sixteenth
E009 1FFF0000         (       monkey.asm):02199                     .dw     Voice1+XX,Off+None
E00D 3FFF0002         (       monkey.asm):02200                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02201                 
                      (       monkey.asm):02202                     ; 43:7  Voice    Note   Vol   Dur
E011 10D60700         (       monkey.asm):02203                     .dw     Voice1+C5,Mid+None
E015 31AC0700         (       monkey.asm):02204                     .dw     Voice3+C4,Mid+None
E019 51FC0700         (       monkey.asm):02205                     .dw     Voice5+A3,Mid+None
E01D 62A70700         (       monkey.asm):02206                     .dw     Voice6+E3,Mid+None
E021 73570708         (       monkey.asm):02207                     .dw     Voice7+C3,Mid+Sixteenth
E025 5FFF0000         (       monkey.asm):02208                     .dw     Voice5+XX,Off+None
E029 6FFF0000         (       monkey.asm):02209                     .dw     Voice6+XX,Off+None
E02D 7FFF0000         (       monkey.asm):02210                     .dw     Voice7+XX,Off+None
E031 8FFF0002         (       monkey.asm):02211                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02212                 
                      (       monkey.asm):02213                     ; 43:8  Voice    Note   Vol   Dur
E035 51FC0700         (       monkey.asm):02214                     .dw     Voice5+A3,Mid+None
E039 62A70700         (       monkey.asm):02215                     .dw     Voice6+E3,Mid+None
E03D 73570700         (       monkey.asm):02216                     .dw     Voice7+C3,Mid+None
E041 87F20708         (       monkey.asm):02217                     .dw     Voice8+A1,Mid+Sixteenth
E045 1FFF0000         (       monkey.asm):02218                     .dw     Voice1+XX,Off+None
E049 3FFF0000         (       monkey.asm):02219                     .dw     Voice3+XX,Off+None
E04D 5FFF0000         (       monkey.asm):02220                     .dw     Voice5+XX,Off+None
E051 6FFF0000         (       monkey.asm):02221                     .dw     Voice6+XX,Off+None
E055 7FFF0000         (       monkey.asm):02222                     .dw     Voice7+XX,Off+None
E059 8FFF0002         (       monkey.asm):02223                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02224                 
                      (       monkey.asm):02225                     ; 43:9  Voice    Note   Vol   Dur
E05D 10E20700         (       monkey.asm):02226                     .dw     Voice1+B4,Mid+None
E061 31C50700         (       monkey.asm):02227                     .dw     Voice3+B3,Mid+None
E065 8A9B0710         (       monkey.asm):02228                     .dw     Voice8+E1,Mid+Eighth
E069 8FFF0002         (       monkey.asm):02229                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02230                 
                      (       monkey.asm):02231                     ; 43:10 Voice    Note   Vol   Dur
E06D 523B0700         (       monkey.asm):02232                     .dw     Voice5+G3,Mid+None
E071 62A70700         (       monkey.asm):02233                     .dw     Voice6+E3,Mid+None
E075 738A0700         (       monkey.asm):02234                     .dw     Voice7+B2,Mid+None
E079 8A9B0708         (       monkey.asm):02235                     .dw     Voice8+E1,Mid+Sixteenth
E07D 5FFF0000         (       monkey.asm):02236                     .dw     Voice5+XX,Off+None
E081 6FFF0000         (       monkey.asm):02237                     .dw     Voice6+XX,Off+None
E085 7FFF0000         (       monkey.asm):02238                     .dw     Voice7+XX,Off+None
E089 8FFF0002         (       monkey.asm):02239                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02240                 
                      (       monkey.asm):02241                     ; 43:11 Voice    Note   Vol   Dur
E08D 523B0700         (       monkey.asm):02242                     .dw     Voice5+G3,Mid+None
E091 62A70700         (       monkey.asm):02243                     .dw     Voice6+E3,Mid+None
E095 738A0700         (       monkey.asm):02244                     .dw     Voice7+B2,Mid+None
E099 8A9B0708         (       monkey.asm):02245                     .dw     Voice8+E1,Mid+Sixteenth
E09D 1FFF0000         (       monkey.asm):02246                     .dw     Voice1+XX,Off+None
E0A1 3FFF0000         (       monkey.asm):02247                     .dw     Voice3+XX,Off+None
E0A5 5FFF0000         (       monkey.asm):02248                     .dw     Voice5+XX,Off+None
E0A9 6FFF0000         (       monkey.asm):02249                     .dw     Voice6+XX,Off+None
E0AD 7FFF0000         (       monkey.asm):02250                     .dw     Voice7+XX,Off+None
E0B1 8FFF0010         (       monkey.asm):02251                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):02252                 
                      (       monkey.asm):02253                     ; 43:12 Voice    Note   Vol   Dur
E0B5 10AA0700         (       monkey.asm):02254                     .dw     Voice1+E5,Mid+None
E0B9 31530700         (       monkey.asm):02255                     .dw     Voice3+E4,Mid+None
E0BD 523B0700         (       monkey.asm):02256                     .dw     Voice5+G3,Mid+None
E0C1 62A70700         (       monkey.asm):02257                     .dw     Voice6+E3,Mid+None
E0C5 738A0708         (       monkey.asm):02258                     .dw     Voice7+B2,Mid+Sixteenth
E0C9 5FFF0000         (       monkey.asm):02259                     .dw     Voice5+XX,Off+None
E0CD 6FFF0000         (       monkey.asm):02260                     .dw     Voice6+XX,Off+None
E0D1 7FFF0002         (       monkey.asm):02261                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02262                 
                      (       monkey.asm):02263                     ; 43:13 Voice    Note   Vol   Dur
E0D5 523B0700         (       monkey.asm):02264                     .dw     Voice5+G3,Mid+None
E0D9 62A70700         (       monkey.asm):02265                     .dw     Voice6+E3,Mid+None
E0DD 738A0708         (       monkey.asm):02266                     .dw     Voice7+B2,Mid+Sixteenth
E0E1 1FFF0000         (       monkey.asm):02267                     .dw     Voice1+XX,Off+None
E0E5 3FFF0000         (       monkey.asm):02268                     .dw     Voice3+XX,Off+None
E0E9 5FFF0000         (       monkey.asm):02269                     .dw     Voice5+XX,Off+None
E0ED 6FFF0000         (       monkey.asm):02270                     .dw     Voice6+XX,Off+None
E0F1 7FFF0002         (       monkey.asm):02271                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02272                 
                      (       monkey.asm):02273                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02274                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02275                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02276                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02277                 
                      (       monkey.asm):02278                     ; 44:1  Voice    Note   Vol   Dur
E0F5 10AA0700         (       monkey.asm):02279                     .dw     Voice1+E5,Mid+None
E0F9 31530710         (       monkey.asm):02280                     .dw     Voice3+E4,Mid+Eighth
                      (       monkey.asm):02281                     
                      (       monkey.asm):02282                     ; 44:2  Voice    Note   Vol   Dur
E0FD 523B0700         (       monkey.asm):02283                     .dw     Voice5+G3,Mid+None
E101 62A70700         (       monkey.asm):02284                     .dw     Voice6+E3,Mid+None
E105 738A0700         (       monkey.asm):02285                     .dw     Voice7+B2,Mid+None
E109 854D0708         (       monkey.asm):02286                     .dw     Voice8+E2,Mid+Sixteenth
E10D 1FFF0000         (       monkey.asm):02287                     .dw     Voice1+XX,Off+None
E111 3FFF0000         (       monkey.asm):02288                     .dw     Voice3+XX,Off+None
E115 5FFF0000         (       monkey.asm):02289                     .dw     Voice5+XX,Off+None
E119 6FFF0000         (       monkey.asm):02290                     .dw     Voice6+XX,Off+None
E11D 7FFF0000         (       monkey.asm):02291                     .dw     Voice7+XX,Off+None
E121 8FFF0002         (       monkey.asm):02292                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02293                 
                      (       monkey.asm):02294                     ; 44:3  Voice    Note   Vol   Dur
E125 108F0700         (       monkey.asm):02295                     .dw     Voice1+G5,Mid+None
E129 311D0700         (       monkey.asm):02296                     .dw     Voice3+G4,Mid+None
E12D 523B0700         (       monkey.asm):02297                     .dw     Voice5+G3,Mid+None
E131 62A70700         (       monkey.asm):02298                     .dw     Voice6+E3,Mid+None
E135 738A0700         (       monkey.asm):02299                     .dw     Voice7+B2,Mid+None
E139 854D0708         (       monkey.asm):02300                     .dw     Voice8+E2,Mid+Sixteenth
E13D 1FFF0000         (       monkey.asm):02301                     .dw     Voice1+XX,Off+None
E141 3FFF0000         (       monkey.asm):02302                     .dw     Voice3+XX,Off+None
E145 5FFF0000         (       monkey.asm):02303                     .dw     Voice5+XX,Off+None
E149 6FFF0000         (       monkey.asm):02304                     .dw     Voice6+XX,Off+None
E14D 7FFF0000         (       monkey.asm):02305                     .dw     Voice7+XX,Off+None
E151 8FFF0002         (       monkey.asm):02306                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02307                 
                      (       monkey.asm):02308                     ; 44:4  Voice    Note   Vol   Dur
E155 10970700         (       monkey.asm):02309                     .dw     Voice1+Fs5,Mid+None
E159 312E0700         (       monkey.asm):02310                     .dw     Voice3+Fs4,Mid+None
E15D 85F40708         (       monkey.asm):02311                     .dw     Voice8+D2,Mid+Sixteenth
E161 1FFF0000         (       monkey.asm):02312                     .dw     Voice1+XX,Off+None
E165 3FFF0000         (       monkey.asm):02313                     .dw     Voice3+XX,Off+None
E169 8FFF0002         (       monkey.asm):02314                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02315                 
                      (       monkey.asm):02316                     ; 44:5  Voice    Note   Vol   Dur
E16D 10AA0700         (       monkey.asm):02317                     .dw     Voice1+E5,Mid+None
E171 31530700         (       monkey.asm):02318                     .dw     Voice3+E4,Mid+None
E175 85F40708         (       monkey.asm):02319                     .dw     Voice8+D2,Mid+Sixteenth
E179 1FFF0000         (       monkey.asm):02320                     .dw     Voice1+XX,Off+None
E17D 3FFF0000         (       monkey.asm):02321                     .dw     Voice3+XX,Off+None
E181 8FFF0002         (       monkey.asm):02322                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02323                 
                      (       monkey.asm):02324                     ; 44:6  Voice    Note   Vol   Dur
E185 10BE0700         (       monkey.asm):02325                     .dw     Voice1+D5,Mid+None
E189 317D0700         (       monkey.asm):02326                     .dw     Voice3+D4,Mid+None
E18D 51FC0700         (       monkey.asm):02327                     .dw     Voice5+A3,Mid+None
E191 625D0700         (       monkey.asm):02328                     .dw     Voice6+Fs3,Mid+None
E195 72FA0708         (       monkey.asm):02329                     .dw     Voice7+D3,Mid+Sixteenth
E199 5FFF0000         (       monkey.asm):02330                     .dw     Voice5+XX,Off+None
E19D 6FFF0000         (       monkey.asm):02331                     .dw     Voice6+XX,Off+None
E1A1 7FFF0002         (       monkey.asm):02332                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02333                 
                      (       monkey.asm):02334                     ; 44:7  Voice    Note   Vol   Dur
E1A5 51FC0700         (       monkey.asm):02335                     .dw     Voice5+A3,Mid+None
E1A9 625D0700         (       monkey.asm):02336                     .dw     Voice6+Fs3,Mid+None
E1AD 72FA0700         (       monkey.asm):02337                     .dw     Voice7+D3,Mid+None
E1B1 85F40708         (       monkey.asm):02338                     .dw     Voice8+D2,Mid+Sixteenth
E1B5 1FFF0000         (       monkey.asm):02339                     .dw     Voice1+XX,Off+None
E1B9 3FFF0000         (       monkey.asm):02340                     .dw     Voice3+XX,Off+None
E1BD 5FFF0000         (       monkey.asm):02341                     .dw     Voice5+XX,Off+None
E1C1 6FFF0000         (       monkey.asm):02342                     .dw     Voice6+XX,Off+None
E1C5 7FFF0000         (       monkey.asm):02343                     .dw     Voice7+XX,Off+None
E1C9 8FFF0002         (       monkey.asm):02344                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02345                 
                      (       monkey.asm):02346                     ; 44:8  Voice    Note   Vol   Dur
E1CD 10AA0700         (       monkey.asm):02347                     .dw     Voice1+E5,Mid+None
E1D1 31530700         (       monkey.asm):02348                     .dw     Voice3+E4,Mid+None
E1D5 86AE0708         (       monkey.asm):02349                     .dw     Voice8+C2,Mid+Sixteenth
E1D9 8FFF0008         (       monkey.asm):02350                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):02351                 
                      (       monkey.asm):02352                     ; 44:9  Voice    Note   Vol   Dur
E1DD 523B0700         (       monkey.asm):02353                     .dw     Voice5+G3,Mid+None
E1E1 62A70700         (       monkey.asm):02354                     .dw     Voice6+E3,Mid+None
E1E5 73570700         (       monkey.asm):02355                     .dw     Voice7+C3,Mid+None
E1E9 86AE0708         (       monkey.asm):02356                     .dw     Voice8+C2,Mid+Sixteenth
E1ED 5FFF0000         (       monkey.asm):02357                     .dw     Voice5+XX,Off+None
E1F1 6FFF0000         (       monkey.asm):02358                     .dw     Voice6+XX,Off+None
E1F5 7FFF0000         (       monkey.asm):02359                     .dw     Voice7+XX,Off+None
E1F9 8FFF0002         (       monkey.asm):02360                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02361                 
                      (       monkey.asm):02362                     ; 44:10 Voice    Note   Vol   Dur
E1FD 523B0700         (       monkey.asm):02363                     .dw     Voice5+G3,Mid+None
E201 62A70700         (       monkey.asm):02364                     .dw     Voice6+E3,Mid+None
E205 73570700         (       monkey.asm):02365                     .dw     Voice7+C3,Mid+None
E209 86AE0708         (       monkey.asm):02366                     .dw     Voice8+C2,Mid+Sixteenth
E20D 5FFF0000         (       monkey.asm):02367                     .dw     Voice5+XX,Off+None
E211 6FFF0000         (       monkey.asm):02368                     .dw     Voice6+XX,Off+None
E215 7FFF0000         (       monkey.asm):02369                     .dw     Voice7+XX,Off+None
E219 8FFF0010         (       monkey.asm):02370                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):02371                 
                      (       monkey.asm):02372                     ; 44:11 Voice    Note   Vol   Dur
E21D 1FFF0000         (       monkey.asm):02373                     .dw     Voice1+XX,Off+None
E221 3FFF0002         (       monkey.asm):02374                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02375                 
                      (       monkey.asm):02376                     ; 44:12 Voice    Note   Vol   Dur
E225 523B0700         (       monkey.asm):02377                     .dw     Voice5+G3,Mid+None
E229 62A70700         (       monkey.asm):02378                     .dw     Voice6+E3,Mid+None
E22D 73570708         (       monkey.asm):02379                     .dw     Voice7+C3,Mid+Sixteenth
E231 5FFF0000         (       monkey.asm):02380                     .dw     Voice5+XX,Off+None
E235 6FFF0000         (       monkey.asm):02381                     .dw     Voice6+XX,Off+None
E239 7FFF0002         (       monkey.asm):02382                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02383                 
                      (       monkey.asm):02384                     ; 44:13 Voice    Note   Vol   Dur
E23D 10970700         (       monkey.asm):02385                     .dw     Voice1+Fs5,Mid+None
E241 312E0700         (       monkey.asm):02386                     .dw     Voice3+Fs4,Mid+None
E245 523B0700         (       monkey.asm):02387                     .dw     Voice5+G3,Mid+None
E249 62A70700         (       monkey.asm):02388                     .dw     Voice6+E3,Mid+None
E24D 73570708         (       monkey.asm):02389                     .dw     Voice7+C3,Mid+Sixteenth
E251 1FFF0000         (       monkey.asm):02390                     .dw     Voice1+XX,Off+None
E255 3FFF0000         (       monkey.asm):02391                     .dw     Voice3+XX,Off+None
E259 5FFF0000         (       monkey.asm):02392                     .dw     Voice5+XX,Off+None
E25D 6FFF0000         (       monkey.asm):02393                     .dw     Voice6+XX,Off+None
E261 7FFF0002         (       monkey.asm):02394                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02395                 
                      (       monkey.asm):02396                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02397                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02398                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02399                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02400                 
                      (       monkey.asm):02401                     ; 45:1  Voice    Note   Vol   Dur
E265 108F0700         (       monkey.asm):02402                     .dw     Voice1+G5,Mid+None
E269 311D0700         (       monkey.asm):02403                     .dw     Voice3+G4,Mid+None
E26D 88EB0708         (       monkey.asm):02404                     .dw     Voice8+G1,Mid+Sixteenth
E271 8FFF0002         (       monkey.asm):02405                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02406                 
                      (       monkey.asm):02407                     ; 45:2  Voice    Note   Vol   Dur
E275 88EB0708         (       monkey.asm):02408                     .dw     Voice8+G1,Mid+Sixteenth
E279 1FFF0000         (       monkey.asm):02409                     .dw     Voice1+XX,Off+None
E27D 3FFF0000         (       monkey.asm):02410                     .dw     Voice3+XX,Off+None
E281 8FFF0002         (       monkey.asm):02411                     .dw     Voice8+XX,Off+Pause 
                      (       monkey.asm):02412                 
                      (       monkey.asm):02413                     ; 45:3  Voice    Note   Vol   Dur
E285 108F0700         (       monkey.asm):02414                     .dw     Voice1+G5,Mid+None
E289 311D0700         (       monkey.asm):02415                     .dw     Voice3+G4,Mid+None
E28D 523B0700         (       monkey.asm):02416                     .dw     Voice5+G3,Mid+None
E291 62FA0700         (       monkey.asm):02417                     .dw     Voice6+D3,Mid+None
E295 738A0708         (       monkey.asm):02418                     .dw     Voice7+B2,Mid+Sixteenth
E299 5FFF0000         (       monkey.asm):02419                     .dw     Voice5+XX,Off+None
E29D 6FFF0000         (       monkey.asm):02420                     .dw     Voice6+XX,Off+None
E2A1 7FFF0002         (       monkey.asm):02421                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02422                 
                      (       monkey.asm):02423                     ; 45:4  Voice    Note   Vol   Dur
E2A5 523B0700         (       monkey.asm):02424                     .dw     Voice5+G3,Mid+None
E2A9 62FA0700         (       monkey.asm):02425                     .dw     Voice6+D3,Mid+None
E2AD 738A0700         (       monkey.asm):02426                     .dw     Voice7+B2,Mid+None
E2B1 88EB0708         (       monkey.asm):02427                     .dw     Voice8+G1,Mid+Sixteenth
E2B5 1FFF0000         (       monkey.asm):02428                     .dw     Voice1+XX,Off+None
E2B9 3FFF0000         (       monkey.asm):02429                     .dw     Voice3+XX,Off+None
E2BD 5FFF0000         (       monkey.asm):02430                     .dw     Voice5+XX,Off+None
E2C1 6FFF0000         (       monkey.asm):02431                     .dw     Voice6+XX,Off+None
E2C5 7FFF0000         (       monkey.asm):02432                     .dw     Voice7+XX,Off+None
E2C9 8FFF0002         (       monkey.asm):02433                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02434                 
                      (       monkey.asm):02435                     ; 45:5  Voice    Note   Vol   Dur
E2CD 107F0700         (       monkey.asm):02436                     .dw     Voice1+A5,Mid+None
E2D1 30FE0700         (       monkey.asm):02437                     .dw     Voice3+A4,Mid+None
E2D5 87F20708         (       monkey.asm):02438                     .dw     Voice8+A1,Mid+Sixteenth
E2D9 8FFF0008         (       monkey.asm):02439                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):02440                 
                      (       monkey.asm):02441                     ; 45:6  Voice    Note   Vol   Dur
E2DD 51FC0700         (       monkey.asm):02442                     .dw     Voice5+A3,Mid+None
E2E1 62A70700         (       monkey.asm):02443                     .dw     Voice6+E3,Mid+None
E2E5 73570700         (       monkey.asm):02444                     .dw     Voice7+C3,Mid+None
E2E9 87F20708         (       monkey.asm):02445                     .dw     Voice8+A1,Mid+Sixteenth
E2ED 5FFF0000         (       monkey.asm):02446                     .dw     Voice5+XX,Off+None
E2F1 6FFF0000         (       monkey.asm):02447                     .dw     Voice6+XX,Off+None
E2F5 7FFF0000         (       monkey.asm):02448                     .dw     Voice7+XX,Off+None
E2F9 8FFF0002         (       monkey.asm):02449                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02450                 
                      (       monkey.asm):02451                     ; 45:7  Voice    Note   Vol   Dur
E2FD 51FC0700         (       monkey.asm):02452                     .dw     Voice5+A3,Mid+None
E301 62A70700         (       monkey.asm):02453                     .dw     Voice6+E3,Mid+None
E305 73570700         (       monkey.asm):02454                     .dw     Voice7+C3,Mid+None
E309 87F20708         (       monkey.asm):02455                     .dw     Voice8+A1,Mid+Sixteenth
E30D 1FFF0000         (       monkey.asm):02456                     .dw     Voice1+XX,Off+None
E311 3FFF0000         (       monkey.asm):02457                     .dw     Voice3+XX,Off+None
E315 5FFF0000         (       monkey.asm):02458                     .dw     Voice5+XX,Off+None
E319 6FFF0000         (       monkey.asm):02459                     .dw     Voice6+XX,Off+None
E31D 7FFF0000         (       monkey.asm):02460                     .dw     Voice7+XX,Off+None
E321 8FFF0002         (       monkey.asm):02461                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02462                 
                      (       monkey.asm):02463                     ; 45:8  Voice    Note   Vol   Dur
E325 10970700         (       monkey.asm):02464                     .dw     Voice1+Fs5,Mid+None
E329 312E0700         (       monkey.asm):02465                     .dw     Voice3+Fs4,Mid+None
E32D 8BE70708         (       monkey.asm):02466                     .dw     Voice8+D1,Mid+Sixteenth
E331 8FFF0002         (       monkey.asm):02467                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02468                 
                      (       monkey.asm):02469                     ; 45:9  Voice    Note   Vol   Dur
E335 8BE70708         (       monkey.asm):02470                     .dw     Voice8+D1,Mid+Sixteenth
E339 8FFF0002         (       monkey.asm):02471                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02472                 
                      (       monkey.asm):02473                     ; 45:10 Voice    Note   Vol   Dur
E33D 51FC0700         (       monkey.asm):02474                     .dw     Voice5+A3,Mid+None
E341 625D0700         (       monkey.asm):02475                     .dw     Voice6+Fs3,Mid+None
E345 72FA0708         (       monkey.asm):02476                     .dw     Voice7+D3,Mid+Sixteenth
E349 1FFF0000         (       monkey.asm):02477                     .dw     Voice1+XX,Off+None
E34D 3FFF0000         (       monkey.asm):02478                     .dw     Voice3+XX,Off+None
E351 5FFF0000         (       monkey.asm):02479                     .dw     Voice5+XX,Off+None
E355 6FFF0000         (       monkey.asm):02480                     .dw     Voice6+XX,Off+None
E359 7FFF0002         (       monkey.asm):02481                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02482                 
                      (       monkey.asm):02483                     ; 45:11 Voice    Note   Vol   Dur
E35D 108F0700         (       monkey.asm):02484                     .dw     Voice1+G5,Mid+None
E361 311D0700         (       monkey.asm):02485                     .dw     Voice3+G4,Mid+None
E365 51FC0700         (       monkey.asm):02486                     .dw     Voice5+A3,Mid+None
E369 625D0700         (       monkey.asm):02487                     .dw     Voice6+Fs3,Mid+None
E36D 72FA0708         (       monkey.asm):02488                     .dw     Voice7+D3,Mid+Sixteenth
E371 1FFF0000         (       monkey.asm):02489                     .dw     Voice1+XX,Off+None
E375 3FFF0000         (       monkey.asm):02490                     .dw     Voice3+XX,Off+None
E379 5FFF0000         (       monkey.asm):02491                     .dw     Voice5+XX,Off+None
E37D 6FFF0000         (       monkey.asm):02492                     .dw     Voice6+XX,Off+None
E381 7FFF0002         (       monkey.asm):02493                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02494                 
                      (       monkey.asm):02495                     ; 45:12 Voice    Note   Vol   Dur
E385 10970700         (       monkey.asm):02496                     .dw     Voice1+Fs5,Mid+None
E389 312E0708         (       monkey.asm):02497                     .dw     Voice3+Fs4,Mid+Sixteenth
E38D 1FFF0000         (       monkey.asm):02498                     .dw     Voice1+XX,Off+None
E391 3FFF0002         (       monkey.asm):02499                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02500                 
                      (       monkey.asm):02501                     ; 45:13 Voice    Note   Vol   Dur
E395 10AA0700         (       monkey.asm):02502                     .dw     Voice1+E5,Mid+None
E399 31530708         (       monkey.asm):02503                     .dw     Voice3+E4,Mid+Sixteenth
E39D 1FFF0000         (       monkey.asm):02504                     .dw     Voice1+XX,Off+None
E3A1 3FFF0002         (       monkey.asm):02505                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02506                 
                      (       monkey.asm):02507                     ; 45:14 Voice    Note   Vol   Dur
E3A5 10BE0700         (       monkey.asm):02508                     .dw     Voice1+D5,Mid+None
E3A9 317D0700         (       monkey.asm):02509                     .dw     Voice3+D4,Mid+None
E3AD 51FC0700         (       monkey.asm):02510                     .dw     Voice5+A3,Mid+None
E3B1 625D0700         (       monkey.asm):02511                     .dw     Voice6+Fs3,Mid+None
E3B5 72FA0708         (       monkey.asm):02512                     .dw     Voice7+D3,Mid+Sixteenth
E3B9 1FFF0000         (       monkey.asm):02513                     .dw     Voice1+XX,Off+None
E3BD 3FFF0000         (       monkey.asm):02514                     .dw     Voice3+XX,Off+None
E3C1 5FFF0000         (       monkey.asm):02515                     .dw     Voice5+XX,Off+None
E3C5 6FFF0000         (       monkey.asm):02516                     .dw     Voice6+XX,Off+None
E3C9 7FFF0002         (       monkey.asm):02517                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02518                 
                      (       monkey.asm):02519                     ; 45:15 Voice    Note   Vol   Dur
E3CD 10970700         (       monkey.asm):02520                     .dw     Voice1+Fs5,Mid+None
E3D1 312E0700         (       monkey.asm):02521                     .dw     Voice3+Fs4,Mid+None
E3D5 51FC0700         (       monkey.asm):02522                     .dw     Voice5+A3,Mid+None
E3D9 625D0700         (       monkey.asm):02523                     .dw     Voice6+Fs3,Mid+None
E3DD 72FA0708         (       monkey.asm):02524                     .dw     Voice7+D3,Mid+Sixteenth
E3E1 1FFF0000         (       monkey.asm):02525                     .dw     Voice1+XX,Off+None
E3E5 3FFF0000         (       monkey.asm):02526                     .dw     Voice3+XX,Off+None
E3E9 5FFF0000         (       monkey.asm):02527                     .dw     Voice5+XX,Off+None
E3ED 6FFF0000         (       monkey.asm):02528                     .dw     Voice6+XX,Off+None
E3F1 7FFF0002         (       monkey.asm):02529                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02530                 
                      (       monkey.asm):02531                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02532                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02533                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02534                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02535                 
                      (       monkey.asm):02536                     ; 46:1  Voice    Note   Vol   Dur
E3F5 108F0700         (       monkey.asm):02537                     .dw     Voice1+G5,Mid+None
E3F9 311D0700         (       monkey.asm):02538                     .dw     Voice3+G4,Mid+None
E3FD 88EB0708         (       monkey.asm):02539                     .dw     Voice8+G1,Mid+Sixteenth
E401 8FFF0002         (       monkey.asm):02540                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02541                 
                      (       monkey.asm):02542                     ; 46:2  Voice    Note   Vol   Dur
E405 88EB0708         (       monkey.asm):02543                     .dw     Voice8+G1,Mid+Sixteenth
E409 8FFF0002         (       monkey.asm):02544                     .dw     Voice8+XX,Off+Pause
E40D 1FFF0000         (       monkey.asm):02545                     .dw     Voice1+XX,Off+None
E411 3FFF0000         (       monkey.asm):02546                     .dw     Voice3+XX,Off+None
E415 8FFF0002         (       monkey.asm):02547                     .dw     Voice8+XX,Off+Pause 
                      (       monkey.asm):02548                 
                      (       monkey.asm):02549                     ; 46:3  Voice    Note   Vol   Dur
E419 108F0700         (       monkey.asm):02550                     .dw     Voice1+G5,Mid+None
E41D 311D0700         (       monkey.asm):02551                     .dw     Voice3+G4,Mid+None
E421 523B0700         (       monkey.asm):02552                     .dw     Voice5+G3,Mid+None
E425 62FA0700         (       monkey.asm):02553                     .dw     Voice6+D3,Mid+None
E429 738A0708         (       monkey.asm):02554                     .dw     Voice7+B2,Mid+Sixteenth
E42D 5FFF0000         (       monkey.asm):02555                     .dw     Voice5+XX,Off+None
E431 6FFF0000         (       monkey.asm):02556                     .dw     Voice6+XX,Off+None
E435 7FFF0002         (       monkey.asm):02557                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02558                 
                      (       monkey.asm):02559                     ; 46:4  Voice    Note   Vol   Dur
E439 523B0700         (       monkey.asm):02560                     .dw     Voice5+G3,Mid+None
E43D 62FA0700         (       monkey.asm):02561                     .dw     Voice6+D3,Mid+None
E441 738A0700         (       monkey.asm):02562                     .dw     Voice7+B2,Mid+None
E445 88EB0708         (       monkey.asm):02563                     .dw     Voice8+G1,Mid+Sixteenth
E449 1FFF0000         (       monkey.asm):02564                     .dw     Voice1+XX,Off+None
E44D 3FFF0000         (       monkey.asm):02565                     .dw     Voice3+XX,Off+None
E451 5FFF0000         (       monkey.asm):02566                     .dw     Voice5+XX,Off+None
E455 6FFF0000         (       monkey.asm):02567                     .dw     Voice6+XX,Off+None
E459 7FFF0000         (       monkey.asm):02568                     .dw     Voice7+XX,Off+None
E45D 8FFF0002         (       monkey.asm):02569                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02570                 
                      (       monkey.asm):02571                     ; 46:5  Voice    Note   Vol   Dur
E461 10970700         (       monkey.asm):02572                     .dw     Voice1+Fs5,Mid+None
E465 312E0700         (       monkey.asm):02573                     .dw     Voice3+Fs4,Mid+None
E469 87140708         (       monkey.asm):02574                     .dw     Voice8+B1,Mid+Sixteenth
E46D 8FFF0008         (       monkey.asm):02575                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):02576                 
                      (       monkey.asm):02577                     ; 46:6  Voice    Note   Vol   Dur
E471 525D0700         (       monkey.asm):02578                     .dw     Voice5+Fs3,Mid+None
E475 62CF0700         (       monkey.asm):02579                     .dw     Voice6+Ds3,Mid+None
E479 738A0700         (       monkey.asm):02580                     .dw     Voice7+B2,Mid+None
E47D 87140708         (       monkey.asm):02581                     .dw     Voice8+B1,Mid+Sixteenth
E481 5FFF0000         (       monkey.asm):02582                     .dw     Voice5+XX,Off+None
E485 6FFF0000         (       monkey.asm):02583                     .dw     Voice6+XX,Off+None
E489 7FFF0000         (       monkey.asm):02584                     .dw     Voice7+XX,Off+None
E48D 8FFF0002         (       monkey.asm):02585                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02586                 
                      (       monkey.asm):02587                     ; 46:7  Voice    Note   Vol   Dur
E491 525D0700         (       monkey.asm):02588                     .dw     Voice5+Fs3,Mid+None
E495 62CF0700         (       monkey.asm):02589                     .dw     Voice6+Ds3,Mid+None
E499 738A0700         (       monkey.asm):02590                     .dw     Voice7+B2,Mid+None
E49D 87140708         (       monkey.asm):02591                     .dw     Voice8+B1,Mid+Sixteenth
E4A1 1FFF0000         (       monkey.asm):02592                     .dw     Voice1+XX,Off+None
E4A5 3FFF0000         (       monkey.asm):02593                     .dw     Voice3+XX,Off+None
E4A9 5FFF0000         (       monkey.asm):02594                     .dw     Voice5+XX,Off+None
E4AD 6FFF0000         (       monkey.asm):02595                     .dw     Voice6+XX,Off+None
E4B1 7FFF0000         (       monkey.asm):02596                     .dw     Voice7+XX,Off+None
E4B5 8FFF0002         (       monkey.asm):02597                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02598                 
                      (       monkey.asm):02599                     ; 46:8  Voice    Note   Vol   Dur
E4B9 10AA0700         (       monkey.asm):02600                     .dw     Voice1+E5,Mid+None
E4BD 31530700         (       monkey.asm):02601                     .dw     Voice3+E4,Mid+None
E4C1 854D0708         (       monkey.asm):02602                     .dw     Voice8+E2,Mid+Sixteenth
E4C5 8FFF0002         (       monkey.asm):02603                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02604                 
                      (       monkey.asm):02605                     ; 46:9  Voice    Note   Vol   Dur
E4C9 854D0708         (       monkey.asm):02606                     .dw     Voice8+E2,Mid+Sixteenth
E4CD 8FFF0002         (       monkey.asm):02607                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02608                 
                      (       monkey.asm):02609                     ; 46:10 Voice    Note   Vol   Dur
E4D1 523B0700         (       monkey.asm):02610                     .dw     Voice5+G3,Mid+None
E4D5 62A70700         (       monkey.asm):02611                     .dw     Voice6+E3,Mid+None
E4D9 738A0708         (       monkey.asm):02612                     .dw     Voice7+B2,Mid+Sixteenth
E4DD 1FFF0000         (       monkey.asm):02613                     .dw     Voice1+XX,Off+None
E4E1 3FFF0000         (       monkey.asm):02614                     .dw     Voice3+XX,Off+None
E4E5 5FFF0000         (       monkey.asm):02615                     .dw     Voice5+XX,Off+None
E4E9 6FFF0000         (       monkey.asm):02616                     .dw     Voice6+XX,Off+None
E4ED 7FFF0002         (       monkey.asm):02617                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02618                 
                      (       monkey.asm):02619                     ; 46:11 Voice    Note   Vol   Dur
E4F1 108F0700         (       monkey.asm):02620                     .dw     Voice1+G5,Mid+None
E4F5 311D0700         (       monkey.asm):02621                     .dw     Voice3+G4,Mid+None
E4F9 523B0700         (       monkey.asm):02622                     .dw     Voice5+G3,Mid+None
E4FD 62A70700         (       monkey.asm):02623                     .dw     Voice6+E3,Mid+None
E501 738A0708         (       monkey.asm):02624                     .dw     Voice7+B2,Mid+Sixteenth
E505 1FFF0000         (       monkey.asm):02625                     .dw     Voice1+XX,Off+None
E509 3FFF0000         (       monkey.asm):02626                     .dw     Voice3+XX,Off+None
E50D 5FFF0000         (       monkey.asm):02627                     .dw     Voice5+XX,Off+None
E511 6FFF0000         (       monkey.asm):02628                     .dw     Voice6+XX,Off+None
E515 7FFF0002         (       monkey.asm):02629                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02630                 
                      (       monkey.asm):02631                     ; 46:12 Voice    Note   Vol   Dur
E519 10970700         (       monkey.asm):02632                     .dw     Voice1+Fs5,Mid+None
E51D 312E0708         (       monkey.asm):02633                     .dw     Voice3+Fs4,Mid+Sixteenth
E521 1FFF0000         (       monkey.asm):02634                     .dw     Voice1+XX,Off+None
E525 3FFF0002         (       monkey.asm):02635                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02636                 
                      (       monkey.asm):02637                     ; 46:13 Voice    Note   Vol   Dur
E529 10AA0700         (       monkey.asm):02638                     .dw     Voice1+E5,Mid+None
E52D 31530708         (       monkey.asm):02639                     .dw     Voice3+E4,Mid+Sixteenth
E531 1FFF0000         (       monkey.asm):02640                     .dw     Voice1+XX,Off+None
E535 3FFF0002         (       monkey.asm):02641                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02642                 
                      (       monkey.asm):02643                     ; 46:14 Voice    Note   Vol   Dur
E539 10BE0700         (       monkey.asm):02644                     .dw     Voice1+D5,Mid+None
E53D 317D0700         (       monkey.asm):02645                     .dw     Voice3+D4,Mid+None
E541 51FC0700         (       monkey.asm):02646                     .dw     Voice5+A3,Mid+None
E545 625D0700         (       monkey.asm):02647                     .dw     Voice6+Fs3,Mid+None
E549 72FA0708         (       monkey.asm):02648                     .dw     Voice7+D3,Mid+Sixteenth
E54D 1FFF0000         (       monkey.asm):02649                     .dw     Voice1+XX,Off+None
E551 3FFF0000         (       monkey.asm):02650                     .dw     Voice3+XX,Off+None
E555 5FFF0000         (       monkey.asm):02651                     .dw     Voice5+XX,Off+None
E559 6FFF0000         (       monkey.asm):02652                     .dw     Voice6+XX,Off+None
E55D 7FFF0002         (       monkey.asm):02653                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02654                 
                      (       monkey.asm):02655                     ; 46:15 Voice    Note   Vol   Dur
E561 10970700         (       monkey.asm):02656                     .dw     Voice1+Fs5,Mid+None
E565 312E0700         (       monkey.asm):02657                     .dw     Voice3+Fs4,Mid+None
E569 51FC0700         (       monkey.asm):02658                     .dw     Voice5+A3,Mid+None
E56D 625D0700         (       monkey.asm):02659                     .dw     Voice6+Fs3,Mid+None
E571 72FA0708         (       monkey.asm):02660                     .dw     Voice7+D3,Mid+Sixteenth
E575 1FFF0000         (       monkey.asm):02661                     .dw     Voice1+XX,Off+None
E579 3FFF0000         (       monkey.asm):02662                     .dw     Voice3+XX,Off+None
E57D 5FFF0000         (       monkey.asm):02663                     .dw     Voice5+XX,Off+None
E581 6FFF0000         (       monkey.asm):02664                     .dw     Voice6+XX,Off+None
E585 7FFF0002         (       monkey.asm):02665                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02666                 
                      (       monkey.asm):02667                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02668                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02669                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02670                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02671                 
                      (       monkey.asm):02672                     ; 47:1  Voice    Note   Vol   Dur
E589 108F0700         (       monkey.asm):02673                     .dw     Voice1+G5,Mid+None
E58D 311D0700         (       monkey.asm):02674                     .dw     Voice3+G4,Mid+None
E591 88EB0708         (       monkey.asm):02675                     .dw     Voice8+G1,Mid+Sixteenth
E595 8FFF0002         (       monkey.asm):02676                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02677                 
                      (       monkey.asm):02678                     ; 47:2  Voice    Note   Vol   Dur
E599 88EB0708         (       monkey.asm):02679                     .dw     Voice8+G1,Mid+Sixteenth
E59D 1FFF0000         (       monkey.asm):02680                     .dw     Voice1+XX,Off+None
E5A1 3FFF0000         (       monkey.asm):02681                     .dw     Voice3+XX,Off+None
E5A5 8FFF0002         (       monkey.asm):02682                     .dw     Voice8+XX,Off+Pause 
                      (       monkey.asm):02683                 
                      (       monkey.asm):02684                     ; 47:3  Voice    Note   Vol   Dur
E5A9 108F0700         (       monkey.asm):02685                     .dw     Voice1+G5,Mid+None
E5AD 311D0700         (       monkey.asm):02686                     .dw     Voice3+G4,Mid+None
E5B1 523B0700         (       monkey.asm):02687                     .dw     Voice5+G3,Mid+None
E5B5 62FA0700         (       monkey.asm):02688                     .dw     Voice6+D3,Mid+None
E5B9 738A0708         (       monkey.asm):02689                     .dw     Voice7+B2,Mid+Sixteenth
E5BD 5FFF0000         (       monkey.asm):02690                     .dw     Voice5+XX,Off+None
E5C1 6FFF0000         (       monkey.asm):02691                     .dw     Voice6+XX,Off+None
E5C5 7FFF0002         (       monkey.asm):02692                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02693                 
                      (       monkey.asm):02694                     ; 47:4  Voice    Note   Vol   Dur
E5C9 523B0700         (       monkey.asm):02695                     .dw     Voice5+G3,Mid+None
E5CD 62FA0700         (       monkey.asm):02696                     .dw     Voice6+D3,Mid+None
E5D1 738A0700         (       monkey.asm):02697                     .dw     Voice7+B2,Mid+None
E5D5 84750708         (       monkey.asm):02698                     .dw     Voice8+G2,Mid+Sixteenth
E5D9 1FFF0000         (       monkey.asm):02699                     .dw     Voice1+XX,Off+None
E5DD 3FFF0000         (       monkey.asm):02700                     .dw     Voice3+XX,Off+None
E5E1 5FFF0000         (       monkey.asm):02701                     .dw     Voice5+XX,Off+None
E5E5 6FFF0000         (       monkey.asm):02702                     .dw     Voice6+XX,Off+None
E5E9 7FFF0000         (       monkey.asm):02703                     .dw     Voice7+XX,Off+None
E5ED 8FFF0002         (       monkey.asm):02704                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02705                 
                      (       monkey.asm):02706                     ; 47:5  Voice    Note   Vol   Dur
E5F1 10970700         (       monkey.asm):02707                     .dw     Voice1+Fs5,Mid+None
E5F5 312E0700         (       monkey.asm):02708                     .dw     Voice3+Fs4,Mid+None
E5F9 87140708         (       monkey.asm):02709                     .dw     Voice8+B1,Mid+Sixteenth
E5FD 8FFF0008         (       monkey.asm):02710                     .dw     Voice8+XX,Off+Sixteenth
                      (       monkey.asm):02711                 
                      (       monkey.asm):02712                     ; 47:6  Voice    Note   Vol   Dur
E601 525D0700         (       monkey.asm):02713                     .dw     Voice5+Fs3,Mid+None
E605 62CF0700         (       monkey.asm):02714                     .dw     Voice6+Ds3,Mid+None
E609 738A0700         (       monkey.asm):02715                     .dw     Voice7+B2,Mid+None
E60D 87140708         (       monkey.asm):02716                     .dw     Voice8+B1,Mid+Sixteenth
E611 5FFF0000         (       monkey.asm):02717                     .dw     Voice5+XX,Off+None
E615 6FFF0000         (       monkey.asm):02718                     .dw     Voice6+XX,Off+None
E619 7FFF0000         (       monkey.asm):02719                     .dw     Voice7+XX,Off+None
E61D 8FFF0002         (       monkey.asm):02720                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02721                 
                      (       monkey.asm):02722                     ; 47:7  Voice    Note   Vol   Dur
E621 525D0700         (       monkey.asm):02723                     .dw     Voice5+Fs3,Mid+None
E625 62CF0700         (       monkey.asm):02724                     .dw     Voice6+Ds3,Mid+None
E629 738A0700         (       monkey.asm):02725                     .dw     Voice7+B2,Mid+None
E62D 87140708         (       monkey.asm):02726                     .dw     Voice8+B1,Mid+Sixteenth
E631 1FFF0000         (       monkey.asm):02727                     .dw     Voice1+XX,Off+None
E635 3FFF0000         (       monkey.asm):02728                     .dw     Voice3+XX,Off+None
E639 5FFF0000         (       monkey.asm):02729                     .dw     Voice5+XX,Off+None
E63D 6FFF0000         (       monkey.asm):02730                     .dw     Voice6+XX,Off+None
E641 7FFF0000         (       monkey.asm):02731                     .dw     Voice7+XX,Off+None
E645 8FFF0002         (       monkey.asm):02732                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02733                 
                      (       monkey.asm):02734                     ; 47:8  Voice    Note   Vol   Dur
E649 10AA0700         (       monkey.asm):02735                     .dw     Voice1+E5,Mid+None
E64D 31530700         (       monkey.asm):02736                     .dw     Voice3+E4,Mid+None
E651 854D0708         (       monkey.asm):02737                     .dw     Voice8+E2,Mid+Sixteenth
E655 8FFF0002         (       monkey.asm):02738                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02739                 
                      (       monkey.asm):02740                     ; 47:9  Voice    Note   Vol   Dur
E659 854D0708         (       monkey.asm):02741                     .dw     Voice8+E2,Mid+Sixteenth
E65D 8FFF0002         (       monkey.asm):02742                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02743                 
                      (       monkey.asm):02744                     ; 47:10 Voice    Note   Vol   Dur
E661 523B0700         (       monkey.asm):02745                     .dw     Voice5+G3,Mid+None
E665 62A70700         (       monkey.asm):02746                     .dw     Voice6+E3,Mid+None
E669 738A0708         (       monkey.asm):02747                     .dw     Voice7+B2,Mid+Sixteenth
E66D 1FFF0000         (       monkey.asm):02748                     .dw     Voice1+XX,Off+None
E671 3FFF0000         (       monkey.asm):02749                     .dw     Voice3+XX,Off+None
E675 5FFF0000         (       monkey.asm):02750                     .dw     Voice5+XX,Off+None
E679 6FFF0000         (       monkey.asm):02751                     .dw     Voice6+XX,Off+None
E67D 7FFF0002         (       monkey.asm):02752                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02753                 
                      (       monkey.asm):02754                     ; 47:11 Voice    Note   Vol   Dur
E681 108F0700         (       monkey.asm):02755                     .dw     Voice1+G5,Mid+None
E685 311D0700         (       monkey.asm):02756                     .dw     Voice3+G4,Mid+None
E689 523B0700         (       monkey.asm):02757                     .dw     Voice5+G3,Mid+None
E68D 62A70700         (       monkey.asm):02758                     .dw     Voice6+E3,Mid+None
E691 738A0708         (       monkey.asm):02759                     .dw     Voice7+B2,Mid+Sixteenth
E695 1FFF0000         (       monkey.asm):02760                     .dw     Voice1+XX,Off+None
E699 3FFF0000         (       monkey.asm):02761                     .dw     Voice3+XX,Off+None
E69D 5FFF0000         (       monkey.asm):02762                     .dw     Voice5+XX,Off+None
E6A1 6FFF0000         (       monkey.asm):02763                     .dw     Voice6+XX,Off+None
E6A5 7FFF0002         (       monkey.asm):02764                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02765                 
                      (       monkey.asm):02766                     ; 47:12 Voice    Note   Vol   Dur
E6A9 10970700         (       monkey.asm):02767                     .dw     Voice1+Fs5,Mid+None
E6AD 312E0708         (       monkey.asm):02768                     .dw     Voice3+Fs4,Mid+Sixteenth
E6B1 1FFF0000         (       monkey.asm):02769                     .dw     Voice1+XX,Off+None
E6B5 3FFF0002         (       monkey.asm):02770                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02771                 
                      (       monkey.asm):02772                     ; 47:13 Voice    Note   Vol   Dur
E6B9 10AA0700         (       monkey.asm):02773                     .dw     Voice1+E5,Mid+None
E6BD 31530708         (       monkey.asm):02774                     .dw     Voice3+E4,Mid+Sixteenth
E6C1 1FFF0000         (       monkey.asm):02775                     .dw     Voice1+XX,Off+None
E6C5 3FFF0002         (       monkey.asm):02776                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02777                 
                      (       monkey.asm):02778                     ; 47:14 Voice    Note   Vol   Dur
E6C9 10BE0700         (       monkey.asm):02779                     .dw     Voice1+D5,Mid+None
E6CD 317D0700         (       monkey.asm):02780                     .dw     Voice3+D4,Mid+None
E6D1 51FC0700         (       monkey.asm):02781                     .dw     Voice5+A3,Mid+None
E6D5 625D0700         (       monkey.asm):02782                     .dw     Voice6+Fs3,Mid+None
E6D9 72FA0708         (       monkey.asm):02783                     .dw     Voice7+D3,Mid+Sixteenth
                      (       monkey.asm):02784                 
E6DD 5FFF0000         (       monkey.asm):02785                     .dw     Voice5+XX,Off+None
E6E1 6FFF0000         (       monkey.asm):02786                     .dw     Voice6+XX,Off+None
E6E5 7FFF0002         (       monkey.asm):02787                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02788                 
                      (       monkey.asm):02789                     ; 47:15 Voice    Note   Vol   Dur
E6E9 51FC0700         (       monkey.asm):02790                     .dw     Voice5+A3,Mid+None
E6ED 625D0700         (       monkey.asm):02791                     .dw     Voice6+Fs3,Mid+None
E6F1 72FA0708         (       monkey.asm):02792                     .dw     Voice7+D3,Mid+Sixteenth
E6F5 1FFF0000         (       monkey.asm):02793                     .dw     Voice1+XX,Off+None
E6F9 3FFF0000         (       monkey.asm):02794                     .dw     Voice3+XX,Off+None
E6FD 5FFF0000         (       monkey.asm):02795                     .dw     Voice5+XX,Off+None
E701 6FFF0000         (       monkey.asm):02796                     .dw     Voice6+XX,Off+None
E705 7FFF0002         (       monkey.asm):02797                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02798                 
                      (       monkey.asm):02799                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02800                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02801                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02802                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02803                 
                      (       monkey.asm):02804                     ; 48:1  Voice    Note   Vol   Dur
E709 10AA0700         (       monkey.asm):02805                     .dw     Voice1+E5,Mid+None
E70D 31530700         (       monkey.asm):02806                     .dw     Voice3+E4,Mid+None
E711 86AE0708         (       monkey.asm):02807                     .dw     Voice8+C2,Mid+Sixteenth
E715 8FFF0002         (       monkey.asm):02808                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02809                 
                      (       monkey.asm):02810                     ; 48:2  Voice    Note   Vol   Dur
E719 86AE0708         (       monkey.asm):02811                     .dw     Voice8+C2,Mid+Sixteenth
E71D 1FFF0000         (       monkey.asm):02812                     .dw     Voice1+XX,Off+None
E721 3FFF0000         (       monkey.asm):02813                     .dw     Voice3+XX,Off+None
E725 8FFF0002         (       monkey.asm):02814                     .dw     Voice8+XX,Off+Pause 
                      (       monkey.asm):02815                 
                      (       monkey.asm):02816                     ; 48:3  Voice    Note   Vol   Dur
E729 10AA0700         (       monkey.asm):02817                     .dw     Voice1+E5,Mid+None
E72D 31530700         (       monkey.asm):02818                     .dw     Voice3+E4,Mid+None
E731 523B0700         (       monkey.asm):02819                     .dw     Voice5+G3,Mid+None
E735 62A70700         (       monkey.asm):02820                     .dw     Voice6+E3,Mid+None
E739 73570708         (       monkey.asm):02821                     .dw     Voice7+C3,Mid+Sixteenth
E73D 5FFF0000         (       monkey.asm):02822                     .dw     Voice5+XX,Off+None
E741 6FFF0000         (       monkey.asm):02823                     .dw     Voice6+XX,Off+None
E745 7FFF0002         (       monkey.asm):02824                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02825                 
                      (       monkey.asm):02826                     ; 48:4  Voice    Note   Vol   Dur
E749 523B0700         (       monkey.asm):02827                     .dw     Voice5+G3,Mid+None
E74D 62A70700         (       monkey.asm):02828                     .dw     Voice6+E3,Mid+None
E751 73570700         (       monkey.asm):02829                     .dw     Voice7+C3,Mid+None
E755 86AE0708         (       monkey.asm):02830                     .dw     Voice8+C2,Mid+Sixteenth
E759 1FFF0000         (       monkey.asm):02831                     .dw     Voice1+XX,Off+None
E75D 3FFF0000         (       monkey.asm):02832                     .dw     Voice3+XX,Off+None
E761 5FFF0000         (       monkey.asm):02833                     .dw     Voice5+XX,Off+None
E765 6FFF0000         (       monkey.asm):02834                     .dw     Voice6+XX,Off+None
E769 7FFF0000         (       monkey.asm):02835                     .dw     Voice7+XX,Off+None
E76D 8FFF0002         (       monkey.asm):02836                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02837                 
                      (       monkey.asm):02838                     ; 48:5  Voice    Note   Vol   Dur
E771 10AA0700         (       monkey.asm):02839                     .dw     Voice1+E5,Mid+None
E775 31530700         (       monkey.asm):02840                     .dw     Voice3+E4,Mid+None
E779 86AE0710         (       monkey.asm):02841                     .dw     Voice8+C2,Mid+Eighth
E77D 8FFF0002         (       monkey.asm):02842                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02843                 
                      (       monkey.asm):02844                     ; 48:6  Voice    Note   Vol   Dur
E781 523B0700         (       monkey.asm):02845                     .dw     Voice5+G3,Mid+None
E785 62A70700         (       monkey.asm):02846                     .dw     Voice6+E3,Mid+None
E789 73570708         (       monkey.asm):02847                     .dw     Voice7+C3,Mid+Sixteenth
E78D 5FFF0000         (       monkey.asm):02848                     .dw     Voice5+XX,Off+None
E791 6FFF0000         (       monkey.asm):02849                     .dw     Voice6+XX,Off+None
E795 7FFF0002         (       monkey.asm):02850                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02851                 
                      (       monkey.asm):02852                     ; 48:7  Voice    Note   Vol   Dur
E799 523B0700         (       monkey.asm):02853                     .dw     Voice5+G3,Mid+None
E79D 62A70700         (       monkey.asm):02854                     .dw     Voice6+E3,Mid+None
E7A1 73570708         (       monkey.asm):02855                     .dw     Voice7+C3,Mid+Sixteenth
E7A5 1FFF0000         (       monkey.asm):02856                     .dw     Voice1+XX,Off+None
E7A9 3FFF0000         (       monkey.asm):02857                     .dw     Voice3+XX,Off+None
E7AD 5FFF0000         (       monkey.asm):02858                     .dw     Voice5+XX,Off+None
E7B1 6FFF0000         (       monkey.asm):02859                     .dw     Voice6+XX,Off+None
E7B5 7FFF0002         (       monkey.asm):02860                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02861                 
                      (       monkey.asm):02862                     ; 48:8  Voice    Note   Vol   Dur
E7B9 88EB0708         (       monkey.asm):02863                     .dw     Voice8+G1,Mid+Sixteenth
E7BD 8FFF0002         (       monkey.asm):02864                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02865                 
                      (       monkey.asm):02866                     ; 48:9  Voice    Note   Vol   Dur
E7C1 88EB0708         (       monkey.asm):02867                     .dw     Voice8+G1,Mid+Sixteenth
E7C5 8FFF0002         (       monkey.asm):02868                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02869                 
                      (       monkey.asm):02870                     ; 48:10 Voice    Note   Vol   Dur
E7C9 10BE0700         (       monkey.asm):02871                     .dw     Voice1+D5,Mid+None
E7CD 317D0700         (       monkey.asm):02872                     .dw     Voice3+D4,Mid+None
E7D1 523B0700         (       monkey.asm):02873                     .dw     Voice5+G3,Mid+None
E7D5 62A70700         (       monkey.asm):02874                     .dw     Voice6+E3,Mid+None
E7D9 73570708         (       monkey.asm):02875                     .dw     Voice7+C3,Mid+Sixteenth
E7DD 1FFF0000         (       monkey.asm):02876                     .dw     Voice1+XX,Off+None
E7E1 3FFF0000         (       monkey.asm):02877                     .dw     Voice3+XX,Off+None
E7E5 5FFF0000         (       monkey.asm):02878                     .dw     Voice5+XX,Off+None
E7E9 6FFF0000         (       monkey.asm):02879                     .dw     Voice6+XX,Off+None
E7ED 7FFF0002         (       monkey.asm):02880                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02881                 
                      (       monkey.asm):02882                     ; 48:11 Voice    Note   Vol   Dur
E7F1 523B0700         (       monkey.asm):02883                     .dw     Voice5+G3,Mid+None
E7F5 62A70700         (       monkey.asm):02884                     .dw     Voice6+E3,Mid+None
E7F9 73570700         (       monkey.asm):02885                     .dw     Voice7+C3,Mid+None
E7FD 88EB0708         (       monkey.asm):02886                     .dw     Voice8+G1,Mid+Sixteenth
E801 1FFF0000         (       monkey.asm):02887                     .dw     Voice1+XX,Off+None
E805 3FFF0000         (       monkey.asm):02888                     .dw     Voice3+XX,Off+None
E809 5FFF0000         (       monkey.asm):02889                     .dw     Voice5+XX,Off+None
E80D 6FFF0000         (       monkey.asm):02890                     .dw     Voice6+XX,Off+None
E811 7FFF0000         (       monkey.asm):02891                     .dw     Voice7+XX,Off+None
E815 8FFF0002         (       monkey.asm):02892                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02893                 
                      (       monkey.asm):02894                     ; 48:12 Voice    Note   Vol   Dur
E819 10D60700         (       monkey.asm):02895                     .dw     Voice1+C5,Mid+None
E81D 31AC0700         (       monkey.asm):02896                     .dw     Voice3+C4,Mid+None
E821 87F20708         (       monkey.asm):02897                     .dw     Voice8+A1,Mid+Sixteenth
E825 1FFF0000         (       monkey.asm):02898                     .dw     Voice1+XX,Off+None
E829 3FFF0002         (       monkey.asm):02899                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):02900                 
                      (       monkey.asm):02901                     ; 48:13 Voice    Note   Vol   Dur
E82D 10E20700         (       monkey.asm):02902                     .dw     Voice1+B4,Mid+None
E831 31C50708         (       monkey.asm):02903                     .dw     Voice3+B3,Mid+Sixteenth
E835 1FFF0000         (       monkey.asm):02904                     .dw     Voice1+XX,Off+None
E839 3FFF0000         (       monkey.asm):02905                     .dw     Voice3+XX,Off+None
E83D 8FFF0002         (       monkey.asm):02906                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02907                     
                      (       monkey.asm):02908                     ; 48:14 Voice    Note   Vol   Dur
E841 10D60700         (       monkey.asm):02909                     .dw     Voice1+C5,Mid+None
E845 31AC0700         (       monkey.asm):02910                     .dw     Voice3+C4,Mid+None
E849 51FC0700         (       monkey.asm):02911                     .dw     Voice5+A3,Mid+None
E84D 62A70700         (       monkey.asm):02912                     .dw     Voice6+E3,Mid+None
E851 73570700         (       monkey.asm):02913                     .dw     Voice7+C3,Mid+None
E855 87F20708         (       monkey.asm):02914                     .dw     Voice8+A1,Mid+Sixteenth
E859 5FFF0000         (       monkey.asm):02915                     .dw     Voice5+XX,Off+None
E85D 6FFF0000         (       monkey.asm):02916                     .dw     Voice6+XX,Off+None
E861 7FFF0002         (       monkey.asm):02917                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02918                 
                      (       monkey.asm):02919                     ; 48:15 Voice    Note   Vol   Dur
E865 51FC0700         (       monkey.asm):02920                     .dw     Voice5+A3,Mid+None
E869 62A70700         (       monkey.asm):02921                     .dw     Voice6+E3,Mid+None
E86D 73570708         (       monkey.asm):02922                     .dw     Voice7+C3,Mid+Sixteenth
E871 1FFF0000         (       monkey.asm):02923                     .dw     Voice1+XX,Off+None
E875 3FFF0000         (       monkey.asm):02924                     .dw     Voice3+XX,Off+None
E879 5FFF0000         (       monkey.asm):02925                     .dw     Voice5+XX,Off+None
E87D 6FFF0000         (       monkey.asm):02926                     .dw     Voice6+XX,Off+None
E881 7FFF0000         (       monkey.asm):02927                     .dw     Voice7+XX,Off+None
E885 8FFF0002         (       monkey.asm):02928                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02929                 
                      (       monkey.asm):02930                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):02931                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):02932                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):02933                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):02934                 
                      (       monkey.asm):02935                     ; 49:1  Voice    Note   Vol   Dur
E889 10E20700         (       monkey.asm):02936                     .dw     Voice1+B4,Mid+None
E88D 31C50700         (       monkey.asm):02937                     .dw     Voice3+B3,Mid+None
E891 8A9B0710         (       monkey.asm):02938                     .dw     Voice8+E1,Mid+Eighth
E895 8FFF0002         (       monkey.asm):02939                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02940                 
                      (       monkey.asm):02941                     ; 49:2  Voice    Note   Vol   Dur
E899 523B0700         (       monkey.asm):02942                     .dw     Voice5+G3,Mid+None
E89D 62A70700         (       monkey.asm):02943                     .dw     Voice6+E3,Mid+None
E8A1 738A0700         (       monkey.asm):02944                     .dw     Voice7+B2,Mid+None
E8A5 8A9B0708         (       monkey.asm):02945                     .dw     Voice8+E1,Mid+Sixteenth
E8A9 5FFF0000         (       monkey.asm):02946                     .dw     Voice5+XX,Off+None
E8AD 6FFF0000         (       monkey.asm):02947                     .dw     Voice6+XX,Off+None
E8B1 7FFF0000         (       monkey.asm):02948                     .dw     Voice7+XX,Off+None
E8B5 8FFF0002         (       monkey.asm):02949                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):02950                 
                      (       monkey.asm):02951                     ; 49:3  Voice    Note   Vol   Dur
E8B9 523B0700         (       monkey.asm):02952                     .dw     Voice5+G3,Mid+None
E8BD 62A70700         (       monkey.asm):02953                     .dw     Voice6+E3,Mid+None
E8C1 738A0700         (       monkey.asm):02954                     .dw     Voice7+B2,Mid+None
E8C5 8A9B0708         (       monkey.asm):02955                     .dw     Voice8+E1,Mid+Sixteenth
E8C9 1FFF0000         (       monkey.asm):02956                     .dw     Voice1+XX,Off+None
E8CD 3FFF0000         (       monkey.asm):02957                     .dw     Voice3+XX,Off+None
E8D1 5FFF0000         (       monkey.asm):02958                     .dw     Voice5+XX,Off+None
E8D5 6FFF0000         (       monkey.asm):02959                     .dw     Voice6+XX,Off+None
E8D9 7FFF0000         (       monkey.asm):02960                     .dw     Voice7+XX,Off+None
E8DD 8FFF0010         (       monkey.asm):02961                     .dw     Voice8+XX,Off+Eighth
                      (       monkey.asm):02962                 
                      (       monkey.asm):02963                     ; 49:4  Voice    Note   Vol   Dur
E8E1 10AA0700         (       monkey.asm):02964                     .dw     Voice1+E5,Mid+None
E8E5 31530700         (       monkey.asm):02965                     .dw     Voice3+E4,Mid+None
E8E9 523B0700         (       monkey.asm):02966                     .dw     Voice5+G3,Mid+None
E8ED 62A70700         (       monkey.asm):02967                     .dw     Voice6+E3,Mid+None
E8F1 738A0708         (       monkey.asm):02968                     .dw     Voice7+B2,Mid+Sixteenth
E8F5 5FFF0000         (       monkey.asm):02969                     .dw     Voice5+XX,Off+None
E8F9 6FFF0000         (       monkey.asm):02970                     .dw     Voice6+XX,Off+None
E8FD 7FFF0002         (       monkey.asm):02971                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02972                 
                      (       monkey.asm):02973                     ; 49:5  Voice    Note   Vol   Dur
E901 523B0700         (       monkey.asm):02974                     .dw     Voice5+G3,Mid+None
E905 62A70700         (       monkey.asm):02975                     .dw     Voice6+E3,Mid+None
E909 738A0708         (       monkey.asm):02976                     .dw     Voice7+B2,Mid+Sixteenth
E90D 1FFF0000         (       monkey.asm):02977                     .dw     Voice1+XX,Off+None
E911 3FFF0000         (       monkey.asm):02978                     .dw     Voice3+XX,Off+None
E915 5FFF0000         (       monkey.asm):02979                     .dw     Voice5+XX,Off+None
E919 6FFF0000         (       monkey.asm):02980                     .dw     Voice6+XX,Off+None
E91D 7FFF0002         (       monkey.asm):02981                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02982                 
                      (       monkey.asm):02983                     ; 49:6  Voice    Note   Vol   Dur
E921 10AA0700         (       monkey.asm):02984                     .dw     Voice1+E5,Mid+None
E925 31530710         (       monkey.asm):02985                     .dw     Voice3+E4,Mid+Eighth
                      (       monkey.asm):02986                 
                      (       monkey.asm):02987                     ; 49:7  Voice    Note   Vol   Dur
E929 523B0700         (       monkey.asm):02988                     .dw     Voice5+G3,Mid+None
E92D 62A70700         (       monkey.asm):02989                     .dw     Voice6+E3,Mid+None
E931 738A0708         (       monkey.asm):02990                     .dw     Voice7+B2,Mid+Sixteenth
E935 1FFF0000         (       monkey.asm):02991                     .dw     Voice1+XX,Off+None
E939 3FFF0000         (       monkey.asm):02992                     .dw     Voice3+XX,Off+None
E93D 5FFF0000         (       monkey.asm):02993                     .dw     Voice5+XX,Off+None
E941 6FFF0000         (       monkey.asm):02994                     .dw     Voice6+XX,Off+None
E945 7FFF0002         (       monkey.asm):02995                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):02996                 
                      (       monkey.asm):02997                     ; 49:8  Voice    Note   Vol   Dur
E949 108F0700         (       monkey.asm):02998                     .dw     Voice1+G5,Mid+None
E94D 311D0700         (       monkey.asm):02999                     .dw     Voice3+G4,Mid+None
E951 523B0700         (       monkey.asm):03000                     .dw     Voice5+G3,Mid+None
E955 62A70700         (       monkey.asm):03001                     .dw     Voice6+E3,Mid+None
E959 738A0708         (       monkey.asm):03002                     .dw     Voice7+B2,Mid+Sixteenth
E95D 1FFF0000         (       monkey.asm):03003                     .dw     Voice1+XX,Off+None
E961 3FFF0000         (       monkey.asm):03004                     .dw     Voice3+XX,Off+None
E965 5FFF0000         (       monkey.asm):03005                     .dw     Voice5+XX,Off+None
E969 6FFF0000         (       monkey.asm):03006                     .dw     Voice6+XX,Off+None
E96D 7FFF0002         (       monkey.asm):03007                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):03008                 
                      (       monkey.asm):03009                     ; 49:9  Voice    Note   Vol   Dur
E971 10970700         (       monkey.asm):03010                     .dw     Voice1+Fs5,Mid+None
E975 312E0708         (       monkey.asm):03011                     .dw     Voice3+Fs4,Mid+Sixteenth
E979 1FFF0000         (       monkey.asm):03012                     .dw     Voice1+XX,Off+None
E97D 3FFF0002         (       monkey.asm):03013                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):03014                 
                      (       monkey.asm):03015                     ; 49:10 Voice    Note   Vol   Dur
E981 10AA0700         (       monkey.asm):03016                     .dw     Voice1+E5,Mid+None
E985 31530708         (       monkey.asm):03017                     .dw     Voice3+E4,Mid+Sixteenth
E989 1FFF0000         (       monkey.asm):03018                     .dw     Voice1+XX,Off+None
E98D 3FFF0002         (       monkey.asm):03019                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):03020                 
                      (       monkey.asm):03021                     ; 49:11 Voice    Note   Vol   Dur
E991 10BE0700         (       monkey.asm):03022                     .dw     Voice1+D5,Mid+None
E995 317D0700         (       monkey.asm):03023                     .dw     Voice3+D4,Mid+None
E999 51FC0700         (       monkey.asm):03024                     .dw     Voice5+A3,Mid+None
E99D 625D0700         (       monkey.asm):03025                     .dw     Voice6+Fs3,Mid+None
E9A1 72FA0700         (       monkey.asm):03026                     .dw     Voice7+D3,Mid+None
E9A5 8A9B0708         (       monkey.asm):03027                     .dw     Voice8+E1,Mid+Sixteenth
E9A9 5FFF0000         (       monkey.asm):03028                     .dw     Voice5+XX,Off+None
E9AD 6FFF0000         (       monkey.asm):03029                     .dw     Voice6+XX,Off+None
E9B1 7FFF0000         (       monkey.asm):03030                     .dw     Voice7+XX,Off+None
E9B5 8FFF0002         (       monkey.asm):03031                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03032                 
                      (       monkey.asm):03033                     ; 49:12 Voice    Note   Vol   Dur
                      (       monkey.asm):03034                 
E9B9 51FC0700         (       monkey.asm):03035                     .dw     Voice5+A3,Mid+None
E9BD 625D0700         (       monkey.asm):03036                     .dw     Voice6+Fs3,Mid+None
E9C1 72FA0700         (       monkey.asm):03037                     .dw     Voice7+D3,Mid+None
E9C5 8A9B0708         (       monkey.asm):03038                     .dw     Voice8+E1,Mid+Sixteenth
E9C9 1FFF0000         (       monkey.asm):03039                     .dw     Voice1+XX,Off+None
E9CD 3FFF0000         (       monkey.asm):03040                     .dw     Voice3+XX,Off+None
E9D1 5FFF0000         (       monkey.asm):03041                     .dw     Voice5+XX,Off+None
E9D5 6FFF0000         (       monkey.asm):03042                     .dw     Voice6+XX,Off+None
E9D9 7FFF0000         (       monkey.asm):03043                     .dw     Voice7+XX,Off+None
E9DD 8FFF0002         (       monkey.asm):03044                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03045                 
                      (       monkey.asm):03046                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):03047                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):03048                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):03049                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):03050                 
                      (       monkey.asm):03051                     ; 50:1  Voice    Note   Vol   Dur
E9E1 10AA0700         (       monkey.asm):03052                     .dw     Voice1+E5,Mid+None
E9E5 31530700         (       monkey.asm):03053                     .dw     Voice3+E4,Mid+None
E9E9 86AE0708         (       monkey.asm):03054                     .dw     Voice8+C2,Mid+Sixteenth
E9ED 8FFF0002         (       monkey.asm):03055                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03056                 
                      (       monkey.asm):03057                     ; 50:2  Voice    Note   Vol   Dur
E9F1 86AE0708         (       monkey.asm):03058                     .dw     Voice8+C2,Mid+Sixteenth
E9F5 1FFF0000         (       monkey.asm):03059                     .dw     Voice1+XX,Off+None
E9F9 3FFF0000         (       monkey.asm):03060                     .dw     Voice3+XX,Off+None
E9FD 8FFF0002         (       monkey.asm):03061                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03062                 
                      (       monkey.asm):03063                     ; 50:3  Voice    Note   Vol   Dur
EA01 10AA0700         (       monkey.asm):03064                     .dw     Voice1+E5,Mid+None
EA05 31530700         (       monkey.asm):03065                     .dw     Voice3+E4,Mid+None
EA09 523B0700         (       monkey.asm):03066                     .dw     Voice5+G3,Mid+None
EA0D 62A70700         (       monkey.asm):03067                     .dw     Voice6+E3,Mid+None
EA11 73570708         (       monkey.asm):03068                     .dw     Voice7+C3,Mid+Sixteenth
EA15 5FFF0000         (       monkey.asm):03069                     .dw     Voice5+XX,Off+None
EA19 6FFF0000         (       monkey.asm):03070                     .dw     Voice6+XX,Off+None
EA1D 7FFF0002         (       monkey.asm):03071                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):03072                 
                      (       monkey.asm):03073                     ; 50:4  Voice    Note   Vol   Dur
EA21 523B0700         (       monkey.asm):03074                     .dw     Voice5+G3,Mid+None
EA25 62A70700         (       monkey.asm):03075                     .dw     Voice6+E3,Mid+None
EA29 73570700         (       monkey.asm):03076                     .dw     Voice7+C3,Mid+None
EA2D 86AE0708         (       monkey.asm):03077                     .dw     Voice8+C2,Mid+Sixteenth
EA31 5FFF0000         (       monkey.asm):03078                     .dw     Voice5+XX,Off+None
EA35 6FFF0000         (       monkey.asm):03079                     .dw     Voice6+XX,Off+None
EA39 7FFF0000         (       monkey.asm):03080                     .dw     Voice7+XX,Off+None
EA3D 8FFF0002         (       monkey.asm):03081                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03082                 
                      (       monkey.asm):03083                     ; 50:5  Voice    Note   Vol   Dur
EA41 86AE0710         (       monkey.asm):03084                     .dw     Voice8+C2,Mid+Eighth
EA45 1FFF0000         (       monkey.asm):03085                     .dw     Voice1+XX,Off+None
EA49 3FFF0002         (       monkey.asm):03086                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):03087                 
                      (       monkey.asm):03088                     ; 50:6  Voice    Note   Vol   Dur
EA4D 523B0700         (       monkey.asm):03089                     .dw     Voice5+G3,Mid+None
EA51 62A70700         (       monkey.asm):03090                     .dw     Voice6+E3,Mid+None
EA55 73570708         (       monkey.asm):03091                     .dw     Voice7+C3,Mid+Sixteenth
EA59 5FFF0000         (       monkey.asm):03092                     .dw     Voice5+XX,Off+None
EA5D 6FFF0000         (       monkey.asm):03093                     .dw     Voice6+XX,Off+None
EA61 7FFF0002         (       monkey.asm):03094                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):03095                 
                      (       monkey.asm):03096                     ; 50:7  Voice    Note   Vol   Dur
EA65 10AA0700         (       monkey.asm):03097                     .dw     Voice1+E5,Mid+None
EA69 31530700         (       monkey.asm):03098                     .dw     Voice3+E4,Mid+None
EA6D 523B0700         (       monkey.asm):03099                     .dw     Voice5+G3,Mid+None
EA71 62A70700         (       monkey.asm):03100                     .dw     Voice6+E3,Mid+None
EA75 73570708         (       monkey.asm):03101                     .dw     Voice7+C3,Mid+Sixteenth
EA79 1FFF0000         (       monkey.asm):03102                     .dw     Voice1+XX,Off+None
EA7D 3FFF0000         (       monkey.asm):03103                     .dw     Voice3+XX,Off+None
EA81 5FFF0000         (       monkey.asm):03104                     .dw     Voice5+XX,Off+None
EA85 6FFF0000         (       monkey.asm):03105                     .dw     Voice6+XX,Off+None
EA89 7FFF0000         (       monkey.asm):03106                     .dw     Voice7+XX,Off+None
EA8D 8FFF0002         (       monkey.asm):03107                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03108                 
                      (       monkey.asm):03109                     ; 50:8  Voice    Note   Vol   Dur
EA91 107F0700         (       monkey.asm):03110                     .dw     Voice1+A5,Mid+None
EA95 30FE0700         (       monkey.asm):03111                     .dw     Voice3+A4,Mid+None
EA99 85F40708         (       monkey.asm):03112                     .dw     Voice8+D2,Mid+Sixteenth
EA9D 1FFF0000         (       monkey.asm):03113                     .dw     Voice1+XX,Off+None
EAA1 3FFF0000         (       monkey.asm):03114                     .dw     Voice3+XX,Off+None
EAA5 8FFF0002         (       monkey.asm):03115                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03116                 
                      (       monkey.asm):03117                     ; 50:9  Voice    Note   Vol   Dur
EAA9 108F0700         (       monkey.asm):03118                     .dw     Voice1+G5,Mid+None
EAAD 311D0700         (       monkey.asm):03119                     .dw     Voice3+G4,Mid+None
EAB1 85F40708         (       monkey.asm):03120                     .dw     Voice8+D2,Mid+Sixteenth
EAB5 1FFF0000         (       monkey.asm):03121                     .dw     Voice1+XX,Off+None
EAB9 3FFF0000         (       monkey.asm):03122                     .dw     Voice3+XX,Off+None
EABD 8FFF0002         (       monkey.asm):03123                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03124                 
                      (       monkey.asm):03125                     ; 50:10 Voice    Note   Vol   Dur
EAC1 10970700         (       monkey.asm):03126                     .dw     Voice1+Fs5,Mid+None
EAC5 312E0700         (       monkey.asm):03127                     .dw     Voice3+Fs4,Mid+None
EAC9 523B0700         (       monkey.asm):03128                     .dw     Voice5+G3,Mid+None
EACD 62A70700         (       monkey.asm):03129                     .dw     Voice6+E3,Mid+None
EAD1 738A0708         (       monkey.asm):03130                     .dw     Voice7+B2,Mid+Sixteenth
EAD5 1FFF0000         (       monkey.asm):03131                     .dw     Voice1+XX,Off+None
EAD9 3FFF0000         (       monkey.asm):03132                     .dw     Voice3+XX,Off+None
EADD 5FFF0000         (       monkey.asm):03133                     .dw     Voice5+XX,Off+None
EAE1 6FFF0000         (       monkey.asm):03134                     .dw     Voice6+XX,Off+None
EAE5 7FFF0002         (       monkey.asm):03135                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):03136                 
                      (       monkey.asm):03137                     ; 50:11 Voice    Note   Vol   Dur
EAE9 107F0700         (       monkey.asm):03138                     .dw     Voice1+A5,Mid+None
EAED 30FE0700         (       monkey.asm):03139                     .dw     Voice3+A4,Mid+None
EAF1 523B0700         (       monkey.asm):03140                     .dw     Voice5+G3,Mid+None
EAF5 62A70700         (       monkey.asm):03141                     .dw     Voice6+E3,Mid+None
EAF9 738A0700         (       monkey.asm):03142                     .dw     Voice7+B2,Mid+None
EAFD 85F40708         (       monkey.asm):03143                     .dw     Voice8+D2,Mid+Sixteenth
EB01 1FFF0000         (       monkey.asm):03144                     .dw     Voice1+XX,Off+None
EB05 3FFF0000         (       monkey.asm):03145                     .dw     Voice3+XX,Off+None
EB09 5FFF0000         (       monkey.asm):03146                     .dw     Voice5+XX,Off+None
EB0D 6FFF0000         (       monkey.asm):03147                     .dw     Voice6+XX,Off+None
EB11 7FFF0000         (       monkey.asm):03148                     .dw     Voice7+XX,Off+None
EB15 8FFF0002         (       monkey.asm):03149                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03150                 
                      (       monkey.asm):03151                     ; 50:12 Voice    Note   Vol   Dur
EB19 108F0700         (       monkey.asm):03152                     .dw     Voice1+G5,Mid+None
EB1D 311D0700         (       monkey.asm):03153                     .dw     Voice3+G4,Mid+None
EB21 86AE0708         (       monkey.asm):03154                     .dw     Voice8+C2,Mid+Sixteenth
EB25 1FFF0000         (       monkey.asm):03155                     .dw     Voice1+XX,Off+None
EB29 3FFF0002         (       monkey.asm):03156                     .dw     Voice3+XX,Off+Pause
                      (       monkey.asm):03157                 
                      (       monkey.asm):03158                     ; 50:13 Voice    Note   Vol   Dur
EB2D 10AA0700         (       monkey.asm):03159                     .dw     Voice1+E5,Mid+None
EB31 31530708         (       monkey.asm):03160                     .dw     Voice3+E4,Mid+Sixteenth
EB35 1FFF0000         (       monkey.asm):03161                     .dw     Voice1+XX,Off+None
EB39 3FFF0000         (       monkey.asm):03162                     .dw     Voice3+XX,Off+None
EB3D 8FFF0002         (       monkey.asm):03163                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03164                 
                      (       monkey.asm):03165                     ; 50:14 Voice    Note   Vol   Dur
EB41 10970700         (       monkey.asm):03166                     .dw     Voice1+Fs5,Mid+None
EB45 312E0700         (       monkey.asm):03167                     .dw     Voice3+Fs4,Mid+None
EB49 51FC0700         (       monkey.asm):03168                     .dw     Voice5+A3,Mid+None
EB4D 625D0700         (       monkey.asm):03169                     .dw     Voice6+Fs3,Mid+None
EB51 72FA0700         (       monkey.asm):03170                     .dw     Voice7+D3,Mid+None
EB55 85F40708         (       monkey.asm):03171                     .dw     Voice8+D2,Mid+Sixteenth
EB59 1FFF0000         (       monkey.asm):03172                     .dw     Voice1+XX,Off+None
EB5D 3FFF0000         (       monkey.asm):03173                     .dw     Voice3+XX,Off+None
EB61 5FFF0000         (       monkey.asm):03174                     .dw     Voice5+XX,Off+None
EB65 6FFF0000         (       monkey.asm):03175                     .dw     Voice6+XX,Off+None
EB69 7FFF0002         (       monkey.asm):03176                     .dw     Voice7+XX,Off+Pause
                      (       monkey.asm):03177                 
                      (       monkey.asm):03178                     ; 50:15 Voice    Note   Vol   Dur
EB6D 51FC0700         (       monkey.asm):03179                     .dw     Voice5+A3,Mid+None
EB71 625D0700         (       monkey.asm):03180                     .dw     Voice6+Fs3,Mid+None
EB75 72FA0708         (       monkey.asm):03181                     .dw     Voice7+D3,Mid+Sixteenth
EB79 5FFF0000         (       monkey.asm):03182                     .dw     Voice5+XX,Off+None
EB7D 6FFF0000         (       monkey.asm):03183                     .dw     Voice6+XX,Off+None
EB81 7FFF0000         (       monkey.asm):03184                     .dw     Voice7+XX,Off+None
EB85 8FFF0002         (       monkey.asm):03185                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03186                 
                      (       monkey.asm):03187                     ; Voice 1-2 = Panflote 5
                      (       monkey.asm):03188                     ; Voice 3-4 = Marimba 4
                      (       monkey.asm):03189                     ; Voice 5-7 = Steel Drum 3
                      (       monkey.asm):03190                     ; Voice 8 = Elektrischer Bass 2
                      (       monkey.asm):03191                 
                      (       monkey.asm):03192                     ; 51:1  Voice    Note   Vol   Du
EB89 10AA0700         (       monkey.asm):03193                     .dw     Voice1+E5,Mid+None
EB8D 31530700         (       monkey.asm):03194                     .dw     Voice3+E4,Mid+None
EB91 523B0700         (       monkey.asm):03195                     .dw     Voice5+G3,Mid+None
EB95 62A70700         (       monkey.asm):03196                     .dw     Voice6+E3,Mid+None
EB99 738A0700         (       monkey.asm):03197                     .dw     Voice7+B2,Mid+None
EB9D 854D0720         (       monkey.asm):03198                     .dw     Voice8+E2,Mid+Quarter
EBA1 1FFF0000         (       monkey.asm):03199                     .dw     Voice1+XX,Off+None
EBA5 3FFF0000         (       monkey.asm):03200                     .dw     Voice3+XX,Off+None
EBA9 5FFF0000         (       monkey.asm):03201                     .dw     Voice5+XX,Off+None
EBAD 6FFF0000         (       monkey.asm):03202                     .dw     Voice6+XX,Off+None
EBB1 7FFF0000         (       monkey.asm):03203                     .dw     Voice7+XX,Off+None
EBB5 8FFF0002         (       monkey.asm):03204                     .dw     Voice8+XX,Off+Pause
                      (       monkey.asm):03205                 
                      (       monkey.asm):03206                     ; EOT
EBB9 00000000         (       monkey.asm):03207                     .dw     $0000,$0000
                      (         main.asm):00198                 
                      (         main.asm):00199                 ;  ___           _                                          _         
                      (         main.asm):00200                 ; |_ _|  _ __   | |_    ___   _ __   _ __   _   _   _ __   | |_   ___ 
                      (         main.asm):00201                 ;  | |  | '_ \  | __|  / _ \ | '__| | '__| | | | | | '_ \  | __| / __|
                      (         main.asm):00202                 ;  | |  | | | | | |_  |  __/ | |    | |    | |_| | | |_) | | |_  \__ \
                      (         main.asm):00203                 ; |___| |_| |_|  \__|  \___| |_|    |_|     \__,_| | .__/   \__| |___/
                      (         main.asm):00204                 ;                                                  |_|
                      (         main.asm):00205                 ; ----------------------------------------------------------------------------------------
                      (         main.asm):00206                 
                      (         main.asm):00207                     PRAGMA cc
                      (         main.asm):00208                     
EBBD                  (         main.asm):00209                 IllegalDiv0:
EBBD 3B               (         main.asm):00210 (17+?)  17          rti
                      (         main.asm):00211                     
                      (         main.asm):00212                     PRAGMA cc
                      (         main.asm):00213                 
EBBE                  (         main.asm):00214                 SoftInt3:
EBBE 3B               (         main.asm):00215 (17+?)  17          rti
                      (         main.asm):00216                     
                      (         main.asm):00217                     PRAGMA cc
                      (         main.asm):00218                 
EBBF                  (         main.asm):00219                 SoftInt2:
EBBF 3B               (         main.asm):00220 (17+?)  17          rti
                      (         main.asm):00221                     
                      (         main.asm):00222                     PRAGMA cc
                      (         main.asm):00223                 
EBC0                  (         main.asm):00224                 SoftInt1:
EBC0 3B               (         main.asm):00225 (17+?)  17          rti
                      (         main.asm):00226                     
                      (         main.asm):00227                     PRAGMA cc
                      (         main.asm):00228                 
EBC1                  (         main.asm):00229                 FIRQInt:
EBC1 3B               (         main.asm):00230 (17+?)  17          rti
                      (         main.asm):00231                 
                      (         main.asm):00232                     PRAGMA cc
                      (         main.asm):00233                 
EBC2                  (         main.asm):00234                 IRQInt:
EBC2 3B               (         main.asm):00235 (17+?)  17          rti
                      (         main.asm):00236                 
                      (         main.asm):00237                     PRAGMA cc
                      (         main.asm):00238                 
EBC3                  (         main.asm):00239                 NMIInt:
EBC3 3B               (         main.asm):00240 (17+?)  17          rti
                      (         main.asm):00241                 
                      (         main.asm):00242                 ;  ____                   __     __                 _           _       _
                      (         main.asm):00243                 ; / ___|   _   _   ___    \ \   / /   __ _   _ __  (_)   __ _  | |__   | |   ___   ___ 
                      (         main.asm):00244                 ; \___ \  | | | | / __|    \ \ / /   / _` | | '__| | |  / _` | | '_ \  | |  / _ \ / __|
                      (         main.asm):00245                 ;  ___) | | |_| | \__ \     \ V /   | (_| | | |    | | | (_| | | |_) | | | |  __/ \__ \
                      (         main.asm):00246                 ; |____/   \__, | |___/      \_/     \__,_| |_|    |_|  \__,_| |_.__/  |_|  \___| |___/
                      (         main.asm):00247                 ;          |___/
                      (         main.asm):00248                 ;
                      (         main.asm):00249                 ; System variables used by monitor subroutines
                      (         main.asm):00250                 ; ============================================
                      (         main.asm):00251                 
EBC4                  (         main.asm):00252                 VarStart:
EBC4                  (         main.asm):00253                 InStrBuffer:    .ds     $100    ; String input for console input
ECC4                  (         main.asm):00254                 CmdErrorPtr:    .ds     1       ; Command prompt error pointer
ECC5                  (         main.asm):00255                 CurrAddress:    .ds     2       ; Current address, useful for monitor actions
ECC7                  (         main.asm):00256                 CurrBank:       .ds     1       ; Current bank number, relative to current address
ECC8                  (         main.asm):00257                 RunFlag         .ds     1       ; Run flag to indicate registers should be saved or not
ECC9                  (         main.asm):00258                 RegCC:          .ds     1       ; Register CC
ECCA                  (         main.asm):00259                 RegDP:          .ds     1       ; Register DP
ECCB                  (         main.asm):00260                 RegA:           .ds     1       ; Register A
ECCC                  (         main.asm):00261                 RegB:           .ds     1       ; Register B
ECCD                  (         main.asm):00262                 RegE:           .ds     1       ; Register E
ECCE                  (         main.asm):00263                 RegF:           .ds     1       ; Register F
ECCF                  (         main.asm):00264                 RegX:           .ds     2       ; Register X
ECD1                  (         main.asm):00265                 RegY:           .ds     2       ; Register Y
ECD3                  (         main.asm):00266                 RegU:           .ds     2       ; User stack
ECD5                  (         main.asm):00267                 RegS:           .ds     2       ; System stack
ECD7                  (         main.asm):00268                 RegPC:          .ds     2       ; Register PC
ECD9                  (         main.asm):00269                 TempByte:       .ds     1       ; Temporary storage byte (8-bit)
ECDA                  (         main.asm):00270                 TempWord:                       ; Temporary storage word (16-bit deconstructed)
ECDA                  (         main.asm):00271                 TempW1:         .ds     1       ; Word MSB
ECDB                  (         main.asm):00272                 TempW2:         .ds     1       ; Word LSB
ECDC                  (         main.asm):00273                 TempQuad:                       ; Temporary storage quad (32-bit deconstructed)
ECDC                  (         main.asm):00274                 TempQ1:         .ds     1       ; Quad High MSB
ECDD                  (         main.asm):00275                 TempQ2:         .ds     1       ; Quad Low MSB
ECDE                  (         main.asm):00276                 TempQ3:         .ds     1       ; Quad High LSB
ECDF                  (         main.asm):00277                 TempQ4:         .ds     1       ; Quad Low LSB
ECE0                  (         main.asm):00278                 RxBuffer:       .ds     $100    ; ACIA #1 receive buffer
EDE0                  (         main.asm):00279                 SndTempo:       .ds     1
EDE1                  (         main.asm):00280                 SndVoice:       .ds     1
EDE2                  (         main.asm):00281                 SndNoteCoarse:  .ds     1
EDE3                  (         main.asm):00282                 SndNoteFine:    .ds     1
EDE4                  (         main.asm):00283                 SndVolume:      .ds     1
EDE5                  (         main.asm):00284                 SndDuration:    .ds     1
EDE6                  (         main.asm):00285                 VarEnd:
                      (         main.asm):00286                 
EDE6 4141414141414141 (         main.asm):00287                     FILL 'A',StackEnd-VarEnd    ; Clear area with A's to indicate available shadow RAM
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141414141414141
     4141
FA00 5555555555555555 (         main.asm):00288                     FILL 'U',UsrSize            ; Clear area with U's to indicate user stack area
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
     5555555555555555
FB00 5353535353535353 (         main.asm):00289                     FILL 'S',SysSize            ; Clear area with S's to insicate system stack area
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
     5353535353535353
                      (         main.asm):00290                 
                      (         main.asm):00291                 ;  ____    _                  _    
                      (         main.asm):00292                 ; | __ )  | |   ___     ___  | | __
                      (         main.asm):00293                 ; |  _ \  | |  / _ \   / __| | |/ /
                      (         main.asm):00294                 ; | |_) | | | | (_) | | (__  |   < 
                      (         main.asm):00295                 ; |____/  |_|  \___/   \___| |_|\_\
                      (         main.asm):00296                 ;
                      (         main.asm):00297                 ; Block assignment table
                      (         main.asm):00298                 ; ======================
                      (         main.asm):00299                 
                      (         main.asm):00300                     ORG $FC00
                      (         main.asm):00301                 
FC00                  (         main.asm):00302                 BlockTable:
FC00 0000000000000000 (         main.asm):00303                     FILL $00,BlkTblSize         ; Clear area with 0's to indicate bank RAM block usage
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
     0000000000000000
                      (         main.asm):00304                 
                      (         main.asm):00305                 ;      _                             
                      (         main.asm):00306                 ;     | |  _   _   _ __ ___    _ __  
                      (         main.asm):00307                 ;  _  | | | | | | | '_ ` _ \  | '_ \ 
                      (         main.asm):00308                 ; | |_| | | |_| | | | | | | | | |_) |
                      (         main.asm):00309                 ;  \___/   \__,_| |_| |_| |_| | .__/ 
                      (         main.asm):00310                 ;                             |_|    
                      (         main.asm):00311                 ;
                      (         main.asm):00312                 ; Subroutine jump table to be called by external programs
                      (         main.asm):00313                 ; =======================================================
                      (         main.asm):00314                 
                      (         main.asm):00315                     ORG $FD00
                      (         main.asm):00316                 
FD00                  (         main.asm):00317                 JmpStart:
FD00 A15F             (         main.asm):00318                 JmpCls:             .dw         Cls
FD02 A1E3             (         main.asm):00319                 JmpDelChar:         .dw         DelChar
FD04 A1F9             (         main.asm):00320                 JmpGetStrByte:      .dw         GetStrByte
FD06 A268             (         main.asm):00321                 JmpGetStrNibble:    .dw         GetStrNibble
FD08 A28E             (         main.asm):00322                 JmpGetStrWord:      .dw         GetStrWord
FD0A A2FD             (         main.asm):00323                 JmpInByte:          .dw         InByte
FD0C A1A8             (         main.asm):00324                 JmpInChar:          .dw         InChar
FD0E A1B3             (         main.asm):00325                 JmpInCharNW:        .dw         InCharNW
FD10 A30E             (         main.asm):00326                 JmpInStr:           .dw         InStr
FD12 A37D             (         main.asm):00327                 JmpInWord:          .dw         InWord
FD14 A1C2             (         main.asm):00328                 JmpOutChar:         .dw         OutChar
FD16 A3D7             (         main.asm):00329                 JmpOutByte:         .dw         OutByte
FD18 A3F9             (         main.asm):00330                 JmpOutCRLF:         .dw         OutCRLF
FD1A A407             (         main.asm):00331                 JmpOutNibble:       .dw         OutNibble
FD1C A41F             (         main.asm):00332                 JmpOutStr:          .dw         OutStr
FD1E A44A             (         main.asm):00333                 JmpOutWord:         .dw         OutWord
FD20 A08D             (         main.asm):00334                 JmpAscToBinNibble:  .dw         AscToBinNibble
FD22 A0A0             (         main.asm):00335                 JmpAscToBinByte:    .dw         AscToBinByte
FD24 A0B6             (         main.asm):00336                 JmpAscToBinWord:    .dw         AscToBinWord
FD26 A0C8             (         main.asm):00337                 JmpBinToAscNibble:  .dw         BinToAscNibble
FD28 A0D8             (         main.asm):00338                 JmpBinToAscByte:    .dw         BinToAscByte
FD2A A0F4             (         main.asm):00339                 JmpBinToAscWord:    .dw         BinToAscWord
FD2C A105             (         main.asm):00340                 JmpBinToBcd:        .dw         BinToBcd
FD2E A151             (         main.asm):00341                 JmpUpperCase:       .dw         UpperCase
FD30 A39C             (         main.asm):00342                 JmpOutBcd:          .dw         OutBcd
FD32                  (         main.asm):00343                 JmpTableEnd:
                      (         main.asm):00344                 
FD32 4A4A4A4A4A4A4A4A (         main.asm):00345                     FILL 'J',ConstRAM-JmpTableEnd ; Clear area with $00
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A4A4A
     4A4A4A4A4A4A
                      (         main.asm):00346                 
                      (         main.asm):00347                 ;   ____                         _                     _   
                      (         main.asm):00348                 ;  / ___|   ___    _ __    ___  | |_    __ _   _ __   | |_ 
                      (         main.asm):00349                 ; | |      / _ \  | '_ \  / __| | __|  / _` | | '_ \  | __|
                      (         main.asm):00350                 ; | |___  | (_) | | | | | \__ \ | |_  | (_| | | | | | | |_ 
                      (         main.asm):00351                 ;  \____|  \___/  |_| |_| |___/  \__|  \__,_| |_| |_|  \__|
                      (         main.asm):00352                 ;
                      (         main.asm):00353                 ; This range is constant to all upper 8th block in a RAM banking system
                      (         main.asm):00354                 ; =====================================================================
                      (         main.asm):00355                 
                      (         main.asm):00356                     PRAGMA cc
                      (         main.asm):00357                     ORG $FE00                   ; Constant RAM ($FE00-$FEFF)
                      (         main.asm):00358                     
FE00                  (         main.asm):00359                 ConstRAM:
FE00                  (         main.asm):00360                     .DS     256                 
                      (         main.asm):00361                 
                      (         main.asm):00362                     ORG $FF00                   ; I/O range ($FF00-$FFEF)
                      (         main.asm):00363                 
FF00                  (         main.asm):00364                 InputOutputRange:
FF00                  (         main.asm):00365                     .DS     240
                      (         main.asm):00366                 
                      (         main.asm):00367                     ORG $FFF0                   ; Reset and Interrupt vectors ($FFF0-$FFFF)
                      (         main.asm):00368                 
FFF0                  (         main.asm):00369                 Vectors:
FFF0 EBBD             (         main.asm):00370                     .dw         IllegalDiv0         ; Illegal Opcode and Division by Zero Trap (6309 only)
FFF2 EBBE             (         main.asm):00371                     .dw         SoftInt3            ; SWI3
FFF4 EBBF             (         main.asm):00372                     .dw         SoftInt2            ; SWI2
FFF6 EBC0             (         main.asm):00373                     .dw         SoftInt1            ; SWI
FFF8 EBC1             (         main.asm):00374                     .dw         FIRQInt             ; FIRQ
FFFA EBC2             (         main.asm):00375                     .dw         IRQInt              ; IRQ
FFFC EBC3             (         main.asm):00376                     .dw         NMIInt              ; NMI
FFFE 0000             (         main.asm):00377                     .dw         Reset               ; RESET
                      (         main.asm):00378                 
                      (         main.asm):00379                     END

Symbol Table:
[ G] A1                               07F2
[ G] A2                               03F9
[ G] A3                               01FC
[ G] A4                               00FE
[ G] A5                               007F
[ G] A6                               0040
[ G] A7                               0020
[ G] A8                               0010
[ G] Ab1                              086B
[ G] Ab2                              0435
[ G] Ab3                              021B
[ G] Ab4                              010D
[ G] Ab5                              0087
[ G] Ab6                              0043
[ G] Ab7                              0022
[ G] Ab8                              0011
[ G] AmplA                            0008
[ G] AmplB                            0009
[ G] AmplC                            000A
[ G] As1                              0780
[ G] As2                              03C0
[ G] As3                              01E0
[ G] As4                              00F0
[ G] As5                              0078
[ G] As6                              003C
[ G] As7                              001E
[ G] As8                              000F
[ G] AscToBinByte                     A0A0
[ G] AscToBinNibble                   A08D
[ G] AscToBinNibbleAlpha              A09A
[ G] AscToBinNibbleEnd                A09C
[ G] AscToBinWord                     A0B6
[ G] B1                               0714
[ G] B2                               038A
[ G] B3                               01C5
[ G] B4                               00E2
[ G] B5                               0071
[ G] B6                               0039
[ G] B7                               001C
[ G] B8                               000E
[ G] Bb1                              0780
[ G] Bb2                              03C0
[ G] Bb3                              01E0
[ G] Bb4                              00F0
[ G] Bb5                              0078
[ G] Bb6                              003C
[ G] Bb7                              001E
[ G] Bb8                              000F
[ G] BinToAscByte                     A0D8
[ G] BinToAscNibble                   A0C8
[ G] BinToAscNibbleAlpha              A0D4
[ G] BinToAscNibbleEnd                A0D6
[ G] BinToAscWord                     A0F4
[ G] BinToBcd                         A105
[ G] BlkTblSize                       0100
[ G] BlockTable                       FC00
[ G] BootMsg                          B04D
[ G] BootTune                         AF5D
[ G] BootTuneData                     AF69
[ G] BS                               0008
[ G] BytePerLine                      0010
[ G] C1                               0D5D
[ G] C2                               06AE
[ G] C3                               0357
[ G] C4                               01AC
[ G] C5                               00D6
[ G] C6                               006B
[ G] C7                               0035
[ G] C8                               001B
[ G] Cls                              A15F
[ G] CmdErrorPtr                      ECC4
[ G] CmdHelp                          A50A
[ G] CmdHelpMsg                       B1C3
[ G] CmdList                          B14B
[ G] CmdParse                         A511
[ G] CmdParseChar                     A51F
[ G] CmdParseEnd                      A55A
[ G] CmdParseExecute                  A54C
[ G] CmdParseNone                     A557
[ G] CmdParseSkip                     A532
[ G] CmdParseSkipLoop                 A538
[ G] CmdParseValid                    A544
[ G] CmdPrompt                        A55B
[ G] Com1_Command                     FF6A
[ G] Com1_Control                     FF6B
[ G] Com1_Data                        FF68
[ G] Com1_Status                      FF69
[ G] Com1Init                         A195
[ G] Com1RxNoWait                     A1B3
[ G] Com1RxNoWaitEnd                  A1C1
[ G] Com1RxWait                       A1A8
[ G] Com1Tx                           A1C2
[ G] Com1TxNotReady                   A1C4
[ G] ConstRAM                         FE00
[ G] CR                               000D
[ G] Cs1                              0C9C
[ G] Cs2                              064E
[ G] Cs3                              0327
[ G] Cs4                              0194
[ G] Cs5                              00CA
[ G] Cs6                              0065
[ G] Cs7                              0032
[ G] Cs8                              0019
[ G] CurrAddress                      ECC5
[ G] CurrBank                         ECC7
[ G] D1                               0BE7
[ G] D2                               05F4
[ G] D3                               02FA
[ G] D4                               017D
[ G] D5                               00BE
[ G] D6                               005F
[ G] D7                               0030
[ G] D8                               0018
[ G] Db1                              0C9C
[ G] Db2                              064E
[ G] Db3                              0327
[ G] Db4                              0194
[ G] Db5                              00CA
[ G] Db6                              0065
[ G] Db7                              0032
[ G] Db8                              0019
[ G] DelChar                          A1E3
[ G] DelCharLoop                      A1E7
[ G] Diag512                          A5DC
[ G] Diag512Continue                  A607
[ G] Diag512Loop                      A5F3
[ G] DiagBlock                        A62A
[ G] DiagBlockLoop                    A62D
[ G] DiagCellEnd                      A65A
[ G] DiagCellPattern                  A64E
[ G] DiagEnd                          A5CC
[ G] DiagFail                         A615
[ G] DiagFailMsg                      B47A
[ G] DiagMessage                      B44F
[ G] Diagnostics                      A57D
[ G] DiagPass                         A61C
[ G] DiagPassFail                     A611
[ G] DiagPassMsg                      B473
[ G] DiagSkip                         A623
[ G] DiagSkipMsg                      B481
[ G] DiagTest                         A638
[ G] DiagTestingMsg                   B45D
[ G] Ds1                              0B3C
[ G] Ds2                              059E
[ G] Ds3                              02CF
[ G] Ds4                              0168
[ G] Ds5                              00B4
[ G] Ds6                              005A
[ G] Ds7                              002D
[ G] Ds8                              0016
[ G] Dump                             A65B
[ G] DumpAddr                         A672
[ G] DumpByte                         A683
[ G] DumpChar                         A69C
[ G] DumpCharDot                      A6A7
[ G] DumpCharPrint                    A6A9
[ G] DumpDisplay                      A66A
[ G] DumpEnd                          A6BE
[ G] DumpInvalidAddress               A6BB
[ G] E1                               0A9B
[ G] E2                               054D
[ G] E3                               02A7
[ G] E4                               0153
[ G] E5                               00AA
[ G] E6                               0055
[ G] E7                               002A
[ G] E8                               0015
[ G] Eb1                              0B3C
[ G] Eb2                              059E
[ G] Eb3                              02CF
[ G] Eb4                              0168
[ G] Eb5                              00B4
[ G] Eb6                              005A
[ G] Eb7                              002D
[ G] Eb8                              0016
[ G] Eighth                           0010
[ G] Enable                           0007
[ G] EnvCoarse                        000C
[ G] EnvFine                          000B
[ G] EnvShapeCycle                    000D
[ G] EOD                              00FF
[ G] EOT                              0000
[ G] ErrInvalidAddress                A4BC
[ G] ErrInvalidAddrMsg                B488
[ G] ErrInvalidByte                   A4C9
[ G] ErrInvalidByteMsg                B49B
[ G] ErrInvalidCmdMsg                 B4DE
[ G] ErrInvalidCommand                A4D6
[ G] ErrInvalidParameter              A4E3
[ G] ErrInvalidParamMsg               B4AB
[ G] ErrNoParameter                   A4F0
[ G] ErrNoParameterMsg                B4C0
[ G] ErrorPointerLoop                 A4AA
[ G] ErrPointer                       A4A3
[ G] ErrSyntaxError                   A4FD
[ G] ErrSyntaxErrorMsg                B4F1
[ G] ESC                              001B
[ G] F1                               0A02
[ G] F2                               0501
[ G] F3                               0281
[ G] F4                               0140
[ G] F5                               00A0
[ G] F6                               0052
[ G] F7                               0028
[ G] F8                               0014
[ G] FIRQInt                          EBC1
[ G] Fs1                              0973
[ G] Fs2                              04B9
[ G] Fs3                              025D
[ G] Fs4                              012E
[ G] Fs5                              0097
[ G] Fs6                              004C
[ G] Fs7                              0026
[ G] Fs8                              0013
[ G] Full                             0F00
[ G] G1                               08EB
[ G] G2                               0475
[ G] G3                               023B
[ G] G4                               011D
[ G] G5                               008F
[ G] G6                               0047
[ G] G7                               0024
[ G] G8                               0012
[ G] Gb1                              0973
[ G] Gb2                              04B9
[ G] Gb3                              025D
[ G] Gb4                              012E
[ G] Gb5                              0097
[ G] Gb6                              004C
[ G] Gb7                              0026
[ G] Gb8                              0013
[ G] GetStrByte                       A1F9
[ G] GetStrByteCount                  A202
[ G] GetStrByteEnd                    A247
[ G] GetStrByteError                  A245
[ G] GetStrByteFixed                  A24B
[ G] GetStrByteFixedEnd               A266
[ G] GetStrByteFixedErr               A264
[ G] GetStrByteGood                   A241
[ G] GetStrByteParse                  A20D
[ G] GetStrByteParse2                 A21E
[ G] GetStrByteParseMore              A237
[ G] GetStrNibble                     A268
[ G] GetStrNibbleEnd                  A288
[ G] GetStrNibbleError                A27F
[ G] GetStrNibbleGood                 A283
[ G] GetStrWord                       A28E
[ G] GetStrWordCount                  A295
[ G] GetStrWordEnd                    A2FA
[ G] GetStrWordError                  A2F8
[ G] GetStrWordGood                   A2F2
[ G] GetStrWordParse                  A2A0
[ G] GetStrWordParse2                 A2B3
[ G] GetStrWordParse3                 A2C0
[ G] GetStrWordParse4                 A2D4
[ G] GetStrWordParseMore              A2E8
[ G] Gs1                              086B
[ G] Gs2                              0435
[ G] Gs3                              021B
[ G] Gs4                              010D
[ G] Gs5                              0087
[ G] Gs6                              0043
[ G] Gs7                              0022
[ G] Gs8                              0011
[ G] Half                             0040
[ G] High                             0B00
[ G] IllegalDiv0                      EBBD
[ G] InByte                           A2FD
[ G] InChar                           A1A8
[ G] InCharNW                         A1B3
[ G] Init                             A000
[ G] INIT0                            FF90
[ G] INIT1                            FF91
[ G] InputOutputRange                 FF00
[ G] InStr                            A30E
[ G] InStrBackspace                   A32E
[ G] InStrBuffer                      EBC4
[ G] InStrClearCarry                  A377
[ G] InStrEnd                         A379
[ G] InStrEscape                      A345
[ G] InStrPrintCR                     A367
[ G] InStrReadChar                    A318
[ G] InStrStoreChar                   A35E
[ G] IntTest                          A6BF
[ G] IntTestEnd                       A6D9
[ G] IntTestLoop                      A6C1
[ G] IntVector                        FF09
[ G] InWord                           A37D
[ G] IOportA                          000E
[ G] IOportB                          000F
[ G] IRQInt                           EBC2
[ G] JmpAscToBinByte                  FD22
[ G] JmpAscToBinNibble                FD20
[ G] JmpAscToBinWord                  FD24
[ G] JmpBinToAscByte                  FD28
[ G] JmpBinToAscNibble                FD26
[ G] JmpBinToAscWord                  FD2A
[ G] JmpBinToBcd                      FD2C
[ G] JmpCls                           FD00
[ G] JmpDelChar                       FD02
[ G] JmpGetStrByte                    FD04
[ G] JmpGetStrNibble                  FD06
[ G] JmpGetStrWord                    FD08
[ G] JmpInByte                        FD0A
[ G] JmpInChar                        FD0C
[ G] JmpInCharNW                      FD0E
[ G] JmpInStr                         FD10
[ G] JmpInWord                        FD12
[ G] JmpOutBcd                        FD30
[ G] JmpOutByte                       FD16
[ G] JmpOutChar                       FD14
[ G] JmpOutCRLF                       FD18
[ G] JmpOutNibble                     FD1A
[ G] JmpOutStr                        FD1C
[ G] JmpOutWord                       FD1E
[ G] JmpStart                         FD00
[ G] JmpTableEnd                      FD32
[ G] JmpUpperCase                     FD2E
[ G] LF                               000A
[ G] LoadCheckFlag                    A77D
[ G] LoadChecksum                     A74A
[ G] LoadData                         A73A
[ G] LoadEnd                          A7A7
[ G] LoadEOF                          A769
[ G] LoadFailedErr                    B56D
[ G] LoadFailure                      A75E
[ G] LoadIntelHex                     A6DA
[ G] LoadRecord                       A6E2
[ G] LoadRecordErr                    B557
[ G] LoadRecordType                   A71D
[ G] LoadStart                        A6F2
[ G] LoadStartMsg                     B501
[ G] LoadSuccess                      A78D
[ G] LoadSuccessMsg                   B595
[ G] LoadUserAbortErr                 B53C
[ G] Low                              0300
[ G] Main                             A068
[ G] MainRunExec                      A083
[ G] mario1                           B77D
[ G] mario2                           B829
[ G] mario3                           B9C5
[ G] mario4                           BCD9
[ G] mario6                           BF99
[ G] mario7                           C2D9
[ G] mario9                           C5E5
[ G] MarioSong                        AEF7
[ G] MaxCmdSize                       0046
[ G] MemoryMap                        A7A8
[ G] MemoryMapMsg                     B5AB
[ G] MemorySizeMsg                    B693
[ G] MemSize                          A7FB
[ G] MemSizeDisplay                   A842
[ G] MemSizeEmpty                     A8AB
[ G] MemSizeEnd                       A87D
[ G] MemSizeValEnd                    A8AD
[ G] MemSizeValidate                  A88D
[ G] MemTag                           A7D0
[ G] MemTagEnd                        A7FA
[ G] MemTagLoop                       A7D7
[ G] Mid                              0700
[ G] Millisecond                      A1D1
[ G] MillisecondB                     A1DD
[ G] MillisecondBLoop                 A1D3
[ G] MillisecondEnd                   A1E0
[ G] MillisecondWLoop                 A1D7
[ G] Mmu                              A8B1
[ G] MmuEnabled                       A91E
[ G] MmuList                          B762
[ G] MmuMsg                           B704
[ G] MmuOff                           A983
[ G] MmuOn                            A97A
[ G] MmuParseChar                     A8C6
[ G] MmuParseExecute                  A8F4
[ G] MmuParseNone                     A8FC
[ G] MmuParseSkip                     A8D9
[ G] MmuParseSkipLoop                 A8E0
[ G] MmuParseValid                    A8EC
[ G] MmuReset                         A9B3
[ G] MmuResetLoop                     A9C1
[ G] MmuStatus                        A900
[ G] MmuStatusEnd                     A979
[ G] MmuTask                          A98C
[ G] MmuTask0Loop                     A947
[ G] MmuTask1Loop                     A963
[ G] MmuTaskErr                       A9AF
[ G] MmuTaskNum                       A928
[ G] MmuTaskNum1                      A939
[ G] MmuTaskRegs                      A93E
[ G] MmuTaskSet0                      A99D
[ G] MmuTaskSet1                      A9A6
[ G] MonkeyIslandData                 C6C1
[ G] MonkeyIslandSong                 AF51
[ G] NMIInt                           EBC3
[ G] Noise                            0006
[ G] Noise1                           D000
[ G] Noise2                           E000
[ G] Noise3                           F000
[ G] None                             0000
[ G] NULL                             0000
[ G] Off                              0000
[ G] OutBcd                           A39C
[ G] OutBcdSub                        A3BA
[ G] OutBcdSubEnd                     A3D6
[ G] OutBcdSubLSB                     A3C6
[ G] OutBcdSubLSB2                    A3D3
[ G] OutByte                          A3D7
[ G] OutByteDigit1NLZ                 A3F2
[ G] OutByteLZ                        A3D7
[ G] OutByteNLZ                       A3E6
[ G] OutChar                          A1C2
[ G] OutCRLF                          A3F9
[ G] OutNibble                        A407
[ G] OutNibbleLSB                     A407
[ G] OutNibbleMSB                     A411
[ G] OutStr                           A41F
[ G] OutStrEnd                        A42E
[ G] OutStrLoop                       A421
[ G] OutStrLZ                         A41F
[ G] OutStrNLZ                        A430
[ G] OutStrNLZEnd                     A448
[ G] OutStrNLZLoop                    A433
[ G] OutStrNLZPrintChar               A441
[ G] OutWord                          A44A
[ G] OutWordNLZ                       A467
[ G] OutWordNLZ2                      A47A
[ G] OutWordNLZ3                      A48A
[ G] OutWordNLZ4                      A49A
[ G] OutWordNLZp2                     A485
[ G] OutWordNLZp3                     A495
[ G] Pause                            0002
[ G] Peek                             A9D1
[ G] PeekDisplay                      A9E0
[ G] PeekEnd                          A9FA
[ G] PeekInvalidAddr                  A9F7
[ G] PlayCmd                          ACAA
[ G] PlayCmd2                         ACB8
[ G] PlayCmdDefault                   ACBF
[ G] PlayCmdInvalid                   ACC2
[ G] PlayNote                         ACC6
[ G] PlayNoteDuration                 AEC2
[ G] PlayNoteDurLoop                  AECA
[ G] PlayNoteEnd                      AED0
[ G] PlayNoteNoChannel                AEC0
[ G] PlayNoteNoise1                   AEAB
[ G] PlayNoteNoise2                   AEB2
[ G] PlayNoteNoise3                   AEB9
[ G] PlayNoteVoice1                   ACCB
[ G] PlayNoteVoice10                  AE33
[ G] PlayNoteVoice11                  AE5B
[ G] PlayNoteVoice12                  AE83
[ G] PlayNoteVoice2                   ACF3
[ G] PlayNoteVoice3                   AD1B
[ G] PlayNoteVoice4                   AD43
[ G] PlayNoteVoice5                   AD6B
[ G] PlayNoteVoice6                   AD93
[ G] PlayNoteVoice7                   ADBB
[ G] PlayNoteVoice8                   ADE3
[ G] PlayNoteVoice9                   AE0B
[ G] PlayTune                         AED2
[ G] PlayTuneEnd                      AEF6
[ G] Poke                             A9FB
[ G] PokeEnd                          AA3A
[ G] PokeInvalidAddress               AA32
[ G] PokeInvalidByte                  AA2D
[ G] PokeNoParameters                 AA37
[ G] PrintRegisters                   AA3B
[ G] PromptSize                       0009
[ G] PsgInit                          AC39
[ G] PullRegisters                    AB5E
[ G] PushRegisters                    AB2E
[ G] Quarter                          0020
[ G] RegA                             ECCB
[ G] RegB                             ECCC
[ G] RegCC                            ECC9
[ G] RegDP                            ECCA
[ G] RegE                             ECCD
[ G] RegF                             ECCE
[ G] RegPC                            ECD7
[ G] RegS                             ECD5
[ G] RegU                             ECD3
[ G] RegX                             ECCF
[ G] RegY                             ECD1
[ G] Reset                            0000
[ G] RevMajor                         0000
[ G] RevMinor                         0007
[ G] RomDisable                       FF08
[ G] RomStart                         A000
[ G] Run                              AB7D
[ G] RunEnd                           AB9F
[ G] RunError                         AB9C
[ G] RunExecute                       AB92
[ G] RunFlag                          ECC8
[ G] RunGetAddress                    AB84
[ G] RunValidate                      AB8C
[ G] RxBuffer                         ECE0
[ G] ScrHorzRes                       0050
[ G] ScrVertRes                       0018
[ G] SetAddress                       ABA0
[ G] SetAddressDefault                ABB6
[ G] SetAddressEnd                    ABBC
[ G] SetAddressError                  ABB1
[ G] ShadowBlk                        5F00
[ G] ShadowCopy                       0005
[ G] ShadowEnd                        0024
[ G] Sixteenth                        0008
[ G] Sixth                            0018
[ G] Sixtieth                         0002
[ G] SkipSpaces                       ABBD
[ G] SkipSpacesEnd                    ABCE
[ G] SkipSpacesLoop                   ABBF
[ G] Snd1Addr                         FF11
[ G] Snd1Read                         FF11
[ G] Snd1Write                        FF10
[ G] Snd2Addr                         FF13
[ G] Snd2Read                         FF13
[ G] Snd2Write                        FF12
[ G] Snd3Addr                         FF15
[ G] Snd3Read                         FF15
[ G] Snd3Write                        FF14
[ G] Snd4Addr                         FF17
[ G] Snd4Read                         FF17
[ G] Snd4Write                        FF16
[ G] SndDuration                      EDE5
[ G] SndNoteCoarse                    EDE2
[ G] SndNoteFine                      EDE3
[ G] SndTempo                         EDE0
[ G] SndVoice                         EDE1
[ G] SndVolume                        EDE4
[ G] SoftInt1                         EBC0
[ G] SoftInt2                         EBBF
[ G] SoftInt3                         EBBE
[ G] SPACE                            0020
[ G] StackEnd                         FA00
[ G] SysSize                          0100
[ G] SysStack                         FC00
[ G] TAB                              0009
[ G] TASK0                            FFA0
[ G] TASK1                            FFA8
[ G] TempByte                         ECD9
[ G] TempQ1                           ECDC
[ G] TempQ2                           ECDD
[ G] TempQ3                           ECDE
[ G] TempQ4                           ECDF
[ G] TempQuad                         ECDC
[ G] TempW1                           ECDA
[ G] TempW2                           ECDB
[ G] TempWord                         ECDA
[ G] Thirtieth                        0004
[ G] ToneA_Coarse                     0001
[ G] ToneA_Fine                       0000
[ G] ToneB_Coarse                     0003
[ G] ToneB_Fine                       0002
[ G] ToneC_Coarse                     0005
[ G] ToneC_Fine                       0004
[ G] Twelth                           000C
[ G] UpperCase                        A151
[ G] UpperCaseEnd                     A15D
[ G] UsrSize                          0100
[ G] UsrStack                         FB00
[ G] VarEnd                           EDE6
[ G] VarStart                         EBC4
[ G] Vectors                          FFF0
[ G] Voice1                           1000
[ G] Voice10                          A000
[ G] Voice11                          B000
[ G] Voice12                          C000
[ G] Voice2                           2000
[ G] Voice3                           3000
[ G] Voice4                           4000
[ G] Voice5                           5000
[ G] Voice6                           6000
[ G] Voice7                           7000
[ G] Voice8                           8000
[ G] Voice9                           9000
[ G] Warm                             A011
[ G] Warmboot                         ABD0
[ G] Whole                            0080
[ G] Write                            ABD3
[ G] WriteAddressError                AC0C
[ G] WriteByteError                   AC10
[ G] WriteByteLoop                    ABF6
[ G] WriteConfirm                     AC14
[ G] WriteConfirmLoop                 AC21
[ G] WriteEnd                         AC31
[ G] WriteNoParameter                 AC08
[ G] XX                               0FFF
